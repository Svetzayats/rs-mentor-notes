{"version":3,"file":"reveal.esm.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/utils/constants.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/scrollview.js","../js/controllers/printview.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = (a, b) => {\n  for (let i in b) {\n    a[i] = b[i];\n  }\n\n  return a;\n};\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = (el, selector) => {\n  return Array.from(el.querySelectorAll(selector));\n};\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = (el, className, value) => {\n  if (value) {\n    el.classList.add(className);\n  } else {\n    el.classList.remove(className);\n  }\n};\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = (value) => {\n  if (typeof value === 'string') {\n    if (value === 'null') return null;\n    else if (value === 'true') return true;\n    else if (value === 'false') return false;\n    else if (value.match(/^-?[\\d\\.]+$/)) return parseFloat(value);\n  }\n\n  return value;\n};\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = (a, b) => {\n  let dx = a.x - b.x,\n    dy = a.y - b.y;\n\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = (element, transform) => {\n  element.style.transform = transform;\n};\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = (target, selector) => {\n  let matchesMethod =\n    target.matches || target.matchesSelector || target.msMatchesSelector;\n\n  return !!(matchesMethod && matchesMethod.call(target, selector));\n};\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = (target, selector) => {\n  // Native Element.closest\n  if (typeof target.closest === 'function') {\n    return target.closest(selector);\n  }\n\n  // Polyfill\n  while (target) {\n    if (matches(target, selector)) {\n      return target;\n    }\n\n    // Keep searching\n    target = target.parentNode;\n  }\n\n  return null;\n};\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = (element) => {\n  element = element || document.documentElement;\n\n  // Check which implementation is available\n  let requestMethod =\n    element.requestFullscreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitRequestFullScreen ||\n    element.mozRequestFullScreen ||\n    element.msRequestFullscreen;\n\n  if (requestMethod) {\n    requestMethod.apply(element);\n  }\n};\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = (\n  container,\n  tagname,\n  classname,\n  innerHTML = ''\n) => {\n  // Find all nodes matching the description\n  let nodes = container.querySelectorAll('.' + classname);\n\n  // Check all matches to find one which is a direct child of\n  // the specified container\n  for (let i = 0; i < nodes.length; i++) {\n    let testNode = nodes[i];\n    if (testNode.parentNode === container) {\n      return testNode;\n    }\n  }\n\n  // If no node was found, create it now\n  let node = document.createElement(tagname);\n  node.className = classname;\n  node.innerHTML = innerHTML;\n  container.appendChild(node);\n\n  return node;\n};\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = (value) => {\n  let tag = document.createElement('style');\n  tag.type = 'text/css';\n\n  if (value && value.length > 0) {\n    if (tag.styleSheet) {\n      tag.styleSheet.cssText = value;\n    } else {\n      tag.appendChild(document.createTextNode(value));\n    }\n  }\n\n  document.head.appendChild(tag);\n\n  return tag;\n};\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n  let query = {};\n\n  location.search.replace(/[A-Z0-9]+?=([\\w\\.%-]*)/gi, (a) => {\n    query[a.split('=').shift()] = a.split('=').pop();\n  });\n\n  // Basic deserialization\n  for (let i in query) {\n    let value = query[i];\n\n    query[i] = deserialize(unescape(value));\n  }\n\n  // Do not accept new dependencies via query config to avoid\n  // the potential of malicious script injection\n  if (typeof query['dependencies'] !== 'undefined')\n    delete query['dependencies'];\n\n  return query;\n};\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = (element, height = 0) => {\n  if (element) {\n    let newHeight,\n      oldHeight = element.style.height;\n\n    // Change the .stretch element height to 0 in order find the height of all\n    // the other elements\n    element.style.height = '0px';\n\n    // In Overview mode, the parent (.slide) height is set of 700px.\n    // Restore it temporarily to its natural height.\n    element.parentNode.style.height = 'auto';\n\n    newHeight = height - element.parentNode.offsetHeight;\n\n    // Restore the old height, just in case\n    element.style.height = oldHeight + 'px';\n\n    // Clear the parent (.slide) height. .removeProperty works in IE9+\n    element.parentNode.style.removeProperty('height');\n\n    return newHeight;\n  }\n\n  return height;\n};\n\nconst fileExtensionToMimeMap = {\n  mp4: 'video/mp4',\n  m4a: 'video/mp4',\n  ogv: 'video/ogg',\n  mpeg: 'video/mpeg',\n  webm: 'video/webm',\n};\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = (filename = '') => {\n  return fileExtensionToMimeMap[filename.split('.').pop()];\n};\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = (url = '') => {\n  return encodeURI(url)\n    .replace(/%5B/g, '[')\n    .replace(/%5D/g, ']')\n    .replace(\n      /[!'()*]/g,\n      (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n    );\n};\n","const UA = navigator.userAgent;\n\nexport const isMobile =\n  /(iphone|ipod|ipad|android)/gi.test(UA) ||\n  (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1); // iPadOS\n\nexport const isChrome = /chrome/i.test(UA) && !/edge/i.test(UA);\n\nexport const isAndroid = /android/gi.test(UA);\n","/**\n * fitty v2.3.7 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import {\n  extend,\n  queryAll,\n  closest,\n  getMimeTypeFromFile,\n  encodeRFC3986URI,\n} from '../utils/util.js';\nimport { isMobile } from '../utils/device.js';\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    this.startEmbeddedIframe = this.startEmbeddedIframe.bind(this);\n  }\n\n  /**\n   * Should the given element be preloaded?\n   * Decides based on local element attributes and global config.\n   *\n   * @param {HTMLElement} element\n   */\n  shouldPreload(element) {\n    if (this.Reveal.isScrollView()) {\n      return true;\n    }\n\n    // Prefer an explicit global preload setting\n    let preload = this.Reveal.getConfig().preloadIframes;\n\n    // If no global setting is available, fall back on the element's\n    // own preload setting\n    if (typeof preload !== 'boolean') {\n      preload = element.hasAttribute('data-preload');\n    }\n\n    return preload;\n  }\n\n  /**\n   * Called when the given slide is within the configured view\n   * distance. Shows the slide element and loads any content\n   * that is set to load lazily (data-src).\n   *\n   * @param {HTMLElement} slide Slide to show\n   */\n  load(slide, options = {}) {\n    // Show the slide element\n    slide.style.display = this.Reveal.getConfig().display;\n\n    // Media elements with data-src attributes\n    queryAll(\n      slide,\n      'img[data-src], video[data-src], audio[data-src], iframe[data-src]'\n    ).forEach((element) => {\n      if (element.tagName !== 'IFRAME' || this.shouldPreload(element)) {\n        element.setAttribute('src', element.getAttribute('data-src'));\n        element.setAttribute('data-lazy-loaded', '');\n        element.removeAttribute('data-src');\n      }\n    });\n\n    // Media elements with <source> children\n    queryAll(slide, 'video, audio').forEach((media) => {\n      let sources = 0;\n\n      queryAll(media, 'source[data-src]').forEach((source) => {\n        source.setAttribute('src', source.getAttribute('data-src'));\n        source.removeAttribute('data-src');\n        source.setAttribute('data-lazy-loaded', '');\n        sources += 1;\n      });\n\n      // Enable inline video playback in mobile Safari\n      if (isMobile && media.tagName === 'VIDEO') {\n        media.setAttribute('playsinline', '');\n      }\n\n      // If we rewrote sources for this video/audio element, we need\n      // to manually tell it to load from its new origin\n      if (sources > 0) {\n        media.load();\n      }\n    });\n\n    // Show the corresponding background element\n    let background = slide.slideBackgroundElement;\n    if (background) {\n      background.style.display = 'block';\n\n      let backgroundContent = slide.slideBackgroundContentElement;\n      let backgroundIframe = slide.getAttribute('data-background-iframe');\n\n      // If the background contains media, load it\n      if (background.hasAttribute('data-loaded') === false) {\n        background.setAttribute('data-loaded', 'true');\n\n        let backgroundImage = slide.getAttribute('data-background-image'),\n          backgroundVideo = slide.getAttribute('data-background-video'),\n          backgroundVideoLoop = slide.hasAttribute(\n            'data-background-video-loop'\n          ),\n          backgroundVideoMuted = slide.hasAttribute(\n            'data-background-video-muted'\n          );\n\n        // Images\n        if (backgroundImage) {\n          // base64\n          if (/^data:/.test(backgroundImage.trim())) {\n            backgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n          }\n          // URL(s)\n          else {\n            backgroundContent.style.backgroundImage = backgroundImage\n              .split(',')\n              .map((background) => {\n                // Decode URL(s) that are already encoded first\n                let decoded = decodeURI(background.trim());\n                return `url(${encodeRFC3986URI(decoded)})`;\n              })\n              .join(',');\n          }\n        }\n        // Videos\n        else if (backgroundVideo && !this.Reveal.isSpeakerNotes()) {\n          let video = document.createElement('video');\n\n          if (backgroundVideoLoop) {\n            video.setAttribute('loop', '');\n          }\n\n          if (backgroundVideoMuted) {\n            video.muted = true;\n          }\n\n          // Enable inline playback in mobile Safari\n          //\n          // Mute is required for video to play when using\n          // swipe gestures to navigate since they don't\n          // count as direct user actions :'(\n          if (isMobile) {\n            video.muted = true;\n            video.setAttribute('playsinline', '');\n          }\n\n          // Support comma separated lists of video sources\n          backgroundVideo.split(',').forEach((source) => {\n            const sourceElement = document.createElement('source');\n            sourceElement.setAttribute('src', source);\n\n            let type = getMimeTypeFromFile(source);\n            if (type) {\n              sourceElement.setAttribute('type', type);\n            }\n\n            video.appendChild(sourceElement);\n          });\n\n          backgroundContent.appendChild(video);\n        }\n        // Iframes\n        else if (backgroundIframe && options.excludeIframes !== true) {\n          let iframe = document.createElement('iframe');\n          iframe.setAttribute('allowfullscreen', '');\n          iframe.setAttribute('mozallowfullscreen', '');\n          iframe.setAttribute('webkitallowfullscreen', '');\n          iframe.setAttribute('allow', 'autoplay');\n\n          iframe.setAttribute('data-src', backgroundIframe);\n\n          iframe.style.width = '100%';\n          iframe.style.height = '100%';\n          iframe.style.maxHeight = '100%';\n          iframe.style.maxWidth = '100%';\n\n          backgroundContent.appendChild(iframe);\n        }\n      }\n\n      // Start loading preloadable iframes\n      let backgroundIframeElement =\n        backgroundContent.querySelector('iframe[data-src]');\n      if (backgroundIframeElement) {\n        // Check if this iframe is eligible to be preloaded\n        if (\n          this.shouldPreload(background) &&\n          !/autoplay=(1|true|yes)/gi.test(backgroundIframe)\n        ) {\n          if (\n            backgroundIframeElement.getAttribute('src') !== backgroundIframe\n          ) {\n            backgroundIframeElement.setAttribute('src', backgroundIframe);\n          }\n        }\n      }\n    }\n\n    this.layout(slide);\n  }\n\n  /**\n   * Applies JS-dependent layout helpers for the scope.\n   */\n  layout(scopeElement) {\n    // Autosize text with the r-fit-text class based on the\n    // size of its container. This needs to happen after the\n    // slide is visible in order to measure the text.\n    Array.from(scopeElement.querySelectorAll('.r-fit-text')).forEach(\n      (element) => {\n        fitty(element, {\n          minSize: 24,\n          maxSize: this.Reveal.getConfig().height * 0.8,\n          observeMutations: false,\n          observeWindow: false,\n        });\n      }\n    );\n  }\n\n  /**\n   * Unloads and hides the given slide. This is called when the\n   * slide is moved outside of the configured view distance.\n   *\n   * @param {HTMLElement} slide\n   */\n  unload(slide) {\n    // Hide the slide element\n    slide.style.display = 'none';\n\n    // Hide the corresponding background element\n    let background = this.Reveal.getSlideBackground(slide);\n    if (background) {\n      background.style.display = 'none';\n\n      // Unload any background iframes\n      queryAll(background, 'iframe[src]').forEach((element) => {\n        element.removeAttribute('src');\n      });\n    }\n\n    // Reset lazy-loaded media elements with src attributes\n    queryAll(\n      slide,\n      'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]'\n    ).forEach((element) => {\n      element.setAttribute('data-src', element.getAttribute('src'));\n      element.removeAttribute('src');\n    });\n\n    // Reset lazy-loaded media elements with <source> children\n    queryAll(\n      slide,\n      'video[data-lazy-loaded] source[src], audio source[src]'\n    ).forEach((source) => {\n      source.setAttribute('data-src', source.getAttribute('src'));\n      source.removeAttribute('src');\n    });\n  }\n\n  /**\n   * Enforces origin-specific format rules for embedded media.\n   */\n  formatEmbeddedContent() {\n    let _appendParamToIframeSource = (sourceAttribute, sourceURL, param) => {\n      queryAll(\n        this.Reveal.getSlidesElement(),\n        'iframe[' + sourceAttribute + '*=\"' + sourceURL + '\"]'\n      ).forEach((el) => {\n        let src = el.getAttribute(sourceAttribute);\n        if (src && src.indexOf(param) === -1) {\n          el.setAttribute(\n            sourceAttribute,\n            src + (!/\\?/.test(src) ? '?' : '&') + param\n          );\n        }\n      });\n    };\n\n    // YouTube frames must include \"?enablejsapi=1\"\n    _appendParamToIframeSource('src', 'youtube.com/embed/', 'enablejsapi=1');\n    _appendParamToIframeSource(\n      'data-src',\n      'youtube.com/embed/',\n      'enablejsapi=1'\n    );\n\n    // Vimeo frames must include \"?api=1\"\n    _appendParamToIframeSource('src', 'player.vimeo.com/', 'api=1');\n    _appendParamToIframeSource('data-src', 'player.vimeo.com/', 'api=1');\n  }\n\n  /**\n   * Start playback of any embedded content inside of\n   * the given element.\n   *\n   * @param {HTMLElement} element\n   */\n  startEmbeddedContent(element) {\n    if (element && !this.Reveal.isSpeakerNotes()) {\n      // Restart GIFs\n      queryAll(element, 'img[src$=\".gif\"]').forEach((el) => {\n        // Setting the same unchanged source like this was confirmed\n        // to work in Chrome, FF & Safari\n        el.setAttribute('src', el.getAttribute('src'));\n      });\n\n      // HTML5 media elements\n      queryAll(element, 'video, audio').forEach((el) => {\n        if (closest(el, '.fragment') && !closest(el, '.fragment.visible')) {\n          return;\n        }\n\n        // Prefer an explicit global autoplay setting\n        let autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n        // If no global setting is available, fall back on the element's\n        // own autoplay setting\n        if (typeof autoplay !== 'boolean') {\n          autoplay =\n            el.hasAttribute('data-autoplay') ||\n            !!closest(el, '.slide-background');\n        }\n\n        if (autoplay && typeof el.play === 'function') {\n          // If the media is ready, start playback\n          if (el.readyState > 1) {\n            this.startEmbeddedMedia({ target: el });\n          }\n          // Mobile devices never fire a loaded event so instead\n          // of waiting, we initiate playback\n          else if (isMobile) {\n            let promise = el.play();\n\n            // If autoplay does not work, ensure that the controls are visible so\n            // that the viewer can start the media on their own\n            if (\n              promise &&\n              typeof promise.catch === 'function' &&\n              el.controls === false\n            ) {\n              promise.catch(() => {\n                el.controls = true;\n\n                // Once the video does start playing, hide the controls again\n                el.addEventListener('play', () => {\n                  el.controls = false;\n                });\n              });\n            }\n          }\n          // If the media isn't loaded, wait before playing\n          else {\n            el.removeEventListener('loadeddata', this.startEmbeddedMedia); // remove first to avoid dupes\n            el.addEventListener('loadeddata', this.startEmbeddedMedia);\n          }\n        }\n      });\n\n      // Normal iframes\n      queryAll(element, 'iframe[src]').forEach((el) => {\n        if (closest(el, '.fragment') && !closest(el, '.fragment.visible')) {\n          return;\n        }\n\n        this.startEmbeddedIframe({ target: el });\n      });\n\n      // Lazy loading iframes\n      queryAll(element, 'iframe[data-src]').forEach((el) => {\n        if (closest(el, '.fragment') && !closest(el, '.fragment.visible')) {\n          return;\n        }\n\n        if (el.getAttribute('src') !== el.getAttribute('data-src')) {\n          el.removeEventListener('load', this.startEmbeddedIframe); // remove first to avoid dupes\n          el.addEventListener('load', this.startEmbeddedIframe);\n          el.setAttribute('src', el.getAttribute('data-src'));\n        }\n      });\n    }\n  }\n\n  /**\n   * Starts playing an embedded video/audio element after\n   * it has finished loading.\n   *\n   * @param {object} event\n   */\n  startEmbeddedMedia(event) {\n    let isAttachedToDOM = !!closest(event.target, 'html'),\n      isVisible = !!closest(event.target, '.present');\n\n    if (isAttachedToDOM && isVisible) {\n      event.target.currentTime = 0;\n      event.target.play();\n    }\n\n    event.target.removeEventListener('loadeddata', this.startEmbeddedMedia);\n  }\n\n  /**\n   * \"Starts\" the content of an embedded iframe using the\n   * postMessage API.\n   *\n   * @param {object} event\n   */\n  startEmbeddedIframe(event) {\n    let iframe = event.target;\n\n    if (iframe && iframe.contentWindow) {\n      let isAttachedToDOM = !!closest(event.target, 'html'),\n        isVisible = !!closest(event.target, '.present');\n\n      if (isAttachedToDOM && isVisible) {\n        // Prefer an explicit global autoplay setting\n        let autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n        // If no global setting is available, fall back on the element's\n        // own autoplay setting\n        if (typeof autoplay !== 'boolean') {\n          autoplay =\n            iframe.hasAttribute('data-autoplay') ||\n            !!closest(iframe, '.slide-background');\n        }\n\n        // YouTube postMessage API\n        if (\n          /youtube\\.com\\/embed\\//.test(iframe.getAttribute('src')) &&\n          autoplay\n        ) {\n          iframe.contentWindow.postMessage(\n            '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}',\n            '*'\n          );\n        }\n        // Vimeo postMessage API\n        else if (\n          /player\\.vimeo\\.com\\//.test(iframe.getAttribute('src')) &&\n          autoplay\n        ) {\n          iframe.contentWindow.postMessage('{\"method\":\"play\"}', '*');\n        }\n        // Generic postMessage API\n        else {\n          iframe.contentWindow.postMessage('slide:start', '*');\n        }\n      }\n    }\n  }\n\n  /**\n   * Stop playback of any embedded content inside of\n   * the targeted slide.\n   *\n   * @param {HTMLElement} element\n   */\n  stopEmbeddedContent(element, options = {}) {\n    options = extend(\n      {\n        // Defaults\n        unloadIframes: true,\n      },\n      options\n    );\n\n    if (element && element.parentNode) {\n      // HTML5 media elements\n      queryAll(element, 'video, audio').forEach((el) => {\n        if (!el.hasAttribute('data-ignore') && typeof el.pause === 'function') {\n          el.setAttribute('data-paused-by-reveal', '');\n          el.pause();\n        }\n      });\n\n      // Generic postMessage API for non-lazy loaded iframes\n      queryAll(element, 'iframe').forEach((el) => {\n        if (el.contentWindow) el.contentWindow.postMessage('slide:stop', '*');\n        el.removeEventListener('load', this.startEmbeddedIframe);\n      });\n\n      // YouTube postMessage API\n      queryAll(element, 'iframe[src*=\"youtube.com/embed/\"]').forEach((el) => {\n        if (\n          !el.hasAttribute('data-ignore') &&\n          el.contentWindow &&\n          typeof el.contentWindow.postMessage === 'function'\n        ) {\n          el.contentWindow.postMessage(\n            '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}',\n            '*'\n          );\n        }\n      });\n\n      // Vimeo postMessage API\n      queryAll(element, 'iframe[src*=\"player.vimeo.com/\"]').forEach((el) => {\n        if (\n          !el.hasAttribute('data-ignore') &&\n          el.contentWindow &&\n          typeof el.contentWindow.postMessage === 'function'\n        ) {\n          el.contentWindow.postMessage('{\"method\":\"pause\"}', '*');\n        }\n      });\n\n      if (options.unloadIframes === true) {\n        // Unload lazy-loaded iframes\n        queryAll(element, 'iframe[data-src]').forEach((el) => {\n          // Only removing the src doesn't actually unload the frame\n          // in all browsers (Firefox) so we set it to blank first\n          el.setAttribute('src', 'about:blank');\n          el.removeAttribute('src');\n        });\n      }\n    }\n  }\n}\n","export const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\nexport const HORIZONTAL_BACKGROUNDS_SELECTOR = '.backgrounds>.slide-background';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST =\n  /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX =\n  /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n\n// Slide number formats\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = 'h.v';\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = 'h/v';\nexport const SLIDE_NUMBER_FORMAT_CURRENT = 'c';\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = 'c/t';\n","import {\n  SLIDE_NUMBER_FORMAT_CURRENT,\n  SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n  SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\n  SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL,\n} from '../utils/constants';\n\n/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n  }\n\n  render() {\n    this.element = document.createElement('div');\n    this.element.className = 'slide-number';\n    this.Reveal.getRevealElement().appendChild(this.element);\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    let slideNumberDisplay = 'none';\n    if (config.slideNumber && !this.Reveal.isPrintView()) {\n      if (config.showSlideNumber === 'all') {\n        slideNumberDisplay = 'block';\n      } else if (\n        config.showSlideNumber === 'speaker' &&\n        this.Reveal.isSpeakerNotes()\n      ) {\n        slideNumberDisplay = 'block';\n      }\n    }\n\n    this.element.style.display = slideNumberDisplay;\n  }\n\n  /**\n   * Updates the slide number to match the current slide.\n   */\n  update() {\n    // Update slide number if enabled\n    if (this.Reveal.getConfig().slideNumber && this.element) {\n      this.element.innerHTML = this.getSlideNumber();\n    }\n  }\n\n  /**\n   * Returns the HTML string corresponding to the current slide\n   * number, including formatting.\n   */\n  getSlideNumber(slide = this.Reveal.getCurrentSlide()) {\n    let config = this.Reveal.getConfig();\n    let value;\n    let format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\n\n    if (typeof config.slideNumber === 'function') {\n      value = config.slideNumber(slide);\n    } else {\n      // Check if a custom number format is available\n      if (typeof config.slideNumber === 'string') {\n        format = config.slideNumber;\n      }\n\n      // If there are ONLY vertical slides in this deck, always use\n      // a flattened slide number\n      if (!/c/.test(format) && this.Reveal.getHorizontalSlides().length === 1) {\n        format = SLIDE_NUMBER_FORMAT_CURRENT;\n      }\n\n      // Offset the current slide number by 1 to make it 1-indexed\n      let horizontalOffset =\n        slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n      value = [];\n      switch (format) {\n        case SLIDE_NUMBER_FORMAT_CURRENT:\n          value.push(this.Reveal.getSlidePastCount(slide) + horizontalOffset);\n          break;\n        case SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\n          value.push(\n            this.Reveal.getSlidePastCount(slide) + horizontalOffset,\n            '/',\n            this.Reveal.getTotalSlides()\n          );\n          break;\n        default:\n          let indices = this.Reveal.getIndices(slide);\n          value.push(indices.h + horizontalOffset);\n          let sep =\n            format === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\n              ? '/'\n              : '.';\n          if (this.Reveal.isVerticalSlide(slide))\n            value.push(sep, indices.v + 1);\n      }\n    }\n\n    let url = '#' + this.Reveal.location.getHash(slide);\n    return this.formatNumber(value[0], value[1], value[2], url);\n  }\n\n  /**\n   * Applies HTML formatting to a slide number before it's\n   * written to the DOM.\n   *\n   * @param {number} a Current slide\n   * @param {string} delimiter Character to separate slide numbers\n   * @param {(number|*)} b Total slides\n   * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n   * @return {string} HTML string fragment\n   */\n  formatNumber(a, delimiter, b, url = '#' + this.Reveal.location.getHash()) {\n    if (typeof b === 'number' && !isNaN(b)) {\n      return `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n    } else {\n      return `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n    }\n  }\n\n  destroy() {\n    this.element.remove();\n  }\n}\n","import {\n  SLIDE_NUMBER_FORMAT_CURRENT,\n  SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n} from '../utils/constants';\n\n/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    this.onInput = this.onInput.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  render() {\n    this.element = document.createElement('div');\n    this.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement('input');\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n    this.jumpInput.addEventListener('input', this.onInput);\n    this.jumpInput.addEventListener('keydown', this.onKeyDown);\n    this.jumpInput.addEventListener('blur', this.onBlur);\n\n    this.element.appendChild(this.jumpInput);\n  }\n\n  show() {\n    this.indicesOnShow = this.Reveal.getIndices();\n\n    this.Reveal.getRevealElement().appendChild(this.element);\n    this.jumpInput.focus();\n  }\n\n  hide() {\n    if (this.isVisible()) {\n      this.element.remove();\n      this.jumpInput.value = '';\n\n      clearTimeout(this.jumpTimeout);\n      delete this.jumpTimeout;\n    }\n  }\n\n  isVisible() {\n    return !!this.element.parentNode;\n  }\n\n  /**\n   * Parses the current input and jumps to the given slide.\n   */\n  jump() {\n    clearTimeout(this.jumpTimeout);\n    delete this.jumpTimeout;\n\n    let query = this.jumpInput.value.trim('');\n    let indices;\n\n    // When slide numbers are formatted to be a single linear mumber\n    // (instead of showing a separate horizontal/vertical index) we\n    // use the same format for slide jumps\n    if (/^\\d+$/.test(query)) {\n      const slideNumberFormat = this.Reveal.getConfig().slideNumber;\n      if (\n        slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT ||\n        slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\n      ) {\n        const slide = this.Reveal.getSlides()[parseInt(query, 10) - 1];\n        if (slide) {\n          indices = this.Reveal.getIndices(slide);\n        }\n      }\n    }\n\n    if (!indices) {\n      // If the query uses \"horizontal.vertical\" format, convert to\n      // \"horizontal/vertical\" so that our URL parser can understand\n      if (/^\\d+\\.\\d+$/.test(query)) {\n        query = query.replace('.', '/');\n      }\n\n      indices = this.Reveal.location.getIndicesFromHash(query, {\n        oneBasedIndex: true,\n      });\n    }\n\n    // Still no valid index? Fall back on a text search\n    if (!indices && /\\S+/i.test(query) && query.length > 1) {\n      indices = this.search(query);\n    }\n\n    if (indices && query !== '') {\n      this.Reveal.slide(indices.h, indices.v, indices.f);\n      return true;\n    } else {\n      this.Reveal.slide(\n        this.indicesOnShow.h,\n        this.indicesOnShow.v,\n        this.indicesOnShow.f\n      );\n      return false;\n    }\n  }\n\n  jumpAfter(delay) {\n    clearTimeout(this.jumpTimeout);\n    this.jumpTimeout = setTimeout(() => this.jump(), delay);\n  }\n\n  /**\n   * A lofi search that looks for the given query in all\n   * of our slides and returns the first match.\n   */\n  search(query) {\n    const regex = new RegExp('\\\\b' + query.trim() + '\\\\b', 'i');\n\n    const slide = this.Reveal.getSlides().find((slide) => {\n      return regex.test(slide.innerText);\n    });\n\n    if (slide) {\n      return this.Reveal.getIndices(slide);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Reverts back to the slide we were on when jump to slide was\n   * invoked.\n   */\n  cancel() {\n    this.Reveal.slide(\n      this.indicesOnShow.h,\n      this.indicesOnShow.v,\n      this.indicesOnShow.f\n    );\n    this.hide();\n  }\n\n  confirm() {\n    this.jump();\n    this.hide();\n  }\n\n  destroy() {\n    this.jumpInput.removeEventListener('input', this.onInput);\n    this.jumpInput.removeEventListener('keydown', this.onKeyDown);\n    this.jumpInput.removeEventListener('blur', this.onBlur);\n\n    this.element.remove();\n  }\n\n  onKeyDown(event) {\n    if (event.keyCode === 13) {\n      this.confirm();\n    } else if (event.keyCode === 27) {\n      this.cancel();\n\n      event.stopImmediatePropagation();\n    }\n  }\n\n  onInput(event) {\n    this.jumpAfter(200);\n  }\n\n  onBlur() {\n    setTimeout(() => this.hide(), 1);\n  }\n}\n","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = (color) => {\n  let hex3 = color.match(/^#([0-9a-f]{3})$/i);\n  if (hex3 && hex3[1]) {\n    hex3 = hex3[1];\n    return {\n      r: parseInt(hex3.charAt(0), 16) * 0x11,\n      g: parseInt(hex3.charAt(1), 16) * 0x11,\n      b: parseInt(hex3.charAt(2), 16) * 0x11,\n    };\n  }\n\n  let hex6 = color.match(/^#([0-9a-f]{6})$/i);\n  if (hex6 && hex6[1]) {\n    hex6 = hex6[1];\n    return {\n      r: parseInt(hex6.slice(0, 2), 16),\n      g: parseInt(hex6.slice(2, 4), 16),\n      b: parseInt(hex6.slice(4, 6), 16),\n    };\n  }\n\n  let rgb = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n  if (rgb) {\n    return {\n      r: parseInt(rgb[1], 10),\n      g: parseInt(rgb[2], 10),\n      b: parseInt(rgb[3], 10),\n    };\n  }\n\n  let rgba = color.match(\n    /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i\n  );\n  if (rgba) {\n    return {\n      r: parseInt(rgba[1], 10),\n      g: parseInt(rgba[2], 10),\n      b: parseInt(rgba[3], 10),\n      a: parseFloat(rgba[4]),\n    };\n  }\n\n  return null;\n};\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = (color) => {\n  if (typeof color === 'string') color = colorToRgb(color);\n\n  if (color) {\n    return (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n  }\n\n  return null;\n};\n","import { queryAll } from '../utils/util.js';\nimport { colorToRgb, colorBrightness } from '../utils/color.js';\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n  }\n\n  render() {\n    this.element = document.createElement('div');\n    this.element.className = 'backgrounds';\n    this.Reveal.getRevealElement().appendChild(this.element);\n  }\n\n  /**\n   * Creates the slide background elements and appends them\n   * to the background container. One element is created per\n   * slide no matter if the given slide has visible background.\n   */\n  create() {\n    // Clear prior backgrounds\n    this.element.innerHTML = '';\n    this.element.classList.add('no-transition');\n\n    // Iterate over all horizontal slides\n    this.Reveal.getHorizontalSlides().forEach((slideh) => {\n      let backgroundStack = this.createBackground(slideh, this.element);\n\n      // Iterate over all vertical slides\n      queryAll(slideh, 'section').forEach((slidev) => {\n        this.createBackground(slidev, backgroundStack);\n\n        backgroundStack.classList.add('stack');\n      });\n    });\n\n    // Add parallax background if specified\n    if (this.Reveal.getConfig().parallaxBackgroundImage) {\n      this.element.style.backgroundImage =\n        'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n      this.element.style.backgroundSize =\n        this.Reveal.getConfig().parallaxBackgroundSize;\n      this.element.style.backgroundRepeat =\n        this.Reveal.getConfig().parallaxBackgroundRepeat;\n      this.element.style.backgroundPosition =\n        this.Reveal.getConfig().parallaxBackgroundPosition;\n\n      // Make sure the below properties are set on the element - these properties are\n      // needed for proper transitions to be set on the element via CSS. To remove\n      // annoying background slide-in effect when the presentation starts, apply\n      // these properties after short time delay\n      setTimeout(() => {\n        this.Reveal.getRevealElement().classList.add('has-parallax-background');\n      }, 1);\n    } else {\n      this.element.style.backgroundImage = '';\n      this.Reveal.getRevealElement().classList.remove(\n        'has-parallax-background'\n      );\n    }\n  }\n\n  /**\n   * Creates a background for the given slide.\n   *\n   * @param {HTMLElement} slide\n   * @param {HTMLElement} container The element that the background\n   * should be appended to\n   * @return {HTMLElement} New background div\n   */\n  createBackground(slide, container) {\n    // Main slide background element\n    let element = document.createElement('div');\n    element.className =\n      'slide-background ' + slide.className.replace(/present|past|future/, '');\n\n    // Inner background element that wraps images/videos/iframes\n    let contentElement = document.createElement('div');\n    contentElement.className = 'slide-background-content';\n\n    element.appendChild(contentElement);\n    container.appendChild(element);\n\n    slide.slideBackgroundElement = element;\n    slide.slideBackgroundContentElement = contentElement;\n\n    // Syncs the background to reflect all current background settings\n    this.sync(slide);\n\n    return element;\n  }\n\n  /**\n   * Renders all of the visual properties of a slide background\n   * based on the various background attributes.\n   *\n   * @param {HTMLElement} slide\n   */\n  sync(slide) {\n    const element = slide.slideBackgroundElement,\n      contentElement = slide.slideBackgroundContentElement;\n\n    const data = {\n      background: slide.getAttribute('data-background'),\n      backgroundSize: slide.getAttribute('data-background-size'),\n      backgroundImage: slide.getAttribute('data-background-image'),\n      backgroundVideo: slide.getAttribute('data-background-video'),\n      backgroundIframe: slide.getAttribute('data-background-iframe'),\n      backgroundColor: slide.getAttribute('data-background-color'),\n      backgroundGradient: slide.getAttribute('data-background-gradient'),\n      backgroundRepeat: slide.getAttribute('data-background-repeat'),\n      backgroundPosition: slide.getAttribute('data-background-position'),\n      backgroundTransition: slide.getAttribute('data-background-transition'),\n      backgroundOpacity: slide.getAttribute('data-background-opacity'),\n    };\n\n    const dataPreload = slide.hasAttribute('data-preload');\n\n    // Reset the prior background state in case this is not the\n    // initial sync\n    slide.classList.remove('has-dark-background');\n    slide.classList.remove('has-light-background');\n\n    element.removeAttribute('data-loaded');\n    element.removeAttribute('data-background-hash');\n    element.removeAttribute('data-background-size');\n    element.removeAttribute('data-background-transition');\n    element.style.backgroundColor = '';\n\n    contentElement.style.backgroundSize = '';\n    contentElement.style.backgroundRepeat = '';\n    contentElement.style.backgroundPosition = '';\n    contentElement.style.backgroundImage = '';\n    contentElement.style.opacity = '';\n    contentElement.innerHTML = '';\n\n    if (data.background) {\n      // Auto-wrap image urls in url(...)\n      if (\n        /^(http|file|\\/\\/)/gi.test(data.background) ||\n        /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test(data.background)\n      ) {\n        slide.setAttribute('data-background-image', data.background);\n      } else {\n        element.style.background = data.background;\n      }\n    }\n\n    // Create a hash for this combination of background settings.\n    // This is used to determine when two slide backgrounds are\n    // the same.\n    if (\n      data.background ||\n      data.backgroundColor ||\n      data.backgroundGradient ||\n      data.backgroundImage ||\n      data.backgroundVideo ||\n      data.backgroundIframe\n    ) {\n      element.setAttribute(\n        'data-background-hash',\n        data.background +\n          data.backgroundSize +\n          data.backgroundImage +\n          data.backgroundVideo +\n          data.backgroundIframe +\n          data.backgroundColor +\n          data.backgroundGradient +\n          data.backgroundRepeat +\n          data.backgroundPosition +\n          data.backgroundTransition +\n          data.backgroundOpacity\n      );\n    }\n\n    // Additional and optional background properties\n    if (data.backgroundSize)\n      element.setAttribute('data-background-size', data.backgroundSize);\n    if (data.backgroundColor)\n      element.style.backgroundColor = data.backgroundColor;\n    if (data.backgroundGradient)\n      element.style.backgroundImage = data.backgroundGradient;\n    if (data.backgroundTransition)\n      element.setAttribute(\n        'data-background-transition',\n        data.backgroundTransition\n      );\n\n    if (dataPreload) element.setAttribute('data-preload', '');\n\n    // Background image options are set on the content wrapper\n    if (data.backgroundSize)\n      contentElement.style.backgroundSize = data.backgroundSize;\n    if (data.backgroundRepeat)\n      contentElement.style.backgroundRepeat = data.backgroundRepeat;\n    if (data.backgroundPosition)\n      contentElement.style.backgroundPosition = data.backgroundPosition;\n    if (data.backgroundOpacity)\n      contentElement.style.opacity = data.backgroundOpacity;\n\n    const contrastClass = this.getContrastClass(slide);\n\n    if (typeof contrastClass === 'string') {\n      slide.classList.add(contrastClass);\n    }\n  }\n\n  /**\n   * Returns a class name that can be applied to a slide to indicate\n   * if it has a light or dark background.\n   *\n   * @param {*} slide\n   *\n   * @returns {string|null}\n   */\n  getContrastClass(slide) {\n    const element = slide.slideBackgroundElement;\n\n    // If this slide has a background color, we add a class that\n    // signals if it is light or dark. If the slide has no background\n    // color, no class will be added\n    let contrastColor = slide.getAttribute('data-background-color');\n\n    // If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n    if (!contrastColor || !colorToRgb(contrastColor)) {\n      let computedBackgroundStyle = window.getComputedStyle(element);\n      if (computedBackgroundStyle && computedBackgroundStyle.backgroundColor) {\n        contrastColor = computedBackgroundStyle.backgroundColor;\n      }\n    }\n\n    if (contrastColor) {\n      const rgb = colorToRgb(contrastColor);\n\n      // Ignore fully transparent backgrounds. Some browsers return\n      // rgba(0,0,0,0) when reading the computed background color of\n      // an element with no background\n      if (rgb && rgb.a !== 0) {\n        if (colorBrightness(contrastColor) < 128) {\n          return 'has-dark-background';\n        } else {\n          return 'has-light-background';\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Bubble the 'has-light-background'/'has-dark-background' classes.\n   */\n  bubbleSlideContrastClassToElement(slide, target) {\n    ['has-light-background', 'has-dark-background'].forEach((classToBubble) => {\n      if (slide.classList.contains(classToBubble)) {\n        target.classList.add(classToBubble);\n      } else {\n        target.classList.remove(classToBubble);\n      }\n    }, this);\n  }\n\n  /**\n   * Updates the background elements to reflect the current\n   * slide.\n   *\n   * @param {boolean} includeAll If true, the backgrounds of\n   * all vertical slides (not just the present) will be updated.\n   */\n  update(includeAll = false) {\n    let currentSlide = this.Reveal.getCurrentSlide();\n    let indices = this.Reveal.getIndices();\n\n    let currentBackground = null;\n\n    // Reverse past/future classes when in RTL mode\n    let horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n      horizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n    // Update the classes of all backgrounds to match the\n    // states of their slides (past/present/future)\n    Array.from(this.element.childNodes).forEach((backgroundh, h) => {\n      backgroundh.classList.remove('past', 'present', 'future');\n\n      if (h < indices.h) {\n        backgroundh.classList.add(horizontalPast);\n      } else if (h > indices.h) {\n        backgroundh.classList.add(horizontalFuture);\n      } else {\n        backgroundh.classList.add('present');\n\n        // Store a reference to the current background element\n        currentBackground = backgroundh;\n      }\n\n      if (includeAll || h === indices.h) {\n        queryAll(backgroundh, '.slide-background').forEach((backgroundv, v) => {\n          backgroundv.classList.remove('past', 'present', 'future');\n\n          const indexv = typeof indices.v === 'number' ? indices.v : 0;\n\n          if (v < indexv) {\n            backgroundv.classList.add('past');\n          } else if (v > indexv) {\n            backgroundv.classList.add('future');\n          } else {\n            backgroundv.classList.add('present');\n\n            // Only if this is the present horizontal and vertical slide\n            if (h === indices.h) currentBackground = backgroundv;\n          }\n        });\n      }\n    });\n\n    // Stop content inside of previous backgrounds\n    if (this.previousBackground) {\n      this.Reveal.slideContent.stopEmbeddedContent(this.previousBackground, {\n        unloadIframes: !this.Reveal.slideContent.shouldPreload(\n          this.previousBackground\n        ),\n      });\n    }\n\n    // Start content in the current background\n    if (currentBackground) {\n      this.Reveal.slideContent.startEmbeddedContent(currentBackground);\n\n      let currentBackgroundContent = currentBackground.querySelector(\n        '.slide-background-content'\n      );\n      if (currentBackgroundContent) {\n        let backgroundImageURL =\n          currentBackgroundContent.style.backgroundImage || '';\n\n        // Restart GIFs (doesn't work in Firefox)\n        if (/\\.gif/i.test(backgroundImageURL)) {\n          currentBackgroundContent.style.backgroundImage = '';\n          window.getComputedStyle(currentBackgroundContent).opacity;\n          currentBackgroundContent.style.backgroundImage = backgroundImageURL;\n        }\n      }\n\n      // Don't transition between identical backgrounds. This\n      // prevents unwanted flicker.\n      let previousBackgroundHash = this.previousBackground\n        ? this.previousBackground.getAttribute('data-background-hash')\n        : null;\n      let currentBackgroundHash = currentBackground.getAttribute(\n        'data-background-hash'\n      );\n      if (\n        currentBackgroundHash &&\n        currentBackgroundHash === previousBackgroundHash &&\n        currentBackground !== this.previousBackground\n      ) {\n        this.element.classList.add('no-transition');\n      }\n\n      this.previousBackground = currentBackground;\n    }\n\n    // If there's a background brightness flag for this slide,\n    // bubble it to the .reveal container\n    if (currentSlide) {\n      this.bubbleSlideContrastClassToElement(\n        currentSlide,\n        this.Reveal.getRevealElement()\n      );\n    }\n\n    // Allow the first background to apply without transition\n    setTimeout(() => {\n      this.element.classList.remove('no-transition');\n    }, 1);\n  }\n\n  /**\n   * Updates the position of the parallax background based\n   * on the current slide index.\n   */\n  updateParallax() {\n    let indices = this.Reveal.getIndices();\n\n    if (this.Reveal.getConfig().parallaxBackgroundImage) {\n      let horizontalSlides = this.Reveal.getHorizontalSlides(),\n        verticalSlides = this.Reveal.getVerticalSlides();\n\n      let backgroundSize = this.element.style.backgroundSize.split(' '),\n        backgroundWidth,\n        backgroundHeight;\n\n      if (backgroundSize.length === 1) {\n        backgroundWidth = backgroundHeight = parseInt(backgroundSize[0], 10);\n      } else {\n        backgroundWidth = parseInt(backgroundSize[0], 10);\n        backgroundHeight = parseInt(backgroundSize[1], 10);\n      }\n\n      let slideWidth = this.element.offsetWidth,\n        horizontalSlideCount = horizontalSlides.length,\n        horizontalOffsetMultiplier,\n        horizontalOffset;\n\n      if (\n        typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number'\n      ) {\n        horizontalOffsetMultiplier =\n          this.Reveal.getConfig().parallaxBackgroundHorizontal;\n      } else {\n        horizontalOffsetMultiplier =\n          horizontalSlideCount > 1\n            ? (backgroundWidth - slideWidth) / (horizontalSlideCount - 1)\n            : 0;\n      }\n\n      horizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n      let slideHeight = this.element.offsetHeight,\n        verticalSlideCount = verticalSlides.length,\n        verticalOffsetMultiplier,\n        verticalOffset;\n\n      if (\n        typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number'\n      ) {\n        verticalOffsetMultiplier =\n          this.Reveal.getConfig().parallaxBackgroundVertical;\n      } else {\n        verticalOffsetMultiplier =\n          (backgroundHeight - slideHeight) / (verticalSlideCount - 1);\n      }\n\n      verticalOffset =\n        verticalSlideCount > 0 ? verticalOffsetMultiplier * indices.v : 0;\n\n      this.element.style.backgroundPosition =\n        horizontalOffset + 'px ' + -verticalOffset + 'px';\n    }\n  }\n\n  destroy() {\n    this.element.remove();\n  }\n}\n","import {\n  queryAll,\n  extend,\n  createStyleSheet,\n  matches,\n  closest,\n} from '../utils/util.js';\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js';\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n  }\n\n  /**\n   * Runs an auto-animation between the given slides.\n   *\n   * @param  {HTMLElement} fromSlide\n   * @param  {HTMLElement} toSlide\n   */\n  run(fromSlide, toSlide) {\n    // Clean up after prior animations\n    this.reset();\n\n    let allSlides = this.Reveal.getSlides();\n    let toSlideIndex = allSlides.indexOf(toSlide);\n    let fromSlideIndex = allSlides.indexOf(fromSlide);\n\n    // Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n    // (including null if absent on both) and that data-auto-animate-restart isn't set on the\n    // physically latter slide (independent of slide direction)\n    if (\n      fromSlide.hasAttribute('data-auto-animate') &&\n      toSlide.hasAttribute('data-auto-animate') &&\n      fromSlide.getAttribute('data-auto-animate-id') ===\n        toSlide.getAttribute('data-auto-animate-id') &&\n      !(toSlideIndex > fromSlideIndex ? toSlide : fromSlide).hasAttribute(\n        'data-auto-animate-restart'\n      )\n    ) {\n      // Create a new auto-animate sheet\n      this.autoAnimateStyleSheet =\n        this.autoAnimateStyleSheet || createStyleSheet();\n\n      let animationOptions = this.getAutoAnimateOptions(toSlide);\n\n      // Set our starting state\n      fromSlide.dataset.autoAnimate = 'pending';\n      toSlide.dataset.autoAnimate = 'pending';\n\n      // Flag the navigation direction, needed for fragment buildup\n      animationOptions.slideDirection =\n        toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n      // If the from-slide is hidden because it has moved outside\n      // the view distance, we need to temporarily show it while\n      // measuring\n      let fromSlideIsHidden = fromSlide.style.display === 'none';\n      if (fromSlideIsHidden)\n        fromSlide.style.display = this.Reveal.getConfig().display;\n\n      // Inject our auto-animate styles for this transition\n      let css = this.getAutoAnimatableElements(fromSlide, toSlide).map(\n        (elements) => {\n          return this.autoAnimateElements(\n            elements.from,\n            elements.to,\n            elements.options || {},\n            animationOptions,\n            autoAnimateCounter++\n          );\n        }\n      );\n\n      if (fromSlideIsHidden) fromSlide.style.display = 'none';\n\n      // Animate unmatched elements, if enabled\n      if (\n        toSlide.dataset.autoAnimateUnmatched !== 'false' &&\n        this.Reveal.getConfig().autoAnimateUnmatched === true\n      ) {\n        // Our default timings for unmatched elements\n        let defaultUnmatchedDuration = animationOptions.duration * 0.8,\n          defaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n        this.getUnmatchedAutoAnimateElements(toSlide).forEach(\n          (unmatchedElement) => {\n            let unmatchedOptions = this.getAutoAnimateOptions(\n              unmatchedElement,\n              animationOptions\n            );\n            let id = 'unmatched';\n\n            // If there is a duration or delay set specifically for this\n            // element our unmatched elements should adhere to those\n            if (\n              unmatchedOptions.duration !== animationOptions.duration ||\n              unmatchedOptions.delay !== animationOptions.delay\n            ) {\n              id = 'unmatched-' + autoAnimateCounter++;\n              css.push(\n                `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }`\n              );\n            }\n\n            unmatchedElement.dataset.autoAnimateTarget = id;\n          },\n          this\n        );\n\n        // Our default transition for unmatched elements\n        css.push(\n          `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }`\n        );\n      }\n\n      // Setting the whole chunk of CSS at once is the most\n      // efficient way to do this. Using sheet.insertRule\n      // is multiple factors slower.\n      this.autoAnimateStyleSheet.innerHTML = css.join('');\n\n      // Start the animation next cycle\n      requestAnimationFrame(() => {\n        if (this.autoAnimateStyleSheet) {\n          // This forces our newly injected styles to be applied in Firefox\n          getComputedStyle(this.autoAnimateStyleSheet).fontWeight;\n\n          toSlide.dataset.autoAnimate = 'running';\n        }\n      });\n\n      this.Reveal.dispatchEvent({\n        type: 'autoanimate',\n        data: {\n          fromSlide,\n          toSlide,\n          sheet: this.autoAnimateStyleSheet,\n        },\n      });\n    }\n  }\n\n  /**\n   * Rolls back all changes that we've made to the DOM so\n   * that as part of animating.\n   */\n  reset() {\n    // Reset slides\n    queryAll(\n      this.Reveal.getRevealElement(),\n      '[data-auto-animate]:not([data-auto-animate=\"\"])'\n    ).forEach((element) => {\n      element.dataset.autoAnimate = '';\n    });\n\n    // Reset elements\n    queryAll(\n      this.Reveal.getRevealElement(),\n      '[data-auto-animate-target]'\n    ).forEach((element) => {\n      delete element.dataset.autoAnimateTarget;\n    });\n\n    // Remove the animation sheet\n    if (this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode) {\n      this.autoAnimateStyleSheet.parentNode.removeChild(\n        this.autoAnimateStyleSheet\n      );\n      this.autoAnimateStyleSheet = null;\n    }\n  }\n\n  /**\n   * Creates a FLIP animation where the `to` element starts out\n   * in the `from` element position and animates to its original\n   * state.\n   *\n   * @param {HTMLElement} from\n   * @param {HTMLElement} to\n   * @param {Object} elementOptions Options for this element pair\n   * @param {Object} animationOptions Options set at the slide level\n   * @param {String} id Unique ID that we can use to identify this\n   * auto-animate element in the DOM\n   */\n  autoAnimateElements(from, to, elementOptions, animationOptions, id) {\n    // 'from' elements are given a data-auto-animate-target with no value,\n    // 'to' elements are are given a data-auto-animate-target with an ID\n    from.dataset.autoAnimateTarget = '';\n    to.dataset.autoAnimateTarget = id;\n\n    // Each element may override any of the auto-animate options\n    // like transition easing, duration and delay via data-attributes\n    let options = this.getAutoAnimateOptions(to, animationOptions);\n\n    // If we're using a custom element matcher the element options\n    // may contain additional transition overrides\n    if (typeof elementOptions.delay !== 'undefined')\n      options.delay = elementOptions.delay;\n    if (typeof elementOptions.duration !== 'undefined')\n      options.duration = elementOptions.duration;\n    if (typeof elementOptions.easing !== 'undefined')\n      options.easing = elementOptions.easing;\n\n    let fromProps = this.getAutoAnimatableProperties(\n        'from',\n        from,\n        elementOptions\n      ),\n      toProps = this.getAutoAnimatableProperties('to', to, elementOptions);\n\n    // Maintain fragment visibility for matching elements when\n    // we're navigating forwards, this way the viewer won't need\n    // to step through the same fragments twice\n    if (to.classList.contains('fragment')) {\n      // Don't auto-animate the opacity of fragments to avoid\n      // conflicts with fragment animations\n      delete toProps.styles['opacity'];\n\n      if (from.classList.contains('fragment')) {\n        let fromFragmentStyle = (from.className.match(FRAGMENT_STYLE_REGEX) || [\n          '',\n        ])[0];\n        let toFragmentStyle = (to.className.match(FRAGMENT_STYLE_REGEX) || [\n          '',\n        ])[0];\n\n        // Only skip the fragment if the fragment animation style\n        // remains unchanged\n        if (\n          fromFragmentStyle === toFragmentStyle &&\n          animationOptions.slideDirection === 'forward'\n        ) {\n          to.classList.add('visible', 'disabled');\n        }\n      }\n    }\n\n    // If translation and/or scaling are enabled, css transform\n    // the 'to' element so that it matches the position and size\n    // of the 'from' element\n    if (elementOptions.translate !== false || elementOptions.scale !== false) {\n      let presentationScale = this.Reveal.getScale();\n\n      let delta = {\n        x: (fromProps.x - toProps.x) / presentationScale,\n        y: (fromProps.y - toProps.y) / presentationScale,\n        scaleX: fromProps.width / toProps.width,\n        scaleY: fromProps.height / toProps.height,\n      };\n\n      // Limit decimal points to avoid 0.0001px blur and stutter\n      delta.x = Math.round(delta.x * 1000) / 1000;\n      delta.y = Math.round(delta.y * 1000) / 1000;\n      delta.scaleX = Math.round(delta.scaleX * 1000) / 1000;\n      delta.scaleX = Math.round(delta.scaleX * 1000) / 1000;\n\n      let translate =\n          elementOptions.translate !== false &&\n          (delta.x !== 0 || delta.y !== 0),\n        scale =\n          elementOptions.scale !== false &&\n          (delta.scaleX !== 0 || delta.scaleY !== 0);\n\n      // No need to transform if nothing's changed\n      if (translate || scale) {\n        let transform = [];\n\n        if (translate) transform.push(`translate(${delta.x}px, ${delta.y}px)`);\n        if (scale) transform.push(`scale(${delta.scaleX}, ${delta.scaleY})`);\n\n        fromProps.styles['transform'] = transform.join(' ');\n        fromProps.styles['transform-origin'] = 'top left';\n\n        toProps.styles['transform'] = 'none';\n      }\n    }\n\n    // Delete all unchanged 'to' styles\n    for (let propertyName in toProps.styles) {\n      const toValue = toProps.styles[propertyName];\n      const fromValue = fromProps.styles[propertyName];\n\n      if (toValue === fromValue) {\n        delete toProps.styles[propertyName];\n      } else {\n        // If these property values were set via a custom matcher providing\n        // an explicit 'from' and/or 'to' value, we always inject those values.\n        if (toValue.explicitValue === true) {\n          toProps.styles[propertyName] = toValue.value;\n        }\n\n        if (fromValue.explicitValue === true) {\n          fromProps.styles[propertyName] = fromValue.value;\n        }\n      }\n    }\n\n    let css = '';\n\n    let toStyleProperties = Object.keys(toProps.styles);\n\n    // Only create animate this element IF at least one style\n    // property has changed\n    if (toStyleProperties.length > 0) {\n      // Instantly move to the 'from' state\n      fromProps.styles['transition'] = 'none';\n\n      // Animate towards the 'to' state\n      toProps.styles['transition'] =\n        `all ${options.duration}s ${options.easing} ${options.delay}s`;\n      toProps.styles['transition-property'] = toStyleProperties.join(', ');\n      toProps.styles['will-change'] = toStyleProperties.join(', ');\n\n      // Build up our custom CSS. We need to override inline styles\n      // so we need to make our styles vErY IMPORTANT!1!!\n      let fromCSS = Object.keys(fromProps.styles)\n        .map((propertyName) => {\n          return (\n            propertyName +\n            ': ' +\n            fromProps.styles[propertyName] +\n            ' !important;'\n          );\n        })\n        .join('');\n\n      let toCSS = Object.keys(toProps.styles)\n        .map((propertyName) => {\n          return (\n            propertyName + ': ' + toProps.styles[propertyName] + ' !important;'\n          );\n        })\n        .join('');\n\n      css =\n        '[data-auto-animate-target=\"' +\n        id +\n        '\"] {' +\n        fromCSS +\n        '}' +\n        '[data-auto-animate=\"running\"] [data-auto-animate-target=\"' +\n        id +\n        '\"] {' +\n        toCSS +\n        '}';\n    }\n\n    return css;\n  }\n\n  /**\n   * Returns the auto-animate options for the given element.\n   *\n   * @param {HTMLElement} element Element to pick up options\n   * from, either a slide or an animation target\n   * @param {Object} [inheritedOptions] Optional set of existing\n   * options\n   */\n  getAutoAnimateOptions(element, inheritedOptions) {\n    let options = {\n      easing: this.Reveal.getConfig().autoAnimateEasing,\n      duration: this.Reveal.getConfig().autoAnimateDuration,\n      delay: 0,\n    };\n\n    options = extend(options, inheritedOptions);\n\n    // Inherit options from parent elements\n    if (element.parentNode) {\n      let autoAnimatedParent = closest(\n        element.parentNode,\n        '[data-auto-animate-target]'\n      );\n      if (autoAnimatedParent) {\n        options = this.getAutoAnimateOptions(autoAnimatedParent, options);\n      }\n    }\n\n    if (element.dataset.autoAnimateEasing) {\n      options.easing = element.dataset.autoAnimateEasing;\n    }\n\n    if (element.dataset.autoAnimateDuration) {\n      options.duration = parseFloat(element.dataset.autoAnimateDuration);\n    }\n\n    if (element.dataset.autoAnimateDelay) {\n      options.delay = parseFloat(element.dataset.autoAnimateDelay);\n    }\n\n    return options;\n  }\n\n  /**\n   * Returns an object containing all of the properties\n   * that can be auto-animated for the given element and\n   * their current computed values.\n   *\n   * @param {String} direction 'from' or 'to'\n   */\n  getAutoAnimatableProperties(direction, element, elementOptions) {\n    let config = this.Reveal.getConfig();\n\n    let properties = { styles: [] };\n\n    // Position and size\n    if (elementOptions.translate !== false || elementOptions.scale !== false) {\n      let bounds;\n\n      // Custom auto-animate may optionally return a custom tailored\n      // measurement function\n      if (typeof elementOptions.measure === 'function') {\n        bounds = elementOptions.measure(element);\n      } else {\n        if (config.center) {\n          // More precise, but breaks when used in combination\n          // with zoom for scaling the deck ¯\\_(ツ)_/¯\n          bounds = element.getBoundingClientRect();\n        } else {\n          let scale = this.Reveal.getScale();\n          bounds = {\n            x: element.offsetLeft * scale,\n            y: element.offsetTop * scale,\n            width: element.offsetWidth * scale,\n            height: element.offsetHeight * scale,\n          };\n        }\n      }\n\n      properties.x = bounds.x;\n      properties.y = bounds.y;\n      properties.width = bounds.width;\n      properties.height = bounds.height;\n    }\n\n    const computedStyles = getComputedStyle(element);\n\n    // CSS styles\n    (elementOptions.styles || config.autoAnimateStyles).forEach((style) => {\n      let value;\n\n      // `style` is either the property name directly, or an object\n      // definition of a style property\n      if (typeof style === 'string') style = { property: style };\n\n      if (typeof style.from !== 'undefined' && direction === 'from') {\n        value = { value: style.from, explicitValue: true };\n      } else if (typeof style.to !== 'undefined' && direction === 'to') {\n        value = { value: style.to, explicitValue: true };\n      } else {\n        // Use a unitless value for line-height so that it inherits properly\n        if (style.property === 'line-height') {\n          value =\n            parseFloat(computedStyles['line-height']) /\n            parseFloat(computedStyles['font-size']);\n        }\n\n        if (isNaN(value)) {\n          value = computedStyles[style.property];\n        }\n      }\n\n      if (value !== '') {\n        properties.styles[style.property] = value;\n      }\n    });\n\n    return properties;\n  }\n\n  /**\n   * Get a list of all element pairs that we can animate\n   * between the given slides.\n   *\n   * @param {HTMLElement} fromSlide\n   * @param {HTMLElement} toSlide\n   *\n   * @return {Array} Each value is an array where [0] is\n   * the element we're animating from and [1] is the\n   * element we're animating to\n   */\n  getAutoAnimatableElements(fromSlide, toSlide) {\n    let matcher =\n      typeof this.Reveal.getConfig().autoAnimateMatcher === 'function'\n        ? this.Reveal.getConfig().autoAnimateMatcher\n        : this.getAutoAnimatePairs;\n\n    let pairs = matcher.call(this, fromSlide, toSlide);\n\n    let reserved = [];\n\n    // Remove duplicate pairs\n    return pairs.filter((pair, index) => {\n      if (reserved.indexOf(pair.to) === -1) {\n        reserved.push(pair.to);\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Identifies matching elements between slides.\n   *\n   * You can specify a custom matcher function by using\n   * the `autoAnimateMatcher` config option.\n   */\n  getAutoAnimatePairs(fromSlide, toSlide) {\n    let pairs = [];\n\n    const codeNodes = 'pre';\n    const textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n    const mediaNodes = 'img, video, iframe';\n\n    // Explicit matches via data-id\n    this.findAutoAnimateMatches(\n      pairs,\n      fromSlide,\n      toSlide,\n      '[data-id]',\n      (node) => {\n        return node.nodeName + ':::' + node.getAttribute('data-id');\n      }\n    );\n\n    // Text\n    this.findAutoAnimateMatches(\n      pairs,\n      fromSlide,\n      toSlide,\n      textNodes,\n      (node) => {\n        return node.nodeName + ':::' + node.innerText;\n      }\n    );\n\n    // Media\n    this.findAutoAnimateMatches(\n      pairs,\n      fromSlide,\n      toSlide,\n      mediaNodes,\n      (node) => {\n        return (\n          node.nodeName +\n          ':::' +\n          (node.getAttribute('src') || node.getAttribute('data-src'))\n        );\n      }\n    );\n\n    // Code\n    this.findAutoAnimateMatches(\n      pairs,\n      fromSlide,\n      toSlide,\n      codeNodes,\n      (node) => {\n        return node.nodeName + ':::' + node.innerText;\n      }\n    );\n\n    pairs.forEach((pair) => {\n      // Disable scale transformations on text nodes, we transition\n      // each individual text property instead\n      if (matches(pair.from, textNodes)) {\n        pair.options = { scale: false };\n      }\n      // Animate individual lines of code\n      else if (matches(pair.from, codeNodes)) {\n        // Transition the code block's width and height instead of scaling\n        // to prevent its content from being squished\n        pair.options = { scale: false, styles: ['width', 'height'] };\n\n        // Lines of code\n        this.findAutoAnimateMatches(\n          pairs,\n          pair.from,\n          pair.to,\n          '.hljs .hljs-ln-code',\n          (node) => {\n            return node.textContent;\n          },\n          {\n            scale: false,\n            styles: [],\n            measure: this.getLocalBoundingBox.bind(this),\n          }\n        );\n\n        // Line numbers\n        this.findAutoAnimateMatches(\n          pairs,\n          pair.from,\n          pair.to,\n          '.hljs .hljs-ln-numbers[data-line-number]',\n          (node) => {\n            return node.getAttribute('data-line-number');\n          },\n          {\n            scale: false,\n            styles: ['width'],\n            measure: this.getLocalBoundingBox.bind(this),\n          }\n        );\n      }\n    }, this);\n\n    return pairs;\n  }\n\n  /**\n   * Helper method which returns a bounding box based on\n   * the given elements offset coordinates.\n   *\n   * @param {HTMLElement} element\n   * @return {Object} x, y, width, height\n   */\n  getLocalBoundingBox(element) {\n    const presentationScale = this.Reveal.getScale();\n\n    return {\n      x: Math.round(element.offsetLeft * presentationScale * 100) / 100,\n      y: Math.round(element.offsetTop * presentationScale * 100) / 100,\n      width: Math.round(element.offsetWidth * presentationScale * 100) / 100,\n      height: Math.round(element.offsetHeight * presentationScale * 100) / 100,\n    };\n  }\n\n  /**\n   * Finds matching elements between two slides.\n   *\n   * @param {Array} pairs            \tList of pairs to push matches to\n   * @param {HTMLElement} fromScope   Scope within the from element exists\n   * @param {HTMLElement} toScope     Scope within the to element exists\n   * @param {String} selector         CSS selector of the element to match\n   * @param {Function} serializer     A function that accepts an element and returns\n   *                                  a stringified ID based on its contents\n   * @param {Object} animationOptions Optional config options for this pair\n   */\n  findAutoAnimateMatches(\n    pairs,\n    fromScope,\n    toScope,\n    selector,\n    serializer,\n    animationOptions\n  ) {\n    let fromMatches = {};\n    let toMatches = {};\n\n    [].slice\n      .call(fromScope.querySelectorAll(selector))\n      .forEach((element, i) => {\n        const key = serializer(element);\n        if (typeof key === 'string' && key.length) {\n          fromMatches[key] = fromMatches[key] || [];\n          fromMatches[key].push(element);\n        }\n      });\n\n    [].slice.call(toScope.querySelectorAll(selector)).forEach((element, i) => {\n      const key = serializer(element);\n      toMatches[key] = toMatches[key] || [];\n      toMatches[key].push(element);\n\n      let fromElement;\n\n      // Retrieve the 'from' element\n      if (fromMatches[key]) {\n        const primaryIndex = toMatches[key].length - 1;\n        const secondaryIndex = fromMatches[key].length - 1;\n\n        // If there are multiple identical from elements, retrieve\n        // the one at the same index as our to-element.\n        if (fromMatches[key][primaryIndex]) {\n          fromElement = fromMatches[key][primaryIndex];\n          fromMatches[key][primaryIndex] = null;\n        }\n        // If there are no matching from-elements at the same index,\n        // use the last one.\n        else if (fromMatches[key][secondaryIndex]) {\n          fromElement = fromMatches[key][secondaryIndex];\n          fromMatches[key][secondaryIndex] = null;\n        }\n      }\n\n      // If we've got a matching pair, push it to the list of pairs\n      if (fromElement) {\n        pairs.push({\n          from: fromElement,\n          to: element,\n          options: animationOptions,\n        });\n      }\n    });\n  }\n\n  /**\n   * Returns a all elements within the given scope that should\n   * be considered unmatched in an auto-animate transition. If\n   * fading of unmatched elements is turned on, these elements\n   * will fade when going between auto-animate slides.\n   *\n   * Note that parents of auto-animate targets are NOT considered\n   * unmatched since fading them would break the auto-animation.\n   *\n   * @param {HTMLElement} rootElement\n   * @return {Array}\n   */\n  getUnmatchedAutoAnimateElements(rootElement) {\n    return [].slice.call(rootElement.children).reduce((result, element) => {\n      const containsAnimatedElements = element.querySelector(\n        '[data-auto-animate-target]'\n      );\n\n      // The element is unmatched if\n      // - It is not an auto-animate target\n      // - It does not contain any auto-animate targets\n      if (\n        !element.hasAttribute('data-auto-animate-target') &&\n        !containsAnimatedElements\n      ) {\n        result.push(element);\n      }\n\n      if (element.querySelector('[data-auto-animate-target]')) {\n        result = result.concat(this.getUnmatchedAutoAnimateElements(element));\n      }\n\n      return result;\n    }, []);\n  }\n}\n","import {\n  HORIZONTAL_SLIDES_SELECTOR,\n  HORIZONTAL_BACKGROUNDS_SELECTOR,\n} from '../utils/constants.js';\nimport { queryAll } from '../utils/util.js';\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    this.active = false;\n    this.activatedCallbacks = [];\n\n    this.onScroll = this.onScroll.bind(this);\n  }\n\n  /**\n   * Activates the scroll view. This rearranges the presentation DOM\n   * by—among other things—wrapping each slide in a page element.\n   */\n  activate() {\n    if (this.active) return;\n\n    const stateBeforeActivation = this.Reveal.getState();\n\n    this.active = true;\n\n    // Store the full presentation HTML so that we can restore it\n    // when/if the scroll view is deactivated\n    this.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n    const horizontalSlides = queryAll(\n      this.Reveal.getRevealElement(),\n      HORIZONTAL_SLIDES_SELECTOR\n    );\n    const horizontalBackgrounds = queryAll(\n      this.Reveal.getRevealElement(),\n      HORIZONTAL_BACKGROUNDS_SELECTOR\n    );\n\n    this.viewportElement.classList.add('loading-scroll-mode', 'reveal-scroll');\n\n    let presentationBackground;\n\n    const viewportStyles = window.getComputedStyle(this.viewportElement);\n    if (viewportStyles && viewportStyles.background) {\n      presentationBackground = viewportStyles.background;\n    }\n\n    const pageElements = [];\n    const pageContainer = horizontalSlides[0].parentNode;\n\n    let previousSlide;\n\n    // Creates a new page element and appends the given slide/bg\n    // to it.\n    const createPageElement = (slide, h, v, isVertical) => {\n      let contentContainer;\n\n      // If this slide is part of an auto-animation sequence, we\n      // group it under the same page element as the previous slide\n      if (\n        previousSlide &&\n        this.Reveal.shouldAutoAnimateBetween(previousSlide, slide)\n      ) {\n        contentContainer = document.createElement('div');\n        contentContainer.className =\n          'scroll-page-content scroll-auto-animate-page';\n        contentContainer.style.display = 'none';\n        previousSlide\n          .closest('.scroll-page-content')\n          .parentNode.appendChild(contentContainer);\n      } else {\n        // Wrap the slide in a page element and hide its overflow\n        // so that no page ever flows onto another\n        const page = document.createElement('div');\n        page.className = 'scroll-page';\n        pageElements.push(page);\n\n        // This transfers over the background of the vertical stack containing\n        // the slide if it exists. Otherwise, it uses the presentation-wide\n        // background.\n        if (isVertical && horizontalBackgrounds.length > h) {\n          const slideBackground = horizontalBackgrounds[h];\n          const pageBackground = window.getComputedStyle(slideBackground);\n\n          if (pageBackground && pageBackground.background) {\n            page.style.background = pageBackground.background;\n          } else if (presentationBackground) {\n            page.style.background = presentationBackground;\n          }\n        } else if (presentationBackground) {\n          page.style.background = presentationBackground;\n        }\n\n        const stickyContainer = document.createElement('div');\n        stickyContainer.className = 'scroll-page-sticky';\n        page.appendChild(stickyContainer);\n\n        contentContainer = document.createElement('div');\n        contentContainer.className = 'scroll-page-content';\n        stickyContainer.appendChild(contentContainer);\n      }\n\n      contentContainer.appendChild(slide);\n\n      slide.classList.remove('past', 'future');\n      slide.setAttribute('data-index-h', h);\n      slide.setAttribute('data-index-v', v);\n\n      if (slide.slideBackgroundElement) {\n        slide.slideBackgroundElement.remove('past', 'future');\n        contentContainer.insertBefore(slide.slideBackgroundElement, slide);\n      }\n\n      previousSlide = slide;\n    };\n\n    // Slide and slide background layout\n    horizontalSlides.forEach((horizontalSlide, h) => {\n      if (this.Reveal.isVerticalStack(horizontalSlide)) {\n        horizontalSlide\n          .querySelectorAll('section')\n          .forEach((verticalSlide, v) => {\n            createPageElement(verticalSlide, h, v, true);\n          });\n      } else {\n        createPageElement(horizontalSlide, h, 0);\n      }\n    }, this);\n\n    this.createProgressBar();\n\n    // Remove leftover stacks\n    queryAll(this.Reveal.getRevealElement(), '.stack').forEach((stack) =>\n      stack.remove()\n    );\n\n    // Add our newly created pages to the DOM\n    pageElements.forEach((page) => pageContainer.appendChild(page));\n\n    // Re-run JS-based content layout after the slide is added to page DOM\n    this.Reveal.slideContent.layout(this.Reveal.getSlidesElement());\n\n    this.Reveal.layout();\n    this.Reveal.setState(stateBeforeActivation);\n\n    this.activatedCallbacks.forEach((callback) => callback());\n    this.activatedCallbacks = [];\n\n    this.restoreScrollPosition();\n\n    this.viewportElement.classList.remove('loading-scroll-mode');\n    this.viewportElement.addEventListener('scroll', this.onScroll, {\n      passive: true,\n    });\n  }\n\n  /**\n   * Deactivates the scroll view and restores the standard slide-based\n   * presentation.\n   */\n  deactivate() {\n    if (!this.active) return;\n\n    const stateBeforeDeactivation = this.Reveal.getState();\n\n    this.active = false;\n\n    this.viewportElement.removeEventListener('scroll', this.onScroll);\n    this.viewportElement.classList.remove('reveal-scroll');\n\n    this.removeProgressBar();\n\n    this.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n    this.Reveal.sync();\n    this.Reveal.setState(stateBeforeDeactivation);\n\n    this.slideHTMLBeforeActivation = null;\n  }\n\n  toggle(override) {\n    if (typeof override === 'boolean') {\n      override ? this.activate() : this.deactivate();\n    } else {\n      this.isActive() ? this.deactivate() : this.activate();\n    }\n  }\n\n  /**\n   * Checks if the scroll view is currently active.\n   */\n  isActive() {\n    return this.active;\n  }\n\n  /**\n   * Renders the progress bar component.\n   */\n  createProgressBar() {\n    this.progressBar = document.createElement('div');\n    this.progressBar.className = 'scrollbar';\n\n    this.progressBarInner = document.createElement('div');\n    this.progressBarInner.className = 'scrollbar-inner';\n    this.progressBar.appendChild(this.progressBarInner);\n\n    this.progressBarPlayhead = document.createElement('div');\n    this.progressBarPlayhead.className = 'scrollbar-playhead';\n    this.progressBarInner.appendChild(this.progressBarPlayhead);\n\n    this.viewportElement.insertBefore(\n      this.progressBar,\n      this.viewportElement.firstChild\n    );\n\n    const handleDocumentMouseMove = (event) => {\n      let progress =\n        (event.clientY - this.progressBarInner.getBoundingClientRect().top) /\n        this.progressBarHeight;\n      progress = Math.max(Math.min(progress, 1), 0);\n\n      this.viewportElement.scrollTop =\n        progress *\n        (this.viewportElement.scrollHeight - this.viewportElement.offsetHeight);\n    };\n\n    const handleDocumentMouseUp = (event) => {\n      this.draggingProgressBar = false;\n      this.showProgressBar();\n\n      document.removeEventListener('mousemove', handleDocumentMouseMove);\n      document.removeEventListener('mouseup', handleDocumentMouseUp);\n    };\n\n    const handleMouseDown = (event) => {\n      event.preventDefault();\n\n      this.draggingProgressBar = true;\n\n      document.addEventListener('mousemove', handleDocumentMouseMove);\n      document.addEventListener('mouseup', handleDocumentMouseUp);\n\n      handleDocumentMouseMove(event);\n    };\n\n    this.progressBarInner.addEventListener('mousedown', handleMouseDown);\n  }\n\n  removeProgressBar() {\n    if (this.progressBar) {\n      this.progressBar.remove();\n      this.progressBar = null;\n    }\n  }\n\n  layout() {\n    if (this.isActive()) {\n      this.syncPages();\n      this.syncScrollPosition();\n    }\n  }\n\n  /**\n   * Updates our pages to match the latest configuration and\n   * presentation size.\n   */\n  syncPages() {\n    const config = this.Reveal.getConfig();\n\n    const slideSize = this.Reveal.getComputedSlideSize(\n      window.innerWidth,\n      window.innerHeight\n    );\n    const scale = this.Reveal.getScale();\n    const useCompactLayout = config.scrollLayout === 'compact';\n\n    const viewportHeight = this.viewportElement.offsetHeight;\n    const compactHeight = slideSize.height * scale;\n    const pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n    // The height that needs to be scrolled between scroll triggers\n    this.scrollTriggerHeight = useCompactLayout\n      ? compactHeight\n      : viewportHeight;\n\n    this.viewportElement.style.setProperty('--page-height', pageHeight + 'px');\n    this.viewportElement.style.scrollSnapType =\n      typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\n\n    // This will hold all scroll triggers used to show/hide slides\n    this.slideTriggers = [];\n\n    const pageElements = Array.from(\n      this.Reveal.getRevealElement().querySelectorAll('.scroll-page')\n    );\n\n    this.pages = pageElements.map((pageElement) => {\n      const page = this.createPage({\n        pageElement,\n        slideElement: pageElement.querySelector('section'),\n        stickyElement: pageElement.querySelector('.scroll-page-sticky'),\n        contentElement: pageElement.querySelector('.scroll-page-content'),\n        backgroundElement: pageElement.querySelector('.slide-background'),\n        autoAnimateElements: pageElement.querySelectorAll(\n          '.scroll-auto-animate-page'\n        ),\n        autoAnimatePages: [],\n      });\n\n      page.pageElement.style.setProperty(\n        '--slide-height',\n        config.center === true ? 'auto' : slideSize.height + 'px'\n      );\n\n      this.slideTriggers.push({\n        page: page,\n        activate: () => this.activatePage(page),\n        deactivate: () => this.deactivatePage(page),\n      });\n\n      // Create scroll triggers that show/hide fragments\n      this.createFragmentTriggersForPage(page);\n\n      // Create scroll triggers for triggering auto-animate steps\n      if (page.autoAnimateElements.length > 0) {\n        this.createAutoAnimateTriggersForPage(page);\n      }\n\n      let totalScrollTriggerCount = Math.max(page.scrollTriggers.length - 1, 0);\n\n      // Each auto-animate step may include its own scroll triggers\n      // for fragments, ensure we count those as well\n      totalScrollTriggerCount += page.autoAnimatePages.reduce((total, page) => {\n        return total + Math.max(page.scrollTriggers.length - 1, 0);\n      }, page.autoAnimatePages.length);\n\n      // Clean up from previous renders\n      page.pageElement\n        .querySelectorAll('.scroll-snap-point')\n        .forEach((el) => el.remove());\n\n      // Create snap points for all scroll triggers\n      // - Can't be absolute in FF\n      // - Can't be 0-height in Safari\n      // - Can't use snap-align on parent in Safari because then\n      //   inner triggers won't work\n      for (let i = 0; i < totalScrollTriggerCount + 1; i++) {\n        const triggerStick = document.createElement('div');\n        triggerStick.className = 'scroll-snap-point';\n        triggerStick.style.height = this.scrollTriggerHeight + 'px';\n        triggerStick.style.scrollSnapAlign = useCompactLayout\n          ? 'center'\n          : 'start';\n        page.pageElement.appendChild(triggerStick);\n\n        if (i === 0) {\n          triggerStick.style.marginTop = -this.scrollTriggerHeight + 'px';\n        }\n      }\n\n      // In the compact layout, only slides with scroll triggers cover the\n      // full viewport height. This helps avoid empty gaps before or after\n      // a sticky slide.\n      if (useCompactLayout && page.scrollTriggers.length > 0) {\n        page.pageHeight = viewportHeight;\n        page.pageElement.style.setProperty(\n          '--page-height',\n          viewportHeight + 'px'\n        );\n      } else {\n        page.pageHeight = pageHeight;\n        page.pageElement.style.removeProperty('--page-height');\n      }\n\n      // Add scroll padding based on how many scroll triggers we have\n      page.scrollPadding = this.scrollTriggerHeight * totalScrollTriggerCount;\n\n      // The total height including scrollable space\n      page.totalHeight = page.pageHeight + page.scrollPadding;\n\n      // This is used to pad the height of our page in CSS\n      page.pageElement.style.setProperty(\n        '--page-scroll-padding',\n        page.scrollPadding + 'px'\n      );\n\n      // If this is a sticky page, stick it to the vertical center\n      if (totalScrollTriggerCount > 0) {\n        page.stickyElement.style.position = 'sticky';\n        page.stickyElement.style.top =\n          Math.max((viewportHeight - page.pageHeight) / 2, 0) + 'px';\n      } else {\n        page.stickyElement.style.position = 'relative';\n        page.pageElement.style.scrollSnapAlign =\n          page.pageHeight < viewportHeight ? 'center' : 'start';\n      }\n\n      return page;\n    });\n\n    this.setTriggerRanges();\n\n    /*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n    this.viewportElement.setAttribute('data-scrollbar', config.scrollProgress);\n\n    if (config.scrollProgress && this.totalScrollTriggerCount > 1) {\n      // Create the progress bar if it doesn't already exist\n      if (!this.progressBar) this.createProgressBar();\n\n      this.syncProgressBar();\n    } else {\n      this.removeProgressBar();\n    }\n  }\n\n  /**\n   * Calculates and sets the scroll range for all of our scroll\n   * triggers.\n   */\n  setTriggerRanges() {\n    // Calculate the total number of scroll triggers\n    this.totalScrollTriggerCount = this.slideTriggers.reduce(\n      (total, trigger) => {\n        return total + Math.max(trigger.page.scrollTriggers.length, 1);\n      },\n      0\n    );\n\n    let rangeStart = 0;\n\n    // Calculate the scroll range of each scroll trigger on a scale\n    // of 0-1\n    this.slideTriggers.forEach((trigger, i) => {\n      trigger.range = [\n        rangeStart,\n        rangeStart +\n          Math.max(trigger.page.scrollTriggers.length, 1) /\n            this.totalScrollTriggerCount,\n      ];\n\n      const scrollTriggerSegmentSize =\n        (trigger.range[1] - trigger.range[0]) /\n        trigger.page.scrollTriggers.length;\n      // Set the range for each inner scroll trigger\n      trigger.page.scrollTriggers.forEach((scrollTrigger, i) => {\n        scrollTrigger.range = [\n          rangeStart + i * scrollTriggerSegmentSize,\n          rangeStart + (i + 1) * scrollTriggerSegmentSize,\n        ];\n      });\n\n      rangeStart = trigger.range[1];\n    });\n  }\n\n  /**\n   * Creates one scroll trigger for each fragments in the given page.\n   *\n   * @param {*} page\n   */\n  createFragmentTriggersForPage(page, slideElement) {\n    slideElement = slideElement || page.slideElement;\n\n    // Each fragment 'group' is an array containing one or more\n    // fragments. Multiple fragments that appear at the same time\n    // are part of the same group.\n    const fragmentGroups = this.Reveal.fragments.sort(\n      slideElement.querySelectorAll('.fragment'),\n      true\n    );\n\n    // Create scroll triggers that show/hide fragments\n    if (fragmentGroups.length) {\n      page.fragments = this.Reveal.fragments.sort(\n        slideElement.querySelectorAll('.fragment:not(.disabled)')\n      );\n      page.scrollTriggers.push(\n        // Trigger for the initial state with no fragments visible\n        {\n          activate: () => {\n            this.Reveal.fragments.update(-1, page.fragments, slideElement);\n          },\n        }\n      );\n\n      // Triggers for each fragment group\n      fragmentGroups.forEach((fragments, i) => {\n        page.scrollTriggers.push({\n          activate: () => {\n            this.Reveal.fragments.update(i, page.fragments, slideElement);\n          },\n        });\n      });\n    }\n\n    return page.scrollTriggers.length;\n  }\n\n  /**\n   * Creates scroll triggers for the auto-animate steps in the\n   * given page.\n   *\n   * @param {*} page\n   */\n  createAutoAnimateTriggersForPage(page) {\n    if (page.autoAnimateElements.length > 0) {\n      // Triggers for each subsequent auto-animate slide\n      this.slideTriggers.push(\n        ...Array.from(page.autoAnimateElements).map((autoAnimateElement, i) => {\n          let autoAnimatePage = this.createPage({\n            slideElement: autoAnimateElement.querySelector('section'),\n            contentElement: autoAnimateElement,\n            backgroundElement:\n              autoAnimateElement.querySelector('.slide-background'),\n          });\n\n          // Create fragment scroll triggers for the auto-animate slide\n          this.createFragmentTriggersForPage(\n            autoAnimatePage,\n            autoAnimatePage.slideElement\n          );\n\n          page.autoAnimatePages.push(autoAnimatePage);\n\n          // Return our slide trigger\n          return {\n            page: autoAnimatePage,\n            activate: () => this.activatePage(autoAnimatePage),\n            deactivate: () => this.deactivatePage(autoAnimatePage),\n          };\n        })\n      );\n    }\n  }\n\n  /**\n   * Helper method for creating a page definition and adding\n   * required fields. A \"page\" is a slide or auto-animate step.\n   */\n  createPage(page) {\n    page.scrollTriggers = [];\n    page.indexh = parseInt(page.slideElement.getAttribute('data-index-h'), 10);\n    page.indexv = parseInt(page.slideElement.getAttribute('data-index-v'), 10);\n\n    return page;\n  }\n\n  /**\n   * Rerenders progress bar segments so that they match the current\n   * reveal.js config and size.\n   */\n  syncProgressBar() {\n    this.progressBarInner\n      .querySelectorAll('.scrollbar-slide')\n      .forEach((slide) => slide.remove());\n\n    const scrollHeight = this.viewportElement.scrollHeight;\n    const viewportHeight = this.viewportElement.offsetHeight;\n    const viewportHeightFactor = viewportHeight / scrollHeight;\n\n    this.progressBarHeight = this.progressBarInner.offsetHeight;\n    this.playheadHeight = Math.max(\n      viewportHeightFactor * this.progressBarHeight,\n      MIN_PLAYHEAD_HEIGHT\n    );\n    this.progressBarScrollableHeight =\n      this.progressBarHeight - this.playheadHeight;\n\n    const progressSegmentHeight =\n      (viewportHeight / scrollHeight) * this.progressBarHeight;\n    const spacing = Math.min(progressSegmentHeight / 8, MAX_PROGRESS_SPACING);\n\n    this.progressBarPlayhead.style.height =\n      this.playheadHeight - spacing + 'px';\n\n    // Don't show individual segments if they're too small\n    if (progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT) {\n      this.slideTriggers.forEach((slideTrigger) => {\n        const { page } = slideTrigger;\n\n        // Visual representation of a slide\n        page.progressBarSlide = document.createElement('div');\n        page.progressBarSlide.className = 'scrollbar-slide';\n        page.progressBarSlide.style.top =\n          slideTrigger.range[0] * this.progressBarHeight + 'px';\n        page.progressBarSlide.style.height =\n          (slideTrigger.range[1] - slideTrigger.range[0]) *\n            this.progressBarHeight -\n          spacing +\n          'px';\n        page.progressBarSlide.classList.toggle(\n          'has-triggers',\n          page.scrollTriggers.length > 0\n        );\n        this.progressBarInner.appendChild(page.progressBarSlide);\n\n        // Visual representations of each scroll trigger\n        page.scrollTriggerElements = page.scrollTriggers.map((trigger, i) => {\n          const triggerElement = document.createElement('div');\n          triggerElement.className = 'scrollbar-trigger';\n          triggerElement.style.top =\n            (trigger.range[0] - slideTrigger.range[0]) *\n              this.progressBarHeight +\n            'px';\n          triggerElement.style.height =\n            (trigger.range[1] - trigger.range[0]) * this.progressBarHeight -\n            spacing +\n            'px';\n          page.progressBarSlide.appendChild(triggerElement);\n\n          if (i === 0) triggerElement.style.display = 'none';\n\n          return triggerElement;\n        });\n      });\n    } else {\n      this.pages.forEach((page) => (page.progressBarSlide = null));\n    }\n  }\n\n  /**\n   * Reads the current scroll position and updates our active\n   * trigger states accordingly.\n   */\n  syncScrollPosition() {\n    const viewportHeight = this.viewportElement.offsetHeight;\n    const viewportHeightFactor =\n      viewportHeight / this.viewportElement.scrollHeight;\n\n    const scrollTop = this.viewportElement.scrollTop;\n    const scrollHeight = this.viewportElement.scrollHeight - viewportHeight;\n    const scrollProgress = Math.max(Math.min(scrollTop / scrollHeight, 1), 0);\n    const scrollProgressMid = Math.max(\n      Math.min(\n        (scrollTop + viewportHeight / 2) / this.viewportElement.scrollHeight,\n        1\n      ),\n      0\n    );\n\n    let activePage;\n\n    this.slideTriggers.forEach((trigger) => {\n      const { page } = trigger;\n\n      const shouldPreload =\n        scrollProgress >= trigger.range[0] - viewportHeightFactor * 2 &&\n        scrollProgress <= trigger.range[1] + viewportHeightFactor * 2;\n\n      // Load slides that are within the preload range\n      if (shouldPreload && !page.loaded) {\n        page.loaded = true;\n        this.Reveal.slideContent.load(page.slideElement);\n      } else if (page.loaded) {\n        page.loaded = false;\n        this.Reveal.slideContent.unload(page.slideElement);\n      }\n\n      // If we're within this trigger range, activate it\n      if (\n        scrollProgress >= trigger.range[0] &&\n        scrollProgress <= trigger.range[1]\n      ) {\n        this.activateTrigger(trigger);\n        activePage = trigger.page;\n      }\n      // .. otherwise deactivate\n      else if (trigger.active) {\n        this.deactivateTrigger(trigger);\n      }\n    });\n\n    // Each page can have its own scroll triggers, check if any of those\n    // need to be activated/deactivated\n    if (activePage) {\n      activePage.scrollTriggers.forEach((trigger) => {\n        if (\n          scrollProgressMid >= trigger.range[0] &&\n          scrollProgressMid <= trigger.range[1]\n        ) {\n          this.activateTrigger(trigger);\n        } else if (trigger.active) {\n          this.deactivateTrigger(trigger);\n        }\n      });\n    }\n\n    // Update our visual progress indication\n    this.setProgressBarValue(\n      scrollTop / (this.viewportElement.scrollHeight - viewportHeight)\n    );\n  }\n\n  /**\n   * Moves the progress bar playhead to the specified position.\n   *\n   * @param {number} progress 0-1\n   */\n  setProgressBarValue(progress) {\n    if (this.progressBar) {\n      this.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n      this.getAllPages()\n        .filter((page) => page.progressBarSlide)\n        .forEach((page) => {\n          page.progressBarSlide.classList.toggle(\n            'active',\n            page.active === true\n          );\n\n          page.scrollTriggers.forEach((trigger, i) => {\n            page.scrollTriggerElements[i].classList.toggle(\n              'active',\n              page.active === true && trigger.active === true\n            );\n          });\n        });\n\n      this.showProgressBar();\n    }\n  }\n\n  /**\n   * Show the progress bar and, if configured, automatically hide\n   * it after a delay.\n   */\n  showProgressBar() {\n    this.progressBar.classList.add('visible');\n\n    clearTimeout(this.hideProgressBarTimeout);\n\n    if (\n      this.Reveal.getConfig().scrollProgress === 'auto' &&\n      !this.draggingProgressBar\n    ) {\n      this.hideProgressBarTimeout = setTimeout(() => {\n        if (this.progressBar) {\n          this.progressBar.classList.remove('visible');\n        }\n      }, HIDE_SCROLLBAR_TIMEOUT);\n    }\n  }\n\n  /**\n   * Scroll to the previous page.\n   */\n  prev() {\n    this.viewportElement.scrollTop -= this.scrollTriggerHeight;\n  }\n\n  /**\n   * Scroll to the next page.\n   */\n  next() {\n    this.viewportElement.scrollTop += this.scrollTriggerHeight;\n  }\n\n  /**\n   * Scrolls the given slide element into view.\n   *\n   * @param {HTMLElement} slideElement\n   */\n  scrollToSlide(slideElement) {\n    // If the scroll view isn't active yet, queue this action\n    if (!this.active) {\n      this.activatedCallbacks.push(() => this.scrollToSlide(slideElement));\n    } else {\n      // Find the trigger for this slide\n      const trigger = this.getScrollTriggerBySlide(slideElement);\n\n      if (trigger) {\n        // Use the trigger's range to calculate the scroll position\n        this.viewportElement.scrollTop =\n          trigger.range[0] *\n          (this.viewportElement.scrollHeight -\n            this.viewportElement.offsetHeight);\n      }\n    }\n  }\n\n  /**\n   * Persists the current scroll position to session storage\n   * so that it can be restored.\n   */\n  storeScrollPosition() {\n    clearTimeout(this.storeScrollPositionTimeout);\n\n    this.storeScrollPositionTimeout = setTimeout(() => {\n      sessionStorage.setItem(\n        'reveal-scroll-top',\n        this.viewportElement.scrollTop\n      );\n      sessionStorage.setItem(\n        'reveal-scroll-origin',\n        location.origin + location.pathname\n      );\n\n      this.storeScrollPositionTimeout = null;\n    }, 50);\n  }\n\n  /**\n   * Restores the scroll position when a deck is reloader.\n   */\n  restoreScrollPosition() {\n    const scrollPosition = sessionStorage.getItem('reveal-scroll-top');\n    const scrollOrigin = sessionStorage.getItem('reveal-scroll-origin');\n\n    if (\n      scrollPosition &&\n      scrollOrigin === location.origin + location.pathname\n    ) {\n      this.viewportElement.scrollTop = parseInt(scrollPosition, 10);\n    }\n  }\n\n  /**\n   * Activates the given page and starts its embedded content\n   * if there is any.\n   *\n   * @param {object} page\n   */\n  activatePage(page) {\n    if (!page.active) {\n      page.active = true;\n\n      const {\n        slideElement,\n        backgroundElement,\n        contentElement,\n        indexh,\n        indexv,\n      } = page;\n\n      contentElement.style.display = 'block';\n\n      slideElement.classList.add('present');\n\n      if (backgroundElement) {\n        backgroundElement.classList.add('present');\n      }\n\n      this.Reveal.setCurrentScrollPage(slideElement, indexh, indexv);\n      this.Reveal.backgrounds.bubbleSlideContrastClassToElement(\n        slideElement,\n        this.viewportElement\n      );\n\n      // If this page is part of an auto-animation there will be one\n      // content element per auto-animated page. We need to show the\n      // current page and hide all others.\n      Array.from(\n        contentElement.parentNode.querySelectorAll('.scroll-page-content')\n      ).forEach((sibling) => {\n        if (sibling !== contentElement) {\n          sibling.style.display = 'none';\n        }\n      });\n    }\n  }\n\n  /**\n   * Deactivates the page after it has been visible.\n   *\n   * @param {object} page\n   */\n  deactivatePage(page) {\n    if (page.active) {\n      page.active = false;\n      if (page.slideElement) page.slideElement.classList.remove('present');\n      if (page.backgroundElement)\n        page.backgroundElement.classList.remove('present');\n    }\n  }\n\n  activateTrigger(trigger) {\n    if (!trigger.active) {\n      trigger.active = true;\n      trigger.activate();\n    }\n  }\n\n  deactivateTrigger(trigger) {\n    if (trigger.active) {\n      trigger.active = false;\n\n      if (trigger.deactivate) {\n        trigger.deactivate();\n      }\n    }\n  }\n\n  /**\n   * Retrieve a slide by its original h/v index (i.e. the indices the\n   * slide had before being linearized).\n   *\n   * @param {number} h\n   * @param {number} v\n   * @returns {HTMLElement}\n   */\n  getSlideByIndices(h, v) {\n    const page = this.getAllPages().find((page) => {\n      return page.indexh === h && page.indexv === v;\n    });\n\n    return page ? page.slideElement : null;\n  }\n\n  /**\n   * Retrieve a list of all scroll triggers for the given slide\n   * DOM element.\n   *\n   * @param {HTMLElement} slide\n   * @returns {Array}\n   */\n  getScrollTriggerBySlide(slide) {\n    return this.slideTriggers.find(\n      (trigger) => trigger.page.slideElement === slide\n    );\n  }\n\n  /**\n   * Get a list of all pages in the scroll view. This includes\n   * both top-level slides and auto-animate steps.\n   *\n   * @returns {Array}\n   */\n  getAllPages() {\n    return this.pages.flatMap((page) => [\n      page,\n      ...(page.autoAnimatePages || []),\n    ]);\n  }\n\n  onScroll() {\n    this.syncScrollPosition();\n    this.storeScrollPosition();\n  }\n\n  get viewportElement() {\n    return this.Reveal.getViewportElement();\n  }\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js';\nimport { queryAll, createStyleSheet } from '../utils/util.js';\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n  }\n\n  /**\n   * Configures the presentation for printing to a static\n   * PDF.\n   */\n  async activate() {\n    const config = this.Reveal.getConfig();\n    const slides = queryAll(this.Reveal.getRevealElement(), SLIDES_SELECTOR);\n\n    // Compute slide numbers now, before we start duplicating slides\n    const injectPageNumbers =\n      config.slideNumber && /all|print/i.test(config.showSlideNumber);\n\n    const slideSize = this.Reveal.getComputedSlideSize(\n      window.innerWidth,\n      window.innerHeight\n    );\n\n    // Dimensions of the PDF pages\n    const pageWidth = Math.floor(slideSize.width * (1 + config.margin)),\n      pageHeight = Math.floor(slideSize.height * (1 + config.margin));\n\n    // Dimensions of slides within the pages\n    const slideWidth = slideSize.width,\n      slideHeight = slideSize.height;\n\n    await new Promise(requestAnimationFrame);\n\n    // Let the browser know what page size we want to print\n    createStyleSheet(\n      '@page{size:' + pageWidth + 'px ' + pageHeight + 'px; margin: 0px;}'\n    );\n\n    // Limit the size of certain elements to the dimensions of the slide\n    createStyleSheet(\n      '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: ' +\n        slideWidth +\n        'px; max-height:' +\n        slideHeight +\n        'px}'\n    );\n\n    document.documentElement.classList.add('reveal-print', 'print-pdf');\n    document.body.style.width = pageWidth + 'px';\n    document.body.style.height = pageHeight + 'px';\n\n    const viewportElement = this.Reveal.getViewportElement();\n    let presentationBackground;\n    if (viewportElement) {\n      const viewportStyles = window.getComputedStyle(viewportElement);\n      if (viewportStyles && viewportStyles.background) {\n        presentationBackground = viewportStyles.background;\n      }\n    }\n\n    // Make sure stretch elements fit on slide\n    await new Promise(requestAnimationFrame);\n    this.Reveal.layoutSlideContents(slideWidth, slideHeight);\n\n    // Batch scrollHeight access to prevent layout thrashing\n    await new Promise(requestAnimationFrame);\n\n    const slideScrollHeights = slides.map((slide) => slide.scrollHeight);\n\n    const pages = [];\n    const pageContainer = slides[0].parentNode;\n    let slideNumber = 1;\n\n    // Slide and slide background layout\n    slides.forEach(function (slide, index) {\n      // Vertical stacks are not centred since their section\n      // children will be\n      if (slide.classList.contains('stack') === false) {\n        // Center the slide inside of the page, giving the slide some margin\n        let left = (pageWidth - slideWidth) / 2;\n        let top = (pageHeight - slideHeight) / 2;\n\n        const contentHeight = slideScrollHeights[index];\n        let numberOfPages = Math.max(Math.ceil(contentHeight / pageHeight), 1);\n\n        // Adhere to configured pages per slide limit\n        numberOfPages = Math.min(numberOfPages, config.pdfMaxPagesPerSlide);\n\n        // Center slides vertically\n        if (\n          (numberOfPages === 1 && config.center) ||\n          slide.classList.contains('center')\n        ) {\n          top = Math.max((pageHeight - contentHeight) / 2, 0);\n        }\n\n        // Wrap the slide in a page element and hide its overflow\n        // so that no page ever flows onto another\n        const page = document.createElement('div');\n        pages.push(page);\n\n        page.className = 'pdf-page';\n        page.style.height =\n          (pageHeight + config.pdfPageHeightOffset) * numberOfPages + 'px';\n\n        // Copy the presentation-wide background to each individual\n        // page when printing\n        if (presentationBackground) {\n          page.style.background = presentationBackground;\n        }\n\n        page.appendChild(slide);\n\n        // Position the slide inside of the page\n        slide.style.left = left + 'px';\n        slide.style.top = top + 'px';\n        slide.style.width = slideWidth + 'px';\n\n        this.Reveal.slideContent.layout(slide);\n\n        if (slide.slideBackgroundElement) {\n          page.insertBefore(slide.slideBackgroundElement, slide);\n        }\n\n        // Inject notes if `showNotes` is enabled\n        if (config.showNotes) {\n          // Are there notes for this slide?\n          const notes = this.Reveal.getSlideNotes(slide);\n          if (notes) {\n            const notesSpacing = 8;\n            const notesLayout =\n              typeof config.showNotes === 'string'\n                ? config.showNotes\n                : 'inline';\n            const notesElement = document.createElement('div');\n            notesElement.classList.add('speaker-notes');\n            notesElement.classList.add('speaker-notes-pdf');\n            notesElement.setAttribute('data-layout', notesLayout);\n            notesElement.innerHTML = notes;\n\n            if (notesLayout === 'separate-page') {\n              pages.push(notesElement);\n            } else {\n              notesElement.style.left = notesSpacing + 'px';\n              notesElement.style.bottom = notesSpacing + 'px';\n              notesElement.style.width = pageWidth - notesSpacing * 2 + 'px';\n              page.appendChild(notesElement);\n            }\n          }\n        }\n\n        // Inject page numbers if `slideNumbers` are enabled\n        if (injectPageNumbers) {\n          const numberElement = document.createElement('div');\n          numberElement.classList.add('slide-number');\n          numberElement.classList.add('slide-number-pdf');\n          numberElement.innerHTML = slideNumber++;\n          page.appendChild(numberElement);\n        }\n\n        // Copy page and show fragments one after another\n        if (config.pdfSeparateFragments) {\n          // Each fragment 'group' is an array containing one or more\n          // fragments. Multiple fragments that appear at the same time\n          // are part of the same group.\n          const fragmentGroups = this.Reveal.fragments.sort(\n            page.querySelectorAll('.fragment'),\n            true\n          );\n\n          let previousFragmentStep;\n\n          fragmentGroups.forEach(function (fragments, index) {\n            // Remove 'current-fragment' from the previous group\n            if (previousFragmentStep) {\n              previousFragmentStep.forEach(function (fragment) {\n                fragment.classList.remove('current-fragment');\n              });\n            }\n\n            // Show the fragments for the current index\n            fragments.forEach(function (fragment) {\n              fragment.classList.add('visible', 'current-fragment');\n            }, this);\n\n            // Create a separate page for the current fragment state\n            const clonedPage = page.cloneNode(true);\n\n            // Inject unique page numbers for fragments\n            if (injectPageNumbers) {\n              const numberElement =\n                clonedPage.querySelector('.slide-number-pdf');\n              const fragmentNumber = index + 1;\n              numberElement.innerHTML += '.' + fragmentNumber;\n            }\n\n            pages.push(clonedPage);\n\n            previousFragmentStep = fragments;\n          }, this);\n\n          // Reset the first/original page so that all fragments are hidden\n          fragmentGroups.forEach(function (fragments) {\n            fragments.forEach(function (fragment) {\n              fragment.classList.remove('visible', 'current-fragment');\n            });\n          });\n        }\n        // Show all fragments\n        else {\n          queryAll(page, '.fragment:not(.fade-out)').forEach(\n            function (fragment) {\n              fragment.classList.add('visible');\n            }\n          );\n        }\n      }\n    }, this);\n\n    await new Promise(requestAnimationFrame);\n\n    pages.forEach((page) => pageContainer.appendChild(page));\n\n    // Re-run JS-based content layout after the slide is added to page DOM\n    this.Reveal.slideContent.layout(this.Reveal.getSlidesElement());\n\n    // Notify subscribers that the PDF layout is good to go\n    this.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n    viewportElement.classList.remove('loading-scroll-mode');\n  }\n\n  /**\n   * Checks if the print mode is/should be activated.\n   */\n  isActive() {\n    return this.Reveal.getConfig().view === 'print';\n  }\n}\n","import { extend, queryAll } from '../utils/util.js';\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    if (config.fragments === false) {\n      this.disable();\n    } else if (oldConfig.fragments === false) {\n      this.enable();\n    }\n  }\n\n  /**\n   * If fragments are disabled in the deck, they should all be\n   * visible rather than stepped through.\n   */\n  disable() {\n    queryAll(this.Reveal.getSlidesElement(), '.fragment').forEach((element) => {\n      element.classList.add('visible');\n      element.classList.remove('current-fragment');\n    });\n  }\n\n  /**\n   * Reverse of #disable(). Only called if fragments have\n   * previously been disabled.\n   */\n  enable() {\n    queryAll(this.Reveal.getSlidesElement(), '.fragment').forEach((element) => {\n      element.classList.remove('visible');\n      element.classList.remove('current-fragment');\n    });\n  }\n\n  /**\n   * Returns an object describing the available fragment\n   * directions.\n   *\n   * @return {{prev: boolean, next: boolean}}\n   */\n  availableRoutes() {\n    let currentSlide = this.Reveal.getCurrentSlide();\n    if (currentSlide && this.Reveal.getConfig().fragments) {\n      let fragments = currentSlide.querySelectorAll('.fragment:not(.disabled)');\n      let hiddenFragments = currentSlide.querySelectorAll(\n        '.fragment:not(.disabled):not(.visible)'\n      );\n\n      return {\n        prev: fragments.length - hiddenFragments.length > 0,\n        next: !!hiddenFragments.length,\n      };\n    } else {\n      return { prev: false, next: false };\n    }\n  }\n\n  /**\n   * Return a sorted fragments list, ordered by an increasing\n   * \"data-fragment-index\" attribute.\n   *\n   * Fragments will be revealed in the order that they are returned by\n   * this function, so you can use the index attributes to control the\n   * order of fragment appearance.\n   *\n   * To maintain a sensible default fragment order, fragments are presumed\n   * to be passed in document order. This function adds a \"fragment-index\"\n   * attribute to each node if such an attribute is not already present,\n   * and sets that attribute to an integer value which is the position of\n   * the fragment within the fragments list.\n   *\n   * @param {object[]|*} fragments\n   * @param {boolean} grouped If true the returned array will contain\n   * nested arrays for all fragments with the same index\n   * @return {object[]} sorted Sorted array of fragments\n   */\n  sort(fragments, grouped = false) {\n    fragments = Array.from(fragments);\n\n    let ordered = [],\n      unordered = [],\n      sorted = [];\n\n    // Group ordered and unordered elements\n    fragments.forEach((fragment) => {\n      if (fragment.hasAttribute('data-fragment-index')) {\n        let index = parseInt(fragment.getAttribute('data-fragment-index'), 10);\n\n        if (!ordered[index]) {\n          ordered[index] = [];\n        }\n\n        ordered[index].push(fragment);\n      } else {\n        unordered.push([fragment]);\n      }\n    });\n\n    // Append fragments without explicit indices in their\n    // DOM order\n    ordered = ordered.concat(unordered);\n\n    // Manually count the index up per group to ensure there\n    // are no gaps\n    let index = 0;\n\n    // Push all fragments in their sorted order to an array,\n    // this flattens the groups\n    ordered.forEach((group) => {\n      group.forEach((fragment) => {\n        sorted.push(fragment);\n        fragment.setAttribute('data-fragment-index', index);\n      });\n\n      index++;\n    });\n\n    return grouped === true ? ordered : sorted;\n  }\n\n  /**\n   * Sorts and formats all of fragments in the\n   * presentation.\n   */\n  sortAll() {\n    this.Reveal.getHorizontalSlides().forEach((horizontalSlide) => {\n      let verticalSlides = queryAll(horizontalSlide, 'section');\n      verticalSlides.forEach((verticalSlide, y) => {\n        this.sort(verticalSlide.querySelectorAll('.fragment'));\n      }, this);\n\n      if (verticalSlides.length === 0)\n        this.sort(horizontalSlide.querySelectorAll('.fragment'));\n    });\n  }\n\n  /**\n   * Refreshes the fragments on the current slide so that they\n   * have the appropriate classes (.visible + .current-fragment).\n   *\n   * @param {number} [index] The index of the current fragment\n   * @param {array} [fragments] Array containing all fragments\n   * in the current slide\n   *\n   * @return {{shown: array, hidden: array}}\n   */\n  update(index, fragments, slide = this.Reveal.getCurrentSlide()) {\n    let changedFragments = {\n      shown: [],\n      hidden: [],\n    };\n\n    if (slide && this.Reveal.getConfig().fragments) {\n      fragments = fragments || this.sort(slide.querySelectorAll('.fragment'));\n\n      if (fragments.length) {\n        let maxIndex = 0;\n\n        if (typeof index !== 'number') {\n          let currentFragment = this.sort(\n            slide.querySelectorAll('.fragment.visible')\n          ).pop();\n          if (currentFragment) {\n            index = parseInt(\n              currentFragment.getAttribute('data-fragment-index') || 0,\n              10\n            );\n          }\n        }\n\n        Array.from(fragments).forEach((el, i) => {\n          if (el.hasAttribute('data-fragment-index')) {\n            i = parseInt(el.getAttribute('data-fragment-index'), 10);\n          }\n\n          maxIndex = Math.max(maxIndex, i);\n\n          // Visible fragments\n          if (i <= index) {\n            let wasVisible = el.classList.contains('visible');\n            el.classList.add('visible');\n            el.classList.remove('current-fragment');\n\n            if (i === index) {\n              // Announce the fragments one by one to the Screen Reader\n              this.Reveal.announceStatus(this.Reveal.getStatusText(el));\n\n              el.classList.add('current-fragment');\n              this.Reveal.slideContent.startEmbeddedContent(el);\n            }\n\n            if (!wasVisible) {\n              changedFragments.shown.push(el);\n              this.Reveal.dispatchEvent({\n                target: el,\n                type: 'visible',\n                bubbles: false,\n              });\n            }\n          }\n          // Hidden fragments\n          else {\n            let wasVisible = el.classList.contains('visible');\n            el.classList.remove('visible');\n            el.classList.remove('current-fragment');\n\n            if (wasVisible) {\n              this.Reveal.slideContent.stopEmbeddedContent(el);\n              changedFragments.hidden.push(el);\n              this.Reveal.dispatchEvent({\n                target: el,\n                type: 'hidden',\n                bubbles: false,\n              });\n            }\n          }\n        });\n\n        // Write the current fragment index to the slide <section>.\n        // This can be used by end users to apply styles based on\n        // the current fragment index.\n        index = typeof index === 'number' ? index : -1;\n        index = Math.max(Math.min(index, maxIndex), -1);\n        slide.setAttribute('data-fragment', index);\n      }\n    }\n\n    if (changedFragments.hidden.length) {\n      this.Reveal.dispatchEvent({\n        type: 'fragmenthidden',\n        data: {\n          fragment: changedFragments.hidden[0],\n          fragments: changedFragments.hidden,\n        },\n      });\n    }\n\n    if (changedFragments.shown.length) {\n      this.Reveal.dispatchEvent({\n        type: 'fragmentshown',\n        data: {\n          fragment: changedFragments.shown[0],\n          fragments: changedFragments.shown,\n        },\n      });\n    }\n\n    return changedFragments;\n  }\n\n  /**\n   * Formats the fragments on the given slide so that they have\n   * valid indices. Call this if fragments are changed in the DOM\n   * after reveal.js has already initialized.\n   *\n   * @param {HTMLElement} slide\n   * @return {Array} a list of the HTML fragments that were synced\n   */\n  sync(slide = this.Reveal.getCurrentSlide()) {\n    return this.sort(slide.querySelectorAll('.fragment'));\n  }\n\n  /**\n   * Navigate to the specified slide fragment.\n   *\n   * @param {?number} index The index of the fragment that\n   * should be shown, -1 means all are invisible\n   * @param {number} offset Integer offset to apply to the\n   * fragment index\n   *\n   * @return {boolean} true if a change was made in any\n   * fragments visibility as part of this call\n   */\n  goto(index, offset = 0) {\n    let currentSlide = this.Reveal.getCurrentSlide();\n    if (currentSlide && this.Reveal.getConfig().fragments) {\n      let fragments = this.sort(\n        currentSlide.querySelectorAll('.fragment:not(.disabled)')\n      );\n      if (fragments.length) {\n        // If no index is specified, find the current\n        if (typeof index !== 'number') {\n          let lastVisibleFragment = this.sort(\n            currentSlide.querySelectorAll('.fragment:not(.disabled).visible')\n          ).pop();\n\n          if (lastVisibleFragment) {\n            index = parseInt(\n              lastVisibleFragment.getAttribute('data-fragment-index') || 0,\n              10\n            );\n          } else {\n            index = -1;\n          }\n        }\n\n        // Apply the offset if there is one\n        index += offset;\n\n        let changedFragments = this.update(index, fragments);\n\n        this.Reveal.controls.update();\n        this.Reveal.progress.update();\n\n        if (this.Reveal.getConfig().fragmentInURL) {\n          this.Reveal.location.writeURL();\n        }\n\n        return !!(\n          changedFragments.shown.length || changedFragments.hidden.length\n        );\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Navigate to the next slide fragment.\n   *\n   * @return {boolean} true if there was a next fragment,\n   * false otherwise\n   */\n  next() {\n    return this.goto(null, 1);\n  }\n\n  /**\n   * Navigate to the previous slide fragment.\n   *\n   * @return {boolean} true if there was a previous fragment,\n   * false otherwise\n   */\n  prev() {\n    return this.goto(null, -1);\n  }\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js';\nimport { extend, queryAll, transformElement } from '../utils/util.js';\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    this.active = false;\n\n    this.onSlideClicked = this.onSlideClicked.bind(this);\n  }\n\n  /**\n   * Displays the overview of slides (quick nav) by scaling\n   * down and arranging all slide elements.\n   */\n  activate() {\n    // Only proceed if enabled in config\n    if (\n      this.Reveal.getConfig().overview &&\n      !this.Reveal.isScrollView() &&\n      !this.isActive()\n    ) {\n      this.active = true;\n\n      this.Reveal.getRevealElement().classList.add('overview');\n\n      // Don't auto-slide while in overview mode\n      this.Reveal.cancelAutoSlide();\n\n      // Move the backgrounds element into the slide container to\n      // that the same scaling is applied\n      this.Reveal.getSlidesElement().appendChild(\n        this.Reveal.getBackgroundsElement()\n      );\n\n      // Clicking on an overview slide navigates to it\n      queryAll(this.Reveal.getRevealElement(), SLIDES_SELECTOR).forEach(\n        (slide) => {\n          if (!slide.classList.contains('stack')) {\n            slide.addEventListener('click', this.onSlideClicked, true);\n          }\n        }\n      );\n\n      // Calculate slide sizes\n      const margin = 70;\n      const slideSize = this.Reveal.getComputedSlideSize();\n      this.overviewSlideWidth = slideSize.width + margin;\n      this.overviewSlideHeight = slideSize.height + margin;\n\n      // Reverse in RTL mode\n      if (this.Reveal.getConfig().rtl) {\n        this.overviewSlideWidth = -this.overviewSlideWidth;\n      }\n\n      this.Reveal.updateSlidesVisibility();\n\n      this.layout();\n      this.update();\n\n      this.Reveal.layout();\n\n      const indices = this.Reveal.getIndices();\n\n      // Notify observers of the overview showing\n      this.Reveal.dispatchEvent({\n        type: 'overviewshown',\n        data: {\n          indexh: indices.h,\n          indexv: indices.v,\n          currentSlide: this.Reveal.getCurrentSlide(),\n        },\n      });\n    }\n  }\n\n  /**\n   * Uses CSS transforms to position all slides in a grid for\n   * display inside of the overview mode.\n   */\n  layout() {\n    // Layout slides\n    this.Reveal.getHorizontalSlides().forEach((hslide, h) => {\n      hslide.setAttribute('data-index-h', h);\n      transformElement(\n        hslide,\n        'translate3d(' + h * this.overviewSlideWidth + 'px, 0, 0)'\n      );\n\n      if (hslide.classList.contains('stack')) {\n        queryAll(hslide, 'section').forEach((vslide, v) => {\n          vslide.setAttribute('data-index-h', h);\n          vslide.setAttribute('data-index-v', v);\n\n          transformElement(\n            vslide,\n            'translate3d(0, ' + v * this.overviewSlideHeight + 'px, 0)'\n          );\n        });\n      }\n    });\n\n    // Layout slide backgrounds\n    Array.from(this.Reveal.getBackgroundsElement().childNodes).forEach(\n      (hbackground, h) => {\n        transformElement(\n          hbackground,\n          'translate3d(' + h * this.overviewSlideWidth + 'px, 0, 0)'\n        );\n\n        queryAll(hbackground, '.slide-background').forEach((vbackground, v) => {\n          transformElement(\n            vbackground,\n            'translate3d(0, ' + v * this.overviewSlideHeight + 'px, 0)'\n          );\n        });\n      }\n    );\n  }\n\n  /**\n   * Moves the overview viewport to the current slides.\n   * Called each time the current slide changes.\n   */\n  update() {\n    const vmin = Math.min(window.innerWidth, window.innerHeight);\n    const scale = Math.max(vmin / 5, 150) / vmin;\n    const indices = this.Reveal.getIndices();\n\n    this.Reveal.transformSlides({\n      overview: [\n        'scale(' + scale + ')',\n        'translateX(' + -indices.h * this.overviewSlideWidth + 'px)',\n        'translateY(' + -indices.v * this.overviewSlideHeight + 'px)',\n      ].join(' '),\n    });\n  }\n\n  /**\n   * Exits the slide overview and enters the currently\n   * active slide.\n   */\n  deactivate() {\n    // Only proceed if enabled in config\n    if (this.Reveal.getConfig().overview) {\n      this.active = false;\n\n      this.Reveal.getRevealElement().classList.remove('overview');\n\n      // Temporarily add a class so that transitions can do different things\n      // depending on whether they are exiting/entering overview, or just\n      // moving from slide to slide\n      this.Reveal.getRevealElement().classList.add('overview-deactivating');\n\n      setTimeout(() => {\n        this.Reveal.getRevealElement().classList.remove(\n          'overview-deactivating'\n        );\n      }, 1);\n\n      // Move the background element back out\n      this.Reveal.getRevealElement().appendChild(\n        this.Reveal.getBackgroundsElement()\n      );\n\n      // Clean up changes made to slides\n      queryAll(this.Reveal.getRevealElement(), SLIDES_SELECTOR).forEach(\n        (slide) => {\n          transformElement(slide, '');\n\n          slide.removeEventListener('click', this.onSlideClicked, true);\n        }\n      );\n\n      // Clean up changes made to backgrounds\n      queryAll(\n        this.Reveal.getBackgroundsElement(),\n        '.slide-background'\n      ).forEach((background) => {\n        transformElement(background, '');\n      });\n\n      this.Reveal.transformSlides({ overview: '' });\n\n      const indices = this.Reveal.getIndices();\n\n      this.Reveal.slide(indices.h, indices.v);\n      this.Reveal.layout();\n      this.Reveal.cueAutoSlide();\n\n      // Notify observers of the overview hiding\n      this.Reveal.dispatchEvent({\n        type: 'overviewhidden',\n        data: {\n          indexh: indices.h,\n          indexv: indices.v,\n          currentSlide: this.Reveal.getCurrentSlide(),\n        },\n      });\n    }\n  }\n\n  /**\n   * Toggles the slide overview mode on and off.\n   *\n   * @param {Boolean} [override] Flag which overrides the\n   * toggle logic and forcibly sets the desired state. True means\n   * overview is open, false means it's closed.\n   */\n  toggle(override) {\n    if (typeof override === 'boolean') {\n      override ? this.activate() : this.deactivate();\n    } else {\n      this.isActive() ? this.deactivate() : this.activate();\n    }\n  }\n\n  /**\n   * Checks if the overview is currently active.\n   *\n   * @return {Boolean} true if the overview is active,\n   * false otherwise\n   */\n  isActive() {\n    return this.active;\n  }\n\n  /**\n   * Invoked when a slide is and we're in the overview.\n   *\n   * @param {object} event\n   */\n  onSlideClicked(event) {\n    if (this.isActive()) {\n      event.preventDefault();\n\n      let element = event.target;\n\n      while (element && !element.nodeName.match(/section/gi)) {\n        element = element.parentNode;\n      }\n\n      if (element && !element.classList.contains('disabled')) {\n        this.deactivate();\n\n        if (element.nodeName.match(/section/gi)) {\n          let h = parseInt(element.getAttribute('data-index-h'), 10),\n            v = parseInt(element.getAttribute('data-index-v'), 10);\n\n          this.Reveal.slide(h, v);\n        }\n      }\n    }\n  }\n}\n","import { enterFullscreen } from '../utils/util.js';\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    // A key:value map of keyboard keys and descriptions of\n    // the actions they trigger\n    this.shortcuts = {};\n\n    // Holds custom key code mappings\n    this.bindings = {};\n\n    this.onDocumentKeyDown = this.onDocumentKeyDown.bind(this);\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    if (config.navigationMode === 'linear') {\n      this.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] =\n        'Next slide';\n      this.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K'] =\n        'Previous slide';\n    } else {\n      this.shortcuts['N  ,  SPACE'] = 'Next slide';\n      this.shortcuts['P  ,  Shift SPACE'] = 'Previous slide';\n      this.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n      this.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n      this.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n      this.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n    }\n\n    this.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;'] =\n      'Navigate without fragments';\n    this.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;'] =\n      'Jump to first/last slide';\n    this.shortcuts['B  ,  .'] = 'Pause';\n    this.shortcuts['F'] = 'Fullscreen';\n    this.shortcuts['G'] = 'Jump to slide';\n    this.shortcuts['ESC, O'] = 'Slide overview';\n  }\n\n  /**\n   * Starts listening for keyboard events.\n   */\n  bind() {\n    document.addEventListener('keydown', this.onDocumentKeyDown, false);\n  }\n\n  /**\n   * Stops listening for keyboard events.\n   */\n  unbind() {\n    document.removeEventListener('keydown', this.onDocumentKeyDown, false);\n  }\n\n  /**\n   * Add a custom key binding with optional description to\n   * be added to the help screen.\n   */\n  addKeyBinding(binding, callback) {\n    if (typeof binding === 'object' && binding.keyCode) {\n      this.bindings[binding.keyCode] = {\n        callback: callback,\n        key: binding.key,\n        description: binding.description,\n      };\n    } else {\n      this.bindings[binding] = {\n        callback: callback,\n        key: null,\n        description: null,\n      };\n    }\n  }\n\n  /**\n   * Removes the specified custom key binding.\n   */\n  removeKeyBinding(keyCode) {\n    delete this.bindings[keyCode];\n  }\n\n  /**\n   * Programmatically triggers a keyboard event\n   *\n   * @param {int} keyCode\n   */\n  triggerKey(keyCode) {\n    this.onDocumentKeyDown({ keyCode });\n  }\n\n  /**\n   * Registers a new shortcut to include in the help overlay\n   *\n   * @param {String} key\n   * @param {String} value\n   */\n  registerKeyboardShortcut(key, value) {\n    this.shortcuts[key] = value;\n  }\n\n  getShortcuts() {\n    return this.shortcuts;\n  }\n\n  getBindings() {\n    return this.bindings;\n  }\n\n  /**\n   * Handler for the document level 'keydown' event.\n   *\n   * @param {object} event\n   */\n  onDocumentKeyDown(event) {\n    let config = this.Reveal.getConfig();\n\n    // If there's a condition specified and it returns false,\n    // ignore this event\n    if (\n      typeof config.keyboardCondition === 'function' &&\n      config.keyboardCondition(event) === false\n    ) {\n      return true;\n    }\n\n    // If keyboardCondition is set, only capture keyboard events\n    // for embedded decks when they are focused\n    if (config.keyboardCondition === 'focused' && !this.Reveal.isFocused()) {\n      return true;\n    }\n\n    // Shorthand\n    let keyCode = event.keyCode;\n\n    // Remember if auto-sliding was paused so we can toggle it\n    let autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n    this.Reveal.onUserInput(event);\n\n    // Is there a focused element that could be using the keyboard?\n    let activeElementIsCE =\n      document.activeElement &&\n      document.activeElement.isContentEditable === true;\n    let activeElementIsInput =\n      document.activeElement &&\n      document.activeElement.tagName &&\n      /input|textarea/i.test(document.activeElement.tagName);\n    let activeElementIsNotes =\n      document.activeElement &&\n      document.activeElement.className &&\n      /speaker-notes/i.test(document.activeElement.className);\n\n    // Whitelist certain modifiers for slide navigation shortcuts\n    let keyCodeUsesModifier =\n      [32, 37, 38, 39, 40, 78, 80, 191].indexOf(event.keyCode) !== -1;\n\n    // Prevent all other events when a modifier is pressed\n    let unusedModifier =\n      !((keyCodeUsesModifier && event.shiftKey) || event.altKey) &&\n      (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey);\n\n    // Disregard the event if there's a focused element or a\n    // keyboard modifier key is present\n    if (\n      activeElementIsCE ||\n      activeElementIsInput ||\n      activeElementIsNotes ||\n      unusedModifier\n    )\n      return;\n\n    // While paused only allow resume keyboard events; 'b', 'v', '.'\n    let resumeKeyCodes = [66, 86, 190, 191, 112];\n    let key;\n\n    // Custom key bindings for togglePause should be able to resume\n    if (typeof config.keyboard === 'object') {\n      for (key in config.keyboard) {\n        if (config.keyboard[key] === 'togglePause') {\n          resumeKeyCodes.push(parseInt(key, 10));\n        }\n      }\n    }\n\n    if (this.Reveal.isPaused() && resumeKeyCodes.indexOf(keyCode) === -1) {\n      return false;\n    }\n\n    // Use linear navigation if we're configured to OR if\n    // the presentation is one-dimensional\n    let useLinearMode =\n      config.navigationMode === 'linear' ||\n      !this.Reveal.hasHorizontalSlides() ||\n      !this.Reveal.hasVerticalSlides();\n\n    let triggered = false;\n\n    // 1. User defined key bindings\n    if (typeof config.keyboard === 'object') {\n      for (key in config.keyboard) {\n        // Check if this binding matches the pressed key\n        if (parseInt(key, 10) === keyCode) {\n          let value = config.keyboard[key];\n\n          // Callback function\n          if (typeof value === 'function') {\n            value.apply(null, [event]);\n          }\n          // String shortcuts to reveal.js API\n          else if (\n            typeof value === 'string' &&\n            typeof this.Reveal[value] === 'function'\n          ) {\n            this.Reveal[value].call();\n          }\n\n          triggered = true;\n        }\n      }\n    }\n\n    // 2. Registered custom key bindings\n    if (triggered === false) {\n      for (key in this.bindings) {\n        // Check if this binding matches the pressed key\n        if (parseInt(key, 10) === keyCode) {\n          let action = this.bindings[key].callback;\n\n          // Callback function\n          if (typeof action === 'function') {\n            action.apply(null, [event]);\n          }\n          // String shortcuts to reveal.js API\n          else if (\n            typeof action === 'string' &&\n            typeof this.Reveal[action] === 'function'\n          ) {\n            this.Reveal[action].call();\n          }\n\n          triggered = true;\n        }\n      }\n    }\n\n    // 3. System defined key bindings\n    if (triggered === false) {\n      // Assume true and try to prove false\n      triggered = true;\n\n      // P, PAGE UP\n      if (keyCode === 80 || keyCode === 33) {\n        this.Reveal.prev({ skipFragments: event.altKey });\n      }\n      // N, PAGE DOWN\n      else if (keyCode === 78 || keyCode === 34) {\n        this.Reveal.next({ skipFragments: event.altKey });\n      }\n      // H, LEFT\n      else if (keyCode === 72 || keyCode === 37) {\n        if (event.shiftKey) {\n          this.Reveal.slide(0);\n        } else if (!this.Reveal.overview.isActive() && useLinearMode) {\n          this.Reveal.prev({ skipFragments: event.altKey });\n        } else {\n          this.Reveal.left({ skipFragments: event.altKey });\n        }\n      }\n      // L, RIGHT\n      else if (keyCode === 76 || keyCode === 39) {\n        if (event.shiftKey) {\n          this.Reveal.slide(this.Reveal.getHorizontalSlides().length - 1);\n        } else if (!this.Reveal.overview.isActive() && useLinearMode) {\n          this.Reveal.next({ skipFragments: event.altKey });\n        } else {\n          this.Reveal.right({ skipFragments: event.altKey });\n        }\n      }\n      // K, UP\n      else if (keyCode === 75 || keyCode === 38) {\n        if (event.shiftKey) {\n          this.Reveal.slide(undefined, 0);\n        } else if (!this.Reveal.overview.isActive() && useLinearMode) {\n          this.Reveal.prev({ skipFragments: event.altKey });\n        } else {\n          this.Reveal.up({ skipFragments: event.altKey });\n        }\n      }\n      // J, DOWN\n      else if (keyCode === 74 || keyCode === 40) {\n        if (event.shiftKey) {\n          this.Reveal.slide(undefined, Number.MAX_VALUE);\n        } else if (!this.Reveal.overview.isActive() && useLinearMode) {\n          this.Reveal.next({ skipFragments: event.altKey });\n        } else {\n          this.Reveal.down({ skipFragments: event.altKey });\n        }\n      }\n      // HOME\n      else if (keyCode === 36) {\n        this.Reveal.slide(0);\n      }\n      // END\n      else if (keyCode === 35) {\n        this.Reveal.slide(this.Reveal.getHorizontalSlides().length - 1);\n      }\n      // SPACE\n      else if (keyCode === 32) {\n        if (this.Reveal.overview.isActive()) {\n          this.Reveal.overview.deactivate();\n        }\n        if (event.shiftKey) {\n          this.Reveal.prev({ skipFragments: event.altKey });\n        } else {\n          this.Reveal.next({ skipFragments: event.altKey });\n        }\n      }\n      // TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n      else if (\n        [58, 59, 66, 86, 190].includes(keyCode) ||\n        (keyCode === 191 && !event.shiftKey)\n      ) {\n        this.Reveal.togglePause();\n      }\n      // F\n      else if (keyCode === 70) {\n        enterFullscreen(\n          config.embedded\n            ? this.Reveal.getViewportElement()\n            : document.documentElement\n        );\n      }\n      // A\n      else if (keyCode === 65) {\n        if (config.autoSlideStoppable) {\n          this.Reveal.toggleAutoSlide(autoSlideWasPaused);\n        }\n      }\n      // G\n      else if (keyCode === 71) {\n        if (config.jumpToSlide) {\n          this.Reveal.toggleJumpToSlide();\n        }\n      }\n      // ?\n      else if (keyCode === 191 && event.shiftKey) {\n        this.Reveal.toggleHelp();\n      }\n      // F1\n      else if (keyCode === 112) {\n        this.Reveal.toggleHelp();\n      } else {\n        triggered = false;\n      }\n    }\n\n    // If the input resulted in a triggered action we should prevent\n    // the browsers default behavior\n    if (triggered) {\n      event.preventDefault && event.preventDefault();\n    }\n    // ESC or O key\n    else if (keyCode === 27 || keyCode === 79) {\n      if (this.Reveal.closeOverlay() === false) {\n        this.Reveal.overview.toggle();\n      }\n\n      event.preventDefault && event.preventDefault();\n    }\n\n    // If auto-sliding is enabled we need to cue up\n    // another timeout\n    this.Reveal.cueAutoSlide();\n  }\n}\n","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n  // The minimum number of milliseconds that must pass between\n  // calls to history.replaceState\n  MAX_REPLACE_STATE_FREQUENCY = 1000;\n\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    // Delays updates to the URL due to a Chrome thumbnailer bug\n    this.writeURLTimeout = 0;\n\n    this.replaceStateTimestamp = 0;\n\n    this.onWindowHashChange = this.onWindowHashChange.bind(this);\n  }\n\n  bind() {\n    window.addEventListener('hashchange', this.onWindowHashChange, false);\n  }\n\n  unbind() {\n    window.removeEventListener('hashchange', this.onWindowHashChange, false);\n  }\n\n  /**\n   * Returns the slide indices for the given hash link.\n   *\n   * @param {string} [hash] the hash string that we want to\n   * find the indices for\n   *\n   * @returns slide indices or null\n   */\n  getIndicesFromHash(hash = window.location.hash, options = {}) {\n    // Attempt to parse the hash as either an index or name\n    let name = hash.replace(/^#\\/?/, '');\n    let bits = name.split('/');\n\n    // If the first bit is not fully numeric and there is a name we\n    // can assume that this is a named link\n    if (!/^[0-9]*$/.test(bits[0]) && name.length) {\n      let slide;\n\n      let f;\n\n      // Parse named links with fragments (#/named-link/2)\n      if (/\\/[-\\d]+$/g.test(name)) {\n        f = parseInt(name.split('/').pop(), 10);\n        f = isNaN(f) ? undefined : f;\n        name = name.split('/').shift();\n      }\n\n      // Ensure the named link is a valid HTML ID attribute\n      try {\n        slide = document\n          .getElementById(decodeURIComponent(name))\n          .closest('.slides section');\n      } catch (error) {}\n\n      if (slide) {\n        return { ...this.Reveal.getIndices(slide), f };\n      }\n    } else {\n      const config = this.Reveal.getConfig();\n      let hashIndexBase =\n        config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n      // Read the index components of the hash\n      let h = parseInt(bits[0], 10) - hashIndexBase || 0,\n        v = parseInt(bits[1], 10) - hashIndexBase || 0,\n        f;\n\n      if (config.fragmentInURL) {\n        f = parseInt(bits[2], 10);\n        if (isNaN(f)) {\n          f = undefined;\n        }\n      }\n\n      return { h, v, f };\n    }\n\n    // The hash couldn't be parsed or no matching named link was found\n    return null;\n  }\n\n  /**\n   * Reads the current URL (hash) and navigates accordingly.\n   */\n  readURL() {\n    const currentIndices = this.Reveal.getIndices();\n    const newIndices = this.getIndicesFromHash();\n\n    if (newIndices) {\n      if (\n        newIndices.h !== currentIndices.h ||\n        newIndices.v !== currentIndices.v ||\n        newIndices.f !== undefined\n      ) {\n        this.Reveal.slide(newIndices.h, newIndices.v, newIndices.f);\n      }\n    }\n    // If no new indices are available, we're trying to navigate to\n    // a slide hash that does not exist\n    else {\n      this.Reveal.slide(currentIndices.h || 0, currentIndices.v || 0);\n    }\n  }\n\n  /**\n   * Updates the page URL (hash) to reflect the current\n   * state.\n   *\n   * @param {number} delay The time in ms to wait before\n   * writing the hash\n   */\n  writeURL(delay) {\n    let config = this.Reveal.getConfig();\n    let currentSlide = this.Reveal.getCurrentSlide();\n\n    // Make sure there's never more than one timeout running\n    clearTimeout(this.writeURLTimeout);\n\n    // If a delay is specified, timeout this call\n    if (typeof delay === 'number') {\n      this.writeURLTimeout = setTimeout(this.writeURL, delay);\n    } else if (currentSlide) {\n      let hash = this.getHash();\n\n      // If we're configured to push to history OR the history\n      // API is not available.\n      if (config.history) {\n        window.location.hash = hash;\n      }\n      // If we're configured to reflect the current slide in the\n      // URL without pushing to history.\n      else if (config.hash) {\n        // If the hash is empty, don't add it to the URL\n        if (hash === '/') {\n          this.debouncedReplaceState(\n            window.location.pathname + window.location.search\n          );\n        } else {\n          this.debouncedReplaceState('#' + hash);\n        }\n      }\n      // UPDATE: The below nuking of all hash changes breaks\n      // anchors on pages where reveal.js is running. Removed\n      // in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n      //\n      // If history and hash are both disabled, a hash may still\n      // be added to the URL by clicking on a href with a hash\n      // target. Counter this by always removing the hash.\n      // else {\n      // \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n      // }\n    }\n  }\n\n  replaceState(url) {\n    window.history.replaceState(null, null, url);\n    this.replaceStateTimestamp = Date.now();\n  }\n\n  debouncedReplaceState(url) {\n    clearTimeout(this.replaceStateTimeout);\n\n    if (\n      Date.now() - this.replaceStateTimestamp >\n      this.MAX_REPLACE_STATE_FREQUENCY\n    ) {\n      this.replaceState(url);\n    } else {\n      this.replaceStateTimeout = setTimeout(\n        () => this.replaceState(url),\n        this.MAX_REPLACE_STATE_FREQUENCY\n      );\n    }\n  }\n\n  /**\n   * Return a hash URL that will resolve to the given slide location.\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide to link to\n   */\n  getHash(slide) {\n    let url = '/';\n\n    // Attempt to create a named link based on the slide's ID\n    let s = slide || this.Reveal.getCurrentSlide();\n    let id = s ? s.getAttribute('id') : null;\n    if (id) {\n      id = encodeURIComponent(id);\n    }\n\n    let index = this.Reveal.getIndices(slide);\n    if (!this.Reveal.getConfig().fragmentInURL) {\n      index.f = undefined;\n    }\n\n    // If the current slide has an ID, use that as a named link,\n    // but we don't support named links with a fragment index\n    if (typeof id === 'string' && id.length) {\n      url = '/' + id;\n\n      // If there is also a fragment, append that at the end\n      // of the named link, like: #/named-link/2\n      if (index.f >= 0) url += '/' + index.f;\n    }\n    // Otherwise use the /h/v index\n    else {\n      let hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n      if (index.h > 0 || index.v > 0 || index.f >= 0)\n        url += index.h + hashIndexBase;\n      if (index.v > 0 || index.f >= 0) url += '/' + (index.v + hashIndexBase);\n      if (index.f >= 0) url += '/' + index.f;\n    }\n\n    return url;\n  }\n\n  /**\n   * Handler for the window level 'hashchange' event.\n   *\n   * @param {object} [event]\n   */\n  onWindowHashChange(event) {\n    this.readURL();\n  }\n}\n","import { queryAll, enterFullscreen } from '../utils/util.js';\nimport { isAndroid } from '../utils/device.js';\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n * - .enter-fullscreen\n */\nexport default class Controls {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    this.onNavigateLeftClicked = this.onNavigateLeftClicked.bind(this);\n    this.onNavigateRightClicked = this.onNavigateRightClicked.bind(this);\n    this.onNavigateUpClicked = this.onNavigateUpClicked.bind(this);\n    this.onNavigateDownClicked = this.onNavigateDownClicked.bind(this);\n    this.onNavigatePrevClicked = this.onNavigatePrevClicked.bind(this);\n    this.onNavigateNextClicked = this.onNavigateNextClicked.bind(this);\n    this.onEnterFullscreen = this.onEnterFullscreen.bind(this);\n  }\n\n  render() {\n    const rtl = this.Reveal.getConfig().rtl;\n    const revealElement = this.Reveal.getRevealElement();\n\n    this.element = document.createElement('aside');\n    this.element.className = 'controls';\n    this.element.innerHTML = `<button class=\"navigate-left\" aria-label=\"${rtl ? 'next slide' : 'previous slide'}\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${rtl ? 'previous slide' : 'next slide'}\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n    this.Reveal.getRevealElement().appendChild(this.element);\n\n    // There can be multiple instances of controls throughout the page\n    this.controlsLeft = queryAll(revealElement, '.navigate-left');\n    this.controlsRight = queryAll(revealElement, '.navigate-right');\n    this.controlsUp = queryAll(revealElement, '.navigate-up');\n    this.controlsDown = queryAll(revealElement, '.navigate-down');\n    this.controlsPrev = queryAll(revealElement, '.navigate-prev');\n    this.controlsNext = queryAll(revealElement, '.navigate-next');\n    this.controlsFullscreen = queryAll(revealElement, '.enter-fullscreen');\n\n    // The left, right and down arrows in the standard reveal.js controls\n    this.controlsRightArrow = this.element.querySelector('.navigate-right');\n    this.controlsLeftArrow = this.element.querySelector('.navigate-left');\n    this.controlsDownArrow = this.element.querySelector('.navigate-down');\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    this.element.style.display = config.controls ? 'block' : 'none';\n\n    this.element.setAttribute('data-controls-layout', config.controlsLayout);\n    this.element.setAttribute(\n      'data-controls-back-arrows',\n      config.controlsBackArrows\n    );\n  }\n\n  bind() {\n    // Listen to both touch and click events, in case the device\n    // supports both\n    let pointerEvents = ['touchstart', 'click'];\n\n    // Only support touch for Android, fixes double navigations in\n    // stock browser\n    if (isAndroid) {\n      pointerEvents = ['touchstart'];\n    }\n\n    pointerEvents.forEach((eventName) => {\n      this.controlsLeft.forEach((el) =>\n        el.addEventListener(eventName, this.onNavigateLeftClicked, false)\n      );\n      this.controlsRight.forEach((el) =>\n        el.addEventListener(eventName, this.onNavigateRightClicked, false)\n      );\n      this.controlsUp.forEach((el) =>\n        el.addEventListener(eventName, this.onNavigateUpClicked, false)\n      );\n      this.controlsDown.forEach((el) =>\n        el.addEventListener(eventName, this.onNavigateDownClicked, false)\n      );\n      this.controlsPrev.forEach((el) =>\n        el.addEventListener(eventName, this.onNavigatePrevClicked, false)\n      );\n      this.controlsNext.forEach((el) =>\n        el.addEventListener(eventName, this.onNavigateNextClicked, false)\n      );\n      this.controlsFullscreen.forEach((el) =>\n        el.addEventListener(eventName, this.onEnterFullscreen, false)\n      );\n    });\n  }\n\n  unbind() {\n    ['touchstart', 'click'].forEach((eventName) => {\n      this.controlsLeft.forEach((el) =>\n        el.removeEventListener(eventName, this.onNavigateLeftClicked, false)\n      );\n      this.controlsRight.forEach((el) =>\n        el.removeEventListener(eventName, this.onNavigateRightClicked, false)\n      );\n      this.controlsUp.forEach((el) =>\n        el.removeEventListener(eventName, this.onNavigateUpClicked, false)\n      );\n      this.controlsDown.forEach((el) =>\n        el.removeEventListener(eventName, this.onNavigateDownClicked, false)\n      );\n      this.controlsPrev.forEach((el) =>\n        el.removeEventListener(eventName, this.onNavigatePrevClicked, false)\n      );\n      this.controlsNext.forEach((el) =>\n        el.removeEventListener(eventName, this.onNavigateNextClicked, false)\n      );\n      this.controlsFullscreen.forEach((el) =>\n        el.removeEventListener(eventName, this.onEnterFullscreen, false)\n      );\n    });\n  }\n\n  /**\n   * Updates the state of all control/navigation arrows.\n   */\n  update() {\n    let routes = this.Reveal.availableRoutes();\n\n    // Remove the 'enabled' class from all directions\n    [\n      ...this.controlsLeft,\n      ...this.controlsRight,\n      ...this.controlsUp,\n      ...this.controlsDown,\n      ...this.controlsPrev,\n      ...this.controlsNext,\n    ].forEach((node) => {\n      node.classList.remove('enabled', 'fragmented');\n\n      // Set 'disabled' attribute on all directions\n      node.setAttribute('disabled', 'disabled');\n    });\n\n    // Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n    if (routes.left)\n      this.controlsLeft.forEach((el) => {\n        el.classList.add('enabled');\n        el.removeAttribute('disabled');\n      });\n    if (routes.right)\n      this.controlsRight.forEach((el) => {\n        el.classList.add('enabled');\n        el.removeAttribute('disabled');\n      });\n    if (routes.up)\n      this.controlsUp.forEach((el) => {\n        el.classList.add('enabled');\n        el.removeAttribute('disabled');\n      });\n    if (routes.down)\n      this.controlsDown.forEach((el) => {\n        el.classList.add('enabled');\n        el.removeAttribute('disabled');\n      });\n\n    // Prev/next buttons\n    if (routes.left || routes.up)\n      this.controlsPrev.forEach((el) => {\n        el.classList.add('enabled');\n        el.removeAttribute('disabled');\n      });\n    if (routes.right || routes.down)\n      this.controlsNext.forEach((el) => {\n        el.classList.add('enabled');\n        el.removeAttribute('disabled');\n      });\n\n    // Highlight fragment directions\n    let currentSlide = this.Reveal.getCurrentSlide();\n    if (currentSlide) {\n      let fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n      // Always apply fragment decorator to prev/next buttons\n      if (fragmentsRoutes.prev)\n        this.controlsPrev.forEach((el) => {\n          el.classList.add('fragmented', 'enabled');\n          el.removeAttribute('disabled');\n        });\n      if (fragmentsRoutes.next)\n        this.controlsNext.forEach((el) => {\n          el.classList.add('fragmented', 'enabled');\n          el.removeAttribute('disabled');\n        });\n\n      // Apply fragment decorators to directional buttons based on\n      // what slide axis they are in\n      if (this.Reveal.isVerticalSlide(currentSlide)) {\n        if (fragmentsRoutes.prev)\n          this.controlsUp.forEach((el) => {\n            el.classList.add('fragmented', 'enabled');\n            el.removeAttribute('disabled');\n          });\n        if (fragmentsRoutes.next)\n          this.controlsDown.forEach((el) => {\n            el.classList.add('fragmented', 'enabled');\n            el.removeAttribute('disabled');\n          });\n      } else {\n        if (fragmentsRoutes.prev)\n          this.controlsLeft.forEach((el) => {\n            el.classList.add('fragmented', 'enabled');\n            el.removeAttribute('disabled');\n          });\n        if (fragmentsRoutes.next)\n          this.controlsRight.forEach((el) => {\n            el.classList.add('fragmented', 'enabled');\n            el.removeAttribute('disabled');\n          });\n      }\n    }\n\n    if (this.Reveal.getConfig().controlsTutorial) {\n      let indices = this.Reveal.getIndices();\n\n      // Highlight control arrows with an animation to ensure\n      // that the viewer knows how to navigate\n      if (!this.Reveal.hasNavigatedVertically() && routes.down) {\n        this.controlsDownArrow.classList.add('highlight');\n      } else {\n        this.controlsDownArrow.classList.remove('highlight');\n\n        if (this.Reveal.getConfig().rtl) {\n          if (\n            !this.Reveal.hasNavigatedHorizontally() &&\n            routes.left &&\n            indices.v === 0\n          ) {\n            this.controlsLeftArrow.classList.add('highlight');\n          } else {\n            this.controlsLeftArrow.classList.remove('highlight');\n          }\n        } else {\n          if (\n            !this.Reveal.hasNavigatedHorizontally() &&\n            routes.right &&\n            indices.v === 0\n          ) {\n            this.controlsRightArrow.classList.add('highlight');\n          } else {\n            this.controlsRightArrow.classList.remove('highlight');\n          }\n        }\n      }\n    }\n  }\n\n  destroy() {\n    this.unbind();\n    this.element.remove();\n  }\n\n  /**\n   * Event handlers for navigation control buttons.\n   */\n  onNavigateLeftClicked(event) {\n    event.preventDefault();\n    this.Reveal.onUserInput();\n\n    if (this.Reveal.getConfig().navigationMode === 'linear') {\n      this.Reveal.prev();\n    } else {\n      this.Reveal.left();\n    }\n  }\n\n  onNavigateRightClicked(event) {\n    event.preventDefault();\n    this.Reveal.onUserInput();\n\n    if (this.Reveal.getConfig().navigationMode === 'linear') {\n      this.Reveal.next();\n    } else {\n      this.Reveal.right();\n    }\n  }\n\n  onNavigateUpClicked(event) {\n    event.preventDefault();\n    this.Reveal.onUserInput();\n\n    this.Reveal.up();\n  }\n\n  onNavigateDownClicked(event) {\n    event.preventDefault();\n    this.Reveal.onUserInput();\n\n    this.Reveal.down();\n  }\n\n  onNavigatePrevClicked(event) {\n    event.preventDefault();\n    this.Reveal.onUserInput();\n\n    this.Reveal.prev();\n  }\n\n  onNavigateNextClicked(event) {\n    event.preventDefault();\n    this.Reveal.onUserInput();\n\n    this.Reveal.next();\n  }\n\n  onEnterFullscreen(event) {\n    const config = this.Reveal.getConfig();\n    const viewport = this.Reveal.getViewportElement();\n\n    enterFullscreen(config.embedded ? viewport : viewport.parentElement);\n  }\n}\n","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    this.onProgressClicked = this.onProgressClicked.bind(this);\n  }\n\n  render() {\n    this.element = document.createElement('div');\n    this.element.className = 'progress';\n    this.Reveal.getRevealElement().appendChild(this.element);\n\n    this.bar = document.createElement('span');\n    this.element.appendChild(this.bar);\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    this.element.style.display = config.progress ? 'block' : 'none';\n  }\n\n  bind() {\n    if (this.Reveal.getConfig().progress && this.element) {\n      this.element.addEventListener('click', this.onProgressClicked, false);\n    }\n  }\n\n  unbind() {\n    if (this.Reveal.getConfig().progress && this.element) {\n      this.element.removeEventListener('click', this.onProgressClicked, false);\n    }\n  }\n\n  /**\n   * Updates the progress bar to reflect the current slide.\n   */\n  update() {\n    // Update progress if enabled\n    if (this.Reveal.getConfig().progress && this.bar) {\n      let scale = this.Reveal.getProgress();\n\n      // Don't fill the progress bar if there's only one slide\n      if (this.Reveal.getTotalSlides() < 2) {\n        scale = 0;\n      }\n\n      this.bar.style.transform = 'scaleX(' + scale + ')';\n    }\n  }\n\n  getMaxWidth() {\n    return this.Reveal.getRevealElement().offsetWidth;\n  }\n\n  /**\n   * Clicking on the progress bar results in a navigation to the\n   * closest approximate horizontal slide using this equation:\n   *\n   * ( clickX / presentationWidth ) * numberOfSlides\n   *\n   * @param {object} event\n   */\n  onProgressClicked(event) {\n    this.Reveal.onUserInput(event);\n\n    event.preventDefault();\n\n    let slides = this.Reveal.getSlides();\n    let slidesTotal = slides.length;\n    let slideIndex = Math.floor(\n      (event.clientX / this.getMaxWidth()) * slidesTotal\n    );\n\n    if (this.Reveal.getConfig().rtl) {\n      slideIndex = slidesTotal - slideIndex;\n    }\n\n    let targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n    this.Reveal.slide(targetIndices.h, targetIndices.v);\n  }\n\n  destroy() {\n    this.element.remove();\n  }\n}\n","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    // Throttles mouse wheel navigation\n    this.lastMouseWheelStep = 0;\n\n    // Is the mouse pointer currently hidden from view\n    this.cursorHidden = false;\n\n    // Timeout used to determine when the cursor is inactive\n    this.cursorInactiveTimeout = 0;\n\n    this.onDocumentCursorActive = this.onDocumentCursorActive.bind(this);\n    this.onDocumentMouseScroll = this.onDocumentMouseScroll.bind(this);\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    if (config.mouseWheel) {\n      document.addEventListener('wheel', this.onDocumentMouseScroll, false);\n    } else {\n      document.removeEventListener('wheel', this.onDocumentMouseScroll, false);\n    }\n\n    // Auto-hide the mouse pointer when its inactive\n    if (config.hideInactiveCursor) {\n      document.addEventListener(\n        'mousemove',\n        this.onDocumentCursorActive,\n        false\n      );\n      document.addEventListener(\n        'mousedown',\n        this.onDocumentCursorActive,\n        false\n      );\n    } else {\n      this.showCursor();\n\n      document.removeEventListener(\n        'mousemove',\n        this.onDocumentCursorActive,\n        false\n      );\n      document.removeEventListener(\n        'mousedown',\n        this.onDocumentCursorActive,\n        false\n      );\n    }\n  }\n\n  /**\n   * Shows the mouse pointer after it has been hidden with\n   * #hideCursor.\n   */\n  showCursor() {\n    if (this.cursorHidden) {\n      this.cursorHidden = false;\n      this.Reveal.getRevealElement().style.cursor = '';\n    }\n  }\n\n  /**\n   * Hides the mouse pointer when it's on top of the .reveal\n   * container.\n   */\n  hideCursor() {\n    if (this.cursorHidden === false) {\n      this.cursorHidden = true;\n      this.Reveal.getRevealElement().style.cursor = 'none';\n    }\n  }\n\n  destroy() {\n    this.showCursor();\n\n    document.removeEventListener('wheel', this.onDocumentMouseScroll, false);\n    document.removeEventListener(\n      'mousemove',\n      this.onDocumentCursorActive,\n      false\n    );\n    document.removeEventListener(\n      'mousedown',\n      this.onDocumentCursorActive,\n      false\n    );\n  }\n\n  /**\n   * Called whenever there is mouse input at the document level\n   * to determine if the cursor is active or not.\n   *\n   * @param {object} event\n   */\n  onDocumentCursorActive(event) {\n    this.showCursor();\n\n    clearTimeout(this.cursorInactiveTimeout);\n\n    this.cursorInactiveTimeout = setTimeout(\n      this.hideCursor.bind(this),\n      this.Reveal.getConfig().hideCursorTime\n    );\n  }\n\n  /**\n   * Handles mouse wheel scrolling, throttled to avoid skipping\n   * multiple slides.\n   *\n   * @param {object} event\n   */\n  onDocumentMouseScroll(event) {\n    if (Date.now() - this.lastMouseWheelStep > 1000) {\n      this.lastMouseWheelStep = Date.now();\n\n      let delta = event.detail || -event.wheelDelta;\n      if (delta > 0) {\n        this.Reveal.next();\n      } else if (delta < 0) {\n        this.Reveal.prev();\n      }\n    }\n  }\n}\n","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = (url, callback) => {\n  const script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.async = false;\n  script.defer = false;\n  script.src = url;\n\n  if (typeof callback === 'function') {\n    // Success callback\n    script.onload = script.onreadystatechange = (event) => {\n      if (event.type === 'load' || /loaded|complete/.test(script.readyState)) {\n        // Kill event listeners\n        script.onload = script.onreadystatechange = script.onerror = null;\n\n        callback();\n      }\n    };\n\n    // Error callback\n    script.onerror = (err) => {\n      // Kill event listeners\n      script.onload = script.onreadystatechange = script.onerror = null;\n\n      callback(new Error('Failed loading script: ' + script.src + '\\n' + err));\n    };\n  }\n\n  // Append the script at the end of <head>\n  const head = document.querySelector('head');\n  head.insertBefore(script, head.lastChild);\n};\n","import { loadScript } from '../utils/loader.js';\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n  constructor(reveal) {\n    this.Reveal = reveal;\n\n    // Flags our current state (idle -> loading -> loaded)\n    this.state = 'idle';\n\n    // An id:instance map of currently registered plugins\n    this.registeredPlugins = {};\n\n    this.asyncDependencies = [];\n  }\n\n  /**\n   * Loads reveal.js dependencies, registers and\n   * initializes plugins.\n   *\n   * Plugins are direct references to a reveal.js plugin\n   * object that we register and initialize after any\n   * synchronous dependencies have loaded.\n   *\n   * Dependencies are defined via the 'dependencies' config\n   * option and will be loaded prior to starting reveal.js.\n   * Some dependencies may have an 'async' flag, if so they\n   * will load after reveal.js has been started up.\n   */\n  load(plugins, dependencies) {\n    this.state = 'loading';\n\n    plugins.forEach(this.registerPlugin.bind(this));\n\n    return new Promise((resolve) => {\n      let scripts = [],\n        scriptsToLoad = 0;\n\n      dependencies.forEach((s) => {\n        // Load if there's no condition or the condition is truthy\n        if (!s.condition || s.condition()) {\n          if (s.async) {\n            this.asyncDependencies.push(s);\n          } else {\n            scripts.push(s);\n          }\n        }\n      });\n\n      if (scripts.length) {\n        scriptsToLoad = scripts.length;\n\n        const scriptLoadedCallback = (s) => {\n          if (s && typeof s.callback === 'function') s.callback();\n\n          if (--scriptsToLoad === 0) {\n            this.initPlugins().then(resolve);\n          }\n        };\n\n        // Load synchronous scripts\n        scripts.forEach((s) => {\n          if (typeof s.id === 'string') {\n            this.registerPlugin(s);\n            scriptLoadedCallback(s);\n          } else if (typeof s.src === 'string') {\n            loadScript(s.src, () => scriptLoadedCallback(s));\n          } else {\n            console.warn('Unrecognized plugin format', s);\n            scriptLoadedCallback();\n          }\n        });\n      } else {\n        this.initPlugins().then(resolve);\n      }\n    });\n  }\n\n  /**\n   * Initializes our plugins and waits for them to be ready\n   * before proceeding.\n   */\n  initPlugins() {\n    return new Promise((resolve) => {\n      let pluginValues = Object.values(this.registeredPlugins);\n      let pluginsToInitialize = pluginValues.length;\n\n      // If there are no plugins, skip this step\n      if (pluginsToInitialize === 0) {\n        this.loadAsync().then(resolve);\n      }\n      // ... otherwise initialize plugins\n      else {\n        let initNextPlugin;\n\n        let afterPlugInitialized = () => {\n          if (--pluginsToInitialize === 0) {\n            this.loadAsync().then(resolve);\n          } else {\n            initNextPlugin();\n          }\n        };\n\n        let i = 0;\n\n        // Initialize plugins serially\n        initNextPlugin = () => {\n          let plugin = pluginValues[i++];\n\n          // If the plugin has an 'init' method, invoke it\n          if (typeof plugin.init === 'function') {\n            let promise = plugin.init(this.Reveal);\n\n            // If the plugin returned a Promise, wait for it\n            if (promise && typeof promise.then === 'function') {\n              promise.then(afterPlugInitialized);\n            } else {\n              afterPlugInitialized();\n            }\n          } else {\n            afterPlugInitialized();\n          }\n        };\n\n        initNextPlugin();\n      }\n    });\n  }\n\n  /**\n   * Loads all async reveal.js dependencies.\n   */\n  loadAsync() {\n    this.state = 'loaded';\n\n    if (this.asyncDependencies.length) {\n      this.asyncDependencies.forEach((s) => {\n        loadScript(s.src, s.callback);\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Registers a new plugin with this reveal.js instance.\n   *\n   * reveal.js waits for all registered plugins to initialize\n   * before considering itself ready, as long as the plugin\n   * is registered before calling `Reveal.initialize()`.\n   */\n  registerPlugin(plugin) {\n    // Backwards compatibility to make reveal.js ~3.9.0\n    // plugins work with reveal.js 4.0.0\n    if (arguments.length === 2 && typeof arguments[0] === 'string') {\n      plugin = arguments[1];\n      plugin.id = arguments[0];\n    }\n    // Plugin can optionally be a function which we call\n    // to create an instance of the plugin\n    else if (typeof plugin === 'function') {\n      plugin = plugin();\n    }\n\n    let id = plugin.id;\n\n    if (typeof id !== 'string') {\n      console.warn(\"Unrecognized plugin format; can't find plugin.id\", plugin);\n    } else if (this.registeredPlugins[id] === undefined) {\n      this.registeredPlugins[id] = plugin;\n\n      // If a plugin is registered after reveal.js is loaded,\n      // initialize it right away\n      if (this.state === 'loaded' && typeof plugin.init === 'function') {\n        plugin.init(this.Reveal);\n      }\n    } else {\n      console.warn(\n        'reveal.js: \"' + id + '\" plugin has already been registered'\n      );\n    }\n  }\n\n  /**\n   * Checks if a specific plugin has been registered.\n   *\n   * @param {String} id Unique plugin identifier\n   */\n  hasPlugin(id) {\n    return !!this.registeredPlugins[id];\n  }\n\n  /**\n   * Returns the specific plugin instance, if a plugin\n   * with the given ID has been registered.\n   *\n   * @param {String} id Unique plugin identifier\n   */\n  getPlugin(id) {\n    return this.registeredPlugins[id];\n  }\n\n  getRegisteredPlugins() {\n    return this.registeredPlugins;\n  }\n\n  destroy() {\n    Object.values(this.registeredPlugins).forEach((plugin) => {\n      if (typeof plugin.destroy === 'function') {\n        plugin.destroy();\n      }\n    });\n\n    this.registeredPlugins = {};\n    this.asyncDependencies = [];\n  }\n}\n","import { isAndroid } from '../utils/device.js';\nimport { matches } from '../utils/util.js';\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    // Holds information about the currently ongoing touch interaction\n    this.touchStartX = 0;\n    this.touchStartY = 0;\n    this.touchStartCount = 0;\n    this.touchCaptured = false;\n\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.onPointerUp = this.onPointerUp.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n  }\n\n  /**\n   *\n   */\n  bind() {\n    let revealElement = this.Reveal.getRevealElement();\n\n    if ('onpointerdown' in window) {\n      // Use W3C pointer events\n      revealElement.addEventListener('pointerdown', this.onPointerDown, false);\n      revealElement.addEventListener('pointermove', this.onPointerMove, false);\n      revealElement.addEventListener('pointerup', this.onPointerUp, false);\n    } else if (window.navigator.msPointerEnabled) {\n      // IE 10 uses prefixed version of pointer events\n      revealElement.addEventListener(\n        'MSPointerDown',\n        this.onPointerDown,\n        false\n      );\n      revealElement.addEventListener(\n        'MSPointerMove',\n        this.onPointerMove,\n        false\n      );\n      revealElement.addEventListener('MSPointerUp', this.onPointerUp, false);\n    } else {\n      // Fall back to touch events\n      revealElement.addEventListener('touchstart', this.onTouchStart, false);\n      revealElement.addEventListener('touchmove', this.onTouchMove, false);\n      revealElement.addEventListener('touchend', this.onTouchEnd, false);\n    }\n  }\n\n  /**\n   *\n   */\n  unbind() {\n    let revealElement = this.Reveal.getRevealElement();\n\n    revealElement.removeEventListener('pointerdown', this.onPointerDown, false);\n    revealElement.removeEventListener('pointermove', this.onPointerMove, false);\n    revealElement.removeEventListener('pointerup', this.onPointerUp, false);\n\n    revealElement.removeEventListener(\n      'MSPointerDown',\n      this.onPointerDown,\n      false\n    );\n    revealElement.removeEventListener(\n      'MSPointerMove',\n      this.onPointerMove,\n      false\n    );\n    revealElement.removeEventListener('MSPointerUp', this.onPointerUp, false);\n\n    revealElement.removeEventListener('touchstart', this.onTouchStart, false);\n    revealElement.removeEventListener('touchmove', this.onTouchMove, false);\n    revealElement.removeEventListener('touchend', this.onTouchEnd, false);\n  }\n\n  /**\n   * Checks if the target element prevents the triggering of\n   * swipe navigation.\n   */\n  isSwipePrevented(target) {\n    // Prevent accidental swipes when scrubbing timelines\n    if (matches(target, 'video[controls], audio[controls]')) return true;\n\n    while (target && typeof target.hasAttribute === 'function') {\n      if (target.hasAttribute('data-prevent-swipe')) return true;\n      target = target.parentNode;\n    }\n\n    return false;\n  }\n\n  /**\n   * Handler for the 'touchstart' event, enables support for\n   * swipe and pinch gestures.\n   *\n   * @param {object} event\n   */\n  onTouchStart(event) {\n    if (this.isSwipePrevented(event.target)) return true;\n\n    this.touchStartX = event.touches[0].clientX;\n    this.touchStartY = event.touches[0].clientY;\n    this.touchStartCount = event.touches.length;\n  }\n\n  /**\n   * Handler for the 'touchmove' event.\n   *\n   * @param {object} event\n   */\n  onTouchMove(event) {\n    if (this.isSwipePrevented(event.target)) return true;\n\n    let config = this.Reveal.getConfig();\n\n    // Each touch should only trigger one action\n    if (!this.touchCaptured) {\n      this.Reveal.onUserInput(event);\n\n      let currentX = event.touches[0].clientX;\n      let currentY = event.touches[0].clientY;\n\n      // There was only one touch point, look for a swipe\n      if (event.touches.length === 1 && this.touchStartCount !== 2) {\n        let availableRoutes = this.Reveal.availableRoutes({\n          includeFragments: true,\n        });\n\n        let deltaX = currentX - this.touchStartX,\n          deltaY = currentY - this.touchStartY;\n\n        if (deltaX > SWIPE_THRESHOLD && Math.abs(deltaX) > Math.abs(deltaY)) {\n          this.touchCaptured = true;\n          if (config.navigationMode === 'linear') {\n            if (config.rtl) {\n              this.Reveal.next();\n            } else {\n              this.Reveal.prev();\n            }\n          } else {\n            this.Reveal.left();\n          }\n        } else if (\n          deltaX < -SWIPE_THRESHOLD &&\n          Math.abs(deltaX) > Math.abs(deltaY)\n        ) {\n          this.touchCaptured = true;\n          if (config.navigationMode === 'linear') {\n            if (config.rtl) {\n              this.Reveal.prev();\n            } else {\n              this.Reveal.next();\n            }\n          } else {\n            this.Reveal.right();\n          }\n        } else if (deltaY > SWIPE_THRESHOLD && availableRoutes.up) {\n          this.touchCaptured = true;\n          if (config.navigationMode === 'linear') {\n            this.Reveal.prev();\n          } else {\n            this.Reveal.up();\n          }\n        } else if (deltaY < -SWIPE_THRESHOLD && availableRoutes.down) {\n          this.touchCaptured = true;\n          if (config.navigationMode === 'linear') {\n            this.Reveal.next();\n          } else {\n            this.Reveal.down();\n          }\n        }\n\n        // If we're embedded, only block touch events if they have\n        // triggered an action\n        if (config.embedded) {\n          if (this.touchCaptured || this.Reveal.isVerticalSlide()) {\n            event.preventDefault();\n          }\n        }\n        // Not embedded? Block them all to avoid needless tossing\n        // around of the viewport in iOS\n        else {\n          event.preventDefault();\n        }\n      }\n    }\n    // There's a bug with swiping on some Android devices unless\n    // the default action is always prevented\n    else if (isAndroid) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Handler for the 'touchend' event.\n   *\n   * @param {object} event\n   */\n  onTouchEnd(event) {\n    this.touchCaptured = false;\n  }\n\n  /**\n   * Convert pointer down to touch start.\n   *\n   * @param {object} event\n   */\n  onPointerDown(event) {\n    if (\n      event.pointerType === event.MSPOINTER_TYPE_TOUCH ||\n      event.pointerType === 'touch'\n    ) {\n      event.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n      this.onTouchStart(event);\n    }\n  }\n\n  /**\n   * Convert pointer move to touch move.\n   *\n   * @param {object} event\n   */\n  onPointerMove(event) {\n    if (\n      event.pointerType === event.MSPOINTER_TYPE_TOUCH ||\n      event.pointerType === 'touch'\n    ) {\n      event.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n      this.onTouchMove(event);\n    }\n  }\n\n  /**\n   * Convert pointer up to touch end.\n   *\n   * @param {object} event\n   */\n  onPointerUp(event) {\n    if (\n      event.pointerType === event.MSPOINTER_TYPE_TOUCH ||\n      event.pointerType === 'touch'\n    ) {\n      event.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n      this.onTouchEnd(event);\n    }\n  }\n}\n","import { closest } from '../utils/util.js';\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n\n    this.onRevealPointerDown = this.onRevealPointerDown.bind(this);\n    this.onDocumentPointerDown = this.onDocumentPointerDown.bind(this);\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    if (config.embedded) {\n      this.blur();\n    } else {\n      this.focus();\n      this.unbind();\n    }\n  }\n\n  bind() {\n    if (this.Reveal.getConfig().embedded) {\n      this.Reveal.getRevealElement().addEventListener(\n        'pointerdown',\n        this.onRevealPointerDown,\n        false\n      );\n    }\n  }\n\n  unbind() {\n    this.Reveal.getRevealElement().removeEventListener(\n      'pointerdown',\n      this.onRevealPointerDown,\n      false\n    );\n    document.removeEventListener(\n      'pointerdown',\n      this.onDocumentPointerDown,\n      false\n    );\n  }\n\n  focus() {\n    if (this.state !== STATE_FOCUS) {\n      this.Reveal.getRevealElement().classList.add('focused');\n      document.addEventListener(\n        'pointerdown',\n        this.onDocumentPointerDown,\n        false\n      );\n    }\n\n    this.state = STATE_FOCUS;\n  }\n\n  blur() {\n    if (this.state !== STATE_BLUR) {\n      this.Reveal.getRevealElement().classList.remove('focused');\n      document.removeEventListener(\n        'pointerdown',\n        this.onDocumentPointerDown,\n        false\n      );\n    }\n\n    this.state = STATE_BLUR;\n  }\n\n  isFocused() {\n    return this.state === STATE_FOCUS;\n  }\n\n  destroy() {\n    this.Reveal.getRevealElement().classList.remove('focused');\n  }\n\n  onRevealPointerDown(event) {\n    this.focus();\n  }\n\n  onDocumentPointerDown(event) {\n    let revealElement = closest(event.target, '.reveal');\n    if (!revealElement || revealElement !== this.Reveal.getRevealElement()) {\n      this.blur();\n    }\n  }\n}\n","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n  constructor(Reveal) {\n    this.Reveal = Reveal;\n  }\n\n  render() {\n    this.element = document.createElement('div');\n    this.element.className = 'speaker-notes';\n    this.element.setAttribute('data-prevent-swipe', '');\n    this.element.setAttribute('tabindex', '0');\n    this.Reveal.getRevealElement().appendChild(this.element);\n  }\n\n  /**\n   * Called when the reveal.js config is updated.\n   */\n  configure(config, oldConfig) {\n    if (config.showNotes) {\n      this.element.setAttribute(\n        'data-layout',\n        typeof config.showNotes === 'string' ? config.showNotes : 'inline'\n      );\n    }\n  }\n\n  /**\n   * Pick up notes from the current slide and display them\n   * to the viewer.\n   *\n   * @see {@link config.showNotes}\n   */\n  update() {\n    if (\n      this.Reveal.getConfig().showNotes &&\n      this.element &&\n      this.Reveal.getCurrentSlide() &&\n      !this.Reveal.isScrollView() &&\n      !this.Reveal.isPrintView()\n    ) {\n      this.element.innerHTML =\n        this.getSlideNotes() ||\n        '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n    }\n  }\n\n  /**\n   * Updates the visibility of the speaker notes sidebar that\n   * is used to share annotated slides. The notes sidebar is\n   * only visible if showNotes is true and there are notes on\n   * one or more slides in the deck.\n   */\n  updateVisibility() {\n    if (\n      this.Reveal.getConfig().showNotes &&\n      this.hasNotes() &&\n      !this.Reveal.isScrollView() &&\n      !this.Reveal.isPrintView()\n    ) {\n      this.Reveal.getRevealElement().classList.add('show-notes');\n    } else {\n      this.Reveal.getRevealElement().classList.remove('show-notes');\n    }\n  }\n\n  /**\n   * Checks if there are speaker notes for ANY slide in the\n   * presentation.\n   */\n  hasNotes() {\n    return (\n      this.Reveal.getSlidesElement().querySelectorAll(\n        '[data-notes], aside.notes'\n      ).length > 0\n    );\n  }\n\n  /**\n   * Checks if this presentation is running inside of the\n   * speaker notes window.\n   *\n   * @return {boolean}\n   */\n  isSpeakerNotesWindow() {\n    return !!window.location.search.match(/receiver/gi);\n  }\n\n  /**\n   * Retrieves the speaker notes from a slide. Notes can be\n   * defined in two ways:\n   * 1. As a data-notes attribute on the slide <section>\n   * 2. With <aside class=\"notes\"> elements inside the slide\n   *\n   * @param {HTMLElement} [slide=currentSlide]\n   * @return {(string|null)}\n   */\n  getSlideNotes(slide = this.Reveal.getCurrentSlide()) {\n    // Notes can be specified via the data-notes attribute...\n    if (slide.hasAttribute('data-notes')) {\n      return slide.getAttribute('data-notes');\n    }\n\n    // ... or using <aside class=\"notes\"> elements\n    let notesElements = slide.querySelectorAll('aside.notes');\n    if (notesElements) {\n      return Array.from(notesElements)\n        .map((notesElement) => notesElement.innerHTML)\n        .join('\\n');\n    }\n\n    return null;\n  }\n\n  destroy() {\n    this.element.remove();\n  }\n}\n","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n  /**\n   * @param {HTMLElement} container The component will append\n   * itself to this\n   * @param {function} progressCheck A method which will be\n   * called frequently to get the current playback progress on\n   * a range of 0-1\n   */\n  constructor(container, progressCheck) {\n    // Cosmetics\n    this.diameter = 100;\n    this.diameter2 = this.diameter / 2;\n    this.thickness = 6;\n\n    // Flags if we are currently playing\n    this.playing = false;\n\n    // Current progress on a 0-1 range\n    this.progress = 0;\n\n    // Used to loop the animation smoothly\n    this.progressOffset = 1;\n\n    this.container = container;\n    this.progressCheck = progressCheck;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.className = 'playback';\n    this.canvas.width = this.diameter;\n    this.canvas.height = this.diameter;\n    this.canvas.style.width = this.diameter2 + 'px';\n    this.canvas.style.height = this.diameter2 + 'px';\n    this.context = this.canvas.getContext('2d');\n\n    this.container.appendChild(this.canvas);\n\n    this.render();\n  }\n\n  setPlaying(value) {\n    const wasPlaying = this.playing;\n\n    this.playing = value;\n\n    // Start repainting if we weren't already\n    if (!wasPlaying && this.playing) {\n      this.animate();\n    } else {\n      this.render();\n    }\n  }\n\n  animate() {\n    const progressBefore = this.progress;\n\n    this.progress = this.progressCheck();\n\n    // When we loop, offset the progress so that it eases\n    // smoothly rather than immediately resetting\n    if (progressBefore > 0.8 && this.progress < 0.2) {\n      this.progressOffset = this.progress;\n    }\n\n    this.render();\n\n    if (this.playing) {\n      requestAnimationFrame(this.animate.bind(this));\n    }\n  }\n\n  /**\n   * Renders the current progress and playback state.\n   */\n  render() {\n    let progress = this.playing ? this.progress : 0,\n      radius = this.diameter2 - this.thickness,\n      x = this.diameter2,\n      y = this.diameter2,\n      iconSize = 28;\n\n    // Ease towards 1\n    this.progressOffset += (1 - this.progressOffset) * 0.1;\n\n    const endAngle = -Math.PI / 2 + progress * (Math.PI * 2);\n    const startAngle = -Math.PI / 2 + this.progressOffset * (Math.PI * 2);\n\n    this.context.save();\n    this.context.clearRect(0, 0, this.diameter, this.diameter);\n\n    // Solid background color\n    this.context.beginPath();\n    this.context.arc(x, y, radius + 4, 0, Math.PI * 2, false);\n    this.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n    this.context.fill();\n\n    // Draw progress track\n    this.context.beginPath();\n    this.context.arc(x, y, radius, 0, Math.PI * 2, false);\n    this.context.lineWidth = this.thickness;\n    this.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n    this.context.stroke();\n\n    if (this.playing) {\n      // Draw progress on top of track\n      this.context.beginPath();\n      this.context.arc(x, y, radius, startAngle, endAngle, false);\n      this.context.lineWidth = this.thickness;\n      this.context.strokeStyle = '#fff';\n      this.context.stroke();\n    }\n\n    this.context.translate(x - iconSize / 2, y - iconSize / 2);\n\n    // Draw play/pause icons\n    if (this.playing) {\n      this.context.fillStyle = '#fff';\n      this.context.fillRect(0, 0, iconSize / 2 - 4, iconSize);\n      this.context.fillRect(iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize);\n    } else {\n      this.context.beginPath();\n      this.context.translate(4, 0);\n      this.context.moveTo(0, 0);\n      this.context.lineTo(iconSize - 4, iconSize / 2);\n      this.context.lineTo(0, iconSize);\n      this.context.fillStyle = '#fff';\n      this.context.fill();\n    }\n\n    this.context.restore();\n  }\n\n  on(type, listener) {\n    this.canvas.addEventListener(type, listener, false);\n  }\n\n  off(type, listener) {\n    this.canvas.removeEventListener(type, listener, false);\n  }\n\n  destroy() {\n    this.playing = false;\n\n    if (this.canvas.parentNode) {\n      this.container.removeChild(this.canvas);\n    }\n  }\n}\n","/**\n * The default reveal.js config object.\n */\nexport default {\n  // The \"normal\" size of the presentation, aspect ratio will be preserved\n  // when the presentation is scaled to fit different resolutions\n  width: 960,\n  height: 700,\n\n  // Factor of the display size that should remain empty around the content\n  margin: 0.04,\n\n  // Bounds for smallest/largest possible scale to apply to content\n  minScale: 0.2,\n  maxScale: 2.0,\n\n  // Display presentation control arrows\n  controls: true,\n\n  // Help the user learn the controls by providing hints, for example by\n  // bouncing the down arrow when they first encounter a vertical slide\n  controlsTutorial: true,\n\n  // Determines where controls appear, \"edges\" or \"bottom-right\"\n  controlsLayout: 'bottom-right',\n\n  // Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n  // or \"visible\"\n  controlsBackArrows: 'faded',\n\n  // Display a presentation progress bar\n  progress: true,\n\n  // Display the page number of the current slide\n  // - true:    Show slide number\n  // - false:   Hide slide number\n  //\n  // Can optionally be set as a string that specifies the number formatting:\n  // - \"h.v\":\t  Horizontal . vertical slide number (default)\n  // - \"h/v\":\t  Horizontal / vertical slide number\n  // - \"c\":\t  Flattened slide number\n  // - \"c/t\":\t  Flattened slide number / total slides\n  //\n  // Alternatively, you can provide a function that returns the slide\n  // number for the current slide. The function should take in a slide\n  // object and return an array with one string [slideNumber] or\n  // three strings [n1,delimiter,n2]. See #formatSlideNumber().\n  slideNumber: false,\n\n  // Can be used to limit the contexts in which the slide number appears\n  // - \"all\":      Always show the slide number\n  // - \"print\":    Only when printing to PDF\n  // - \"speaker\":  Only in the speaker view\n  showSlideNumber: 'all',\n\n  // Use 1 based indexing for # links to match slide number (default is zero\n  // based)\n  hashOneBasedIndex: false,\n\n  // Add the current slide number to the URL hash so that reloading the\n  // page/copying the URL will return you to the same slide\n  hash: false,\n\n  // Flags if we should monitor the hash and change slides accordingly\n  respondToHashChanges: true,\n\n  // Enable support for jump-to-slide navigation shortcuts\n  jumpToSlide: true,\n\n  // Push each slide change to the browser history.  Implies `hash: true`\n  history: false,\n\n  // Enable keyboard shortcuts for navigation\n  keyboard: true,\n\n  // Optional function that blocks keyboard events when retuning false\n  //\n  // If you set this to 'focused', we will only capture keyboard events\n  // for embedded decks when they are in focus\n  keyboardCondition: null,\n\n  // Disables the default reveal.js slide layout (scaling and centering)\n  // so that you can use custom CSS layout\n  disableLayout: false,\n\n  // Enable the slide overview mode\n  overview: true,\n\n  // Vertical centering of slides\n  center: true,\n\n  // Enables touch navigation on devices with touch input\n  touch: true,\n\n  // Loop the presentation\n  loop: false,\n\n  // Change the presentation direction to be RTL\n  rtl: false,\n\n  // Changes the behavior of our navigation directions.\n  //\n  // \"default\"\n  // Left/right arrow keys step between horizontal slides, up/down\n  // arrow keys step between vertical slides. Space key steps through\n  // all slides (both horizontal and vertical).\n  //\n  // \"linear\"\n  // Removes the up/down arrows. Left/right arrows step through all\n  // slides (both horizontal and vertical).\n  //\n  // \"grid\"\n  // When this is enabled, stepping left/right from a vertical stack\n  // to an adjacent vertical stack will land you at the same vertical\n  // index.\n  //\n  // Consider a deck with six slides ordered in two vertical stacks:\n  // 1.1    2.1\n  // 1.2    2.2\n  // 1.3    2.3\n  //\n  // If you're on slide 1.3 and navigate right, you will normally move\n  // from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n  // from 1.3 -> 2.3.\n  navigationMode: 'default',\n\n  // Randomizes the order of slides each time the presentation loads\n  shuffle: false,\n\n  // Turns fragments on and off globally\n  fragments: true,\n\n  // Flags whether to include the current fragment in the URL,\n  // so that reloading brings you to the same fragment position\n  fragmentInURL: true,\n\n  // Flags if the presentation is running in an embedded mode,\n  // i.e. contained within a limited portion of the screen\n  embedded: false,\n\n  // Flags if we should show a help overlay when the question-mark\n  // key is pressed\n  help: true,\n\n  // Flags if it should be possible to pause the presentation (blackout)\n  pause: true,\n\n  // Flags if speaker notes should be visible to all viewers\n  showNotes: false,\n\n  // Flags if slides with data-visibility=\"hidden\" should be kep visible\n  showHiddenSlides: false,\n\n  // Global override for autoplaying embedded media (video/audio/iframe)\n  // - null:   Media will only autoplay if data-autoplay is present\n  // - true:   All media will autoplay, regardless of individual setting\n  // - false:  No media will autoplay, regardless of individual setting\n  autoPlayMedia: null,\n\n  // Global override for preloading lazy-loaded iframes\n  // - null:   Iframes with data-src AND data-preload will be loaded when within\n  //           the viewDistance, iframes with only data-src will be loaded when visible\n  // - true:   All iframes with data-src will be loaded when within the viewDistance\n  // - false:  All iframes with data-src will be loaded only when visible\n  preloadIframes: null,\n\n  // Can be used to globally disable auto-animation\n  autoAnimate: true,\n\n  // Optionally provide a custom element matcher that will be\n  // used to dictate which elements we can animate between.\n  autoAnimateMatcher: null,\n\n  // Default settings for our auto-animate transitions, can be\n  // overridden per-slide or per-element via data arguments\n  autoAnimateEasing: 'ease',\n  autoAnimateDuration: 1.0,\n  autoAnimateUnmatched: true,\n\n  // CSS properties that can be auto-animated. Position & scale\n  // is matched separately so there's no need to include styles\n  // like top/right/bottom/left, width/height or margin.\n  autoAnimateStyles: [\n    'opacity',\n    'color',\n    'background-color',\n    'padding',\n    'font-size',\n    'line-height',\n    'letter-spacing',\n    'border-width',\n    'border-color',\n    'border-radius',\n    'outline',\n    'outline-offset',\n  ],\n\n  // Controls automatic progression to the next slide\n  // - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n  //           is present on the current slide or fragment\n  // - 1+:     All slides will progress automatically at the given interval\n  // - false:  No auto-sliding, even if data-autoslide is present\n  autoSlide: 0,\n\n  // Stop auto-sliding after user input\n  autoSlideStoppable: true,\n\n  // Use this method for navigation when auto-sliding (defaults to navigateNext)\n  autoSlideMethod: null,\n\n  // Specify the average time in seconds that you think you will spend\n  // presenting each slide. This is used to show a pacing timer in the\n  // speaker view\n  defaultTiming: null,\n\n  // Enable slide navigation via mouse wheel\n  mouseWheel: false,\n\n  // Opens links in an iframe preview overlay\n  // Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n  // individually\n  previewLinks: false,\n\n  // Exposes the reveal.js API through window.postMessage\n  postMessage: true,\n\n  // Dispatches all reveal.js events to the parent window through postMessage\n  postMessageEvents: false,\n\n  // Focuses body when page changes visibility to ensure keyboard shortcuts work\n  focusBodyOnPageVisibilityChange: true,\n\n  // Transition style\n  transition: 'slide', // none/fade/slide/convex/concave/zoom\n\n  // Transition speed\n  transitionSpeed: 'default', // default/fast/slow\n\n  // Transition style for full page slide backgrounds\n  backgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n  // Parallax background image\n  parallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n  // Parallax background size\n  parallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n  // Parallax background repeat\n  parallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n  // Parallax background position\n  parallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n  // Amount of pixels to move the parallax background per slide step\n  parallaxBackgroundHorizontal: null,\n  parallaxBackgroundVertical: null,\n\n  // Can be used to initialize reveal.js in one of the following views:\n  // - print:   Render the presentation so that it can be printed to PDF\n  // - scroll:  Show the presentation as a tall scrollable page with scroll\n  //            triggered animations\n  view: null,\n\n  // Adjusts the height of each slide in the scroll view.\n  // - full:       Each slide is as tall as the viewport\n  // - compact:    Slides are as small as possible, allowing multiple slides\n  //               to be visible in parallel on tall devices\n  scrollLayout: 'full',\n\n  // Control how scroll snapping works in the scroll view.\n  // - false:   \tNo snapping, scrolling is continuous\n  // - proximity:  Snap when close to a slide\n  // - mandatory:  Always snap to the closest slide\n  //\n  // Only applies to presentations in scroll view.\n  scrollSnap: 'mandatory',\n\n  // Enables and configure the scroll view progress bar.\n  // - 'auto':    Show the scrollbar while scrolling, hide while idle\n  // - true:      Always show the scrollbar\n  // - false:     Never show the scrollbar\n  scrollProgress: 'auto',\n\n  // Automatically activate the scroll view when we the viewport falls\n  // below the given width.\n  scrollActivationWidth: 435,\n\n  // The maximum number of pages a single slide can expand onto when printing\n  // to PDF, unlimited by default\n  pdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n  // Prints each fragment on a separate slide\n  pdfSeparateFragments: true,\n\n  // Offset used to reduce the height of content within exported PDF pages.\n  // This exists to account for environment differences based on how you\n  // print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n  // on precisely the total height of the document whereas in-browser\n  // printing has to end one pixel before.\n  pdfPageHeightOffset: -1,\n\n  // Number of slides away from the current that are visible\n  viewDistance: 3,\n\n  // Number of slides away from the current that are visible on mobile\n  // devices. It is advisable to set this to a lower number than\n  // viewDistance in order to save resources.\n  mobileViewDistance: 2,\n\n  // The display mode that will be used to show slides\n  display: 'block',\n\n  // Hide cursor if inactive\n  hideInactiveCursor: true,\n\n  // Time before the cursor is hidden (in ms)\n  hideCursorTime: 5000,\n\n  // Should we automatically sort and set indices for fragments\n  // at each sync? (See Reveal.sync)\n  sortFragmentsOnSync: true,\n\n  // Script dependencies to load\n  dependencies: [],\n\n  // Plugin objects to register and use for this presentation\n  plugins: [],\n};\n","import SlideContent from './controllers/slidecontent.js';\nimport SlideNumber from './controllers/slidenumber.js';\nimport JumpToSlide from './controllers/jumptoslide.js';\nimport Backgrounds from './controllers/backgrounds.js';\nimport AutoAnimate from './controllers/autoanimate.js';\nimport ScrollView from './controllers/scrollview.js';\nimport PrintView from './controllers/printview.js';\nimport Fragments from './controllers/fragments.js';\nimport Overview from './controllers/overview.js';\nimport Keyboard from './controllers/keyboard.js';\nimport Location from './controllers/location.js';\nimport Controls from './controllers/controls.js';\nimport Progress from './controllers/progress.js';\nimport Pointer from './controllers/pointer.js';\nimport Plugins from './controllers/plugins.js';\nimport Touch from './controllers/touch.js';\nimport Focus from './controllers/focus.js';\nimport Notes from './controllers/notes.js';\nimport Playback from './components/playback.js';\nimport defaultConfig from './config.js';\nimport * as Util from './utils/util.js';\nimport * as Device from './utils/device.js';\nimport {\n  SLIDES_SELECTOR,\n  HORIZONTAL_SLIDES_SELECTOR,\n  VERTICAL_SLIDES_SELECTOR,\n  POST_MESSAGE_METHOD_BLACKLIST,\n} from './utils/constants.js';\n\n// The reveal.js version\nexport const VERSION = '5.0.5';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function (revealElement, options) {\n  // Support initialization with no args, one arg\n  // [options] or two args [revealElement, options]\n  if (arguments.length < 2) {\n    options = arguments[0];\n    revealElement = document.querySelector('.reveal');\n  }\n\n  const Reveal = {};\n\n  // Configuration defaults, can be overridden at initialization time\n  let config = {},\n    // Flags if reveal.js is loaded (has dispatched the 'ready' event)\n    ready = false,\n    // The horizontal and vertical index of the currently active slide\n    indexh,\n    indexv,\n    // The previous and current slide HTML elements\n    previousSlide,\n    currentSlide,\n    // Remember which directions that the user has navigated towards\n    navigationHistory = {\n      hasNavigatedHorizontally: false,\n      hasNavigatedVertically: false,\n    },\n    // Slides may have a data-state attribute which we pick up and apply\n    // as a class to the body. This list contains the combined state of\n    // all current slides.\n    state = [],\n    // The current scale of the presentation (see width/height config)\n    scale = 1,\n    // CSS transform that is currently applied to the slides container,\n    // split into two groups\n    slidesTransform = { layout: '', overview: '' },\n    // Cached references to DOM elements\n    dom = {},\n    // Flags if the interaction event listeners are bound\n    eventsAreBound = false,\n    // The current slide transition state; idle or running\n    transition = 'idle',\n    // The current auto-slide duration\n    autoSlide = 0,\n    // Auto slide properties\n    autoSlidePlayer,\n    autoSlideTimeout = 0,\n    autoSlideStartTime = -1,\n    autoSlidePaused = false,\n    // Controllers for different aspects of our presentation. They're\n    // all given direct references to this Reveal instance since there\n    // may be multiple presentations running in parallel.\n    slideContent = new SlideContent(Reveal),\n    slideNumber = new SlideNumber(Reveal),\n    jumpToSlide = new JumpToSlide(Reveal),\n    autoAnimate = new AutoAnimate(Reveal),\n    backgrounds = new Backgrounds(Reveal),\n    scrollView = new ScrollView(Reveal),\n    printView = new PrintView(Reveal),\n    fragments = new Fragments(Reveal),\n    overview = new Overview(Reveal),\n    keyboard = new Keyboard(Reveal),\n    location = new Location(Reveal),\n    controls = new Controls(Reveal),\n    progress = new Progress(Reveal),\n    pointer = new Pointer(Reveal),\n    plugins = new Plugins(Reveal),\n    focus = new Focus(Reveal),\n    touch = new Touch(Reveal),\n    notes = new Notes(Reveal);\n\n  /**\n   * Starts up the presentation.\n   */\n  function initialize(initOptions) {\n    if (!revealElement)\n      throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n    // Cache references to key DOM elements\n    dom.wrapper = revealElement;\n    dom.slides = revealElement.querySelector('.slides');\n\n    if (!dom.slides)\n      throw 'Unable to find slides container (<div class=\"slides\">).';\n\n    // Compose our config object in order of increasing precedence:\n    // 1. Default reveal.js options\n    // 2. Options provided via Reveal.configure() prior to\n    //    initialization\n    // 3. Options passed to the Reveal constructor\n    // 4. Options passed to Reveal.initialize\n    // 5. Query params\n    config = {\n      ...defaultConfig,\n      ...config,\n      ...options,\n      ...initOptions,\n      ...Util.getQueryHash(),\n    };\n\n    // Legacy support for the ?print-pdf query\n    if (/print-pdf/gi.test(window.location.search)) {\n      config.view = 'print';\n    }\n\n    setViewport();\n\n    // Force a layout when the whole page, incl fonts, has loaded\n    window.addEventListener('load', layout, false);\n\n    // Register plugins and load dependencies, then move on to #start()\n    plugins.load(config.plugins, config.dependencies).then(start);\n\n    return new Promise((resolve) => Reveal.on('ready', resolve));\n  }\n\n  /**\n   * Encase the presentation in a reveal.js viewport. The\n   * extent of the viewport differs based on configuration.\n   */\n  function setViewport() {\n    // Embedded decks use the reveal element as their viewport\n    if (config.embedded === true) {\n      dom.viewport =\n        Util.closest(revealElement, '.reveal-viewport') || revealElement;\n    }\n    // Full-page decks use the body as their viewport\n    else {\n      dom.viewport = document.body;\n      document.documentElement.classList.add('reveal-full-page');\n    }\n\n    dom.viewport.classList.add('reveal-viewport');\n  }\n\n  /**\n   * Starts up reveal.js by binding input events and navigating\n   * to the current URL deeplink if there is one.\n   */\n  function start() {\n    ready = true;\n\n    // Remove slides hidden with data-visibility\n    removeHiddenSlides();\n\n    // Make sure we've got all the DOM elements we need\n    setupDOM();\n\n    // Listen to messages posted to this window\n    setupPostMessage();\n\n    // Prevent the slides from being scrolled out of view\n    setupScrollPrevention();\n\n    // Adds bindings for fullscreen mode\n    setupFullscreen();\n\n    // Resets all vertical slides so that only the first is visible\n    resetVerticalSlides();\n\n    // Updates the presentation to match the current configuration values\n    configure();\n\n    // Create slide backgrounds\n    backgrounds.update(true);\n\n    // Activate the print/scroll view if configured\n    activateInitialView();\n\n    // Read the initial hash\n    location.readURL();\n\n    // Notify listeners that the presentation is ready but use a 1ms\n    // timeout to ensure it's not fired synchronously after #initialize()\n    setTimeout(() => {\n      // Enable transitions now that we're loaded\n      dom.slides.classList.remove('no-transition');\n\n      dom.wrapper.classList.add('ready');\n\n      dispatchEvent({\n        type: 'ready',\n        data: {\n          indexh,\n          indexv,\n          currentSlide,\n        },\n      });\n    }, 1);\n  }\n\n  /**\n   * Activates the correct reveal.js view based on our config.\n   * This is only invoked once during initialization.\n   */\n  function activateInitialView() {\n    const activatePrintView = config.view === 'print';\n    const activateScrollView =\n      config.view === 'scroll' || config.view === 'reader';\n\n    if (activatePrintView || activateScrollView) {\n      if (activatePrintView) {\n        removeEventListeners();\n      } else {\n        touch.unbind();\n      }\n\n      // Avoid content flickering during layout\n      dom.viewport.classList.add('loading-scroll-mode');\n\n      if (activatePrintView) {\n        // The document needs to have loaded for the PDF layout\n        // measurements to be accurate\n        if (document.readyState === 'complete') {\n          printView.activate();\n        } else {\n          window.addEventListener('load', () => printView.activate());\n        }\n      } else {\n        scrollView.activate();\n      }\n    }\n  }\n\n  /**\n   * Removes all slides with data-visibility=\"hidden\". This\n   * is done right before the rest of the presentation is\n   * initialized.\n   *\n   * If you want to show all hidden slides, initialize\n   * reveal.js with showHiddenSlides set to true.\n   */\n  function removeHiddenSlides() {\n    if (!config.showHiddenSlides) {\n      Util.queryAll(dom.wrapper, 'section[data-visibility=\"hidden\"]').forEach(\n        (slide) => {\n          const parent = slide.parentNode;\n\n          // If this slide is part of a stack and that stack will be\n          // empty after removing the hidden slide, remove the entire\n          // stack\n          if (\n            parent.childElementCount === 1 &&\n            /section/i.test(parent.nodeName)\n          ) {\n            parent.remove();\n          } else {\n            slide.remove();\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Finds and stores references to DOM elements which are\n   * required by the presentation. If a required element is\n   * not found, it is created.\n   */\n  function setupDOM() {\n    // Prevent transitions while we're loading\n    dom.slides.classList.add('no-transition');\n\n    if (Device.isMobile) {\n      dom.wrapper.classList.add('no-hover');\n    } else {\n      dom.wrapper.classList.remove('no-hover');\n    }\n\n    backgrounds.render();\n    slideNumber.render();\n    jumpToSlide.render();\n    controls.render();\n    progress.render();\n    notes.render();\n\n    // Overlay graphic which is displayed during the paused mode\n    dom.pauseOverlay = Util.createSingletonNode(\n      dom.wrapper,\n      'div',\n      'pause-overlay',\n      config.controls\n        ? '<button class=\"resume-button\">Resume presentation</button>'\n        : null\n    );\n\n    dom.statusElement = createStatusElement();\n\n    dom.wrapper.setAttribute('role', 'application');\n  }\n\n  /**\n   * Creates a hidden div with role aria-live to announce the\n   * current slide content. Hide the div off-screen to make it\n   * available only to Assistive Technologies.\n   *\n   * @return {HTMLElement}\n   */\n  function createStatusElement() {\n    let statusElement = dom.wrapper.querySelector('.aria-status');\n    if (!statusElement) {\n      statusElement = document.createElement('div');\n      statusElement.style.position = 'absolute';\n      statusElement.style.height = '1px';\n      statusElement.style.width = '1px';\n      statusElement.style.overflow = 'hidden';\n      statusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n      statusElement.classList.add('aria-status');\n      statusElement.setAttribute('aria-live', 'polite');\n      statusElement.setAttribute('aria-atomic', 'true');\n      dom.wrapper.appendChild(statusElement);\n    }\n    return statusElement;\n  }\n\n  /**\n   * Announces the given text to screen readers.\n   */\n  function announceStatus(value) {\n    dom.statusElement.textContent = value;\n  }\n\n  /**\n   * Converts the given HTML element into a string of text\n   * that can be announced to a screen reader. Hidden\n   * elements are excluded.\n   */\n  function getStatusText(node) {\n    let text = '';\n\n    // Text node\n    if (node.nodeType === 3) {\n      text += node.textContent;\n    }\n    // Element node\n    else if (node.nodeType === 1) {\n      let isAriaHidden = node.getAttribute('aria-hidden');\n      let isDisplayHidden = window.getComputedStyle(node)['display'] === 'none';\n      if (isAriaHidden !== 'true' && !isDisplayHidden) {\n        Array.from(node.childNodes).forEach((child) => {\n          text += getStatusText(child);\n        });\n      }\n    }\n\n    text = text.trim();\n\n    return text === '' ? '' : text + ' ';\n  }\n\n  /**\n   * This is an unfortunate necessity. Some actions – such as\n   * an input field being focused in an iframe or using the\n   * keyboard to expand text selection beyond the bounds of\n   * a slide – can trigger our content to be pushed out of view.\n   * This scrolling can not be prevented by hiding overflow in\n   * CSS (we already do) so we have to resort to repeatedly\n   * checking if the slides have been offset :(\n   */\n  function setupScrollPrevention() {\n    setInterval(() => {\n      if (\n        (!scrollView.isActive() && dom.wrapper.scrollTop !== 0) ||\n        dom.wrapper.scrollLeft !== 0\n      ) {\n        dom.wrapper.scrollTop = 0;\n        dom.wrapper.scrollLeft = 0;\n      }\n    }, 1000);\n  }\n\n  /**\n   * After entering fullscreen we need to force a layout to\n   * get our presentations to scale correctly. This behavior\n   * is inconsistent across browsers but a force layout seems\n   * to normalize it.\n   */\n  function setupFullscreen() {\n    document.addEventListener('fullscreenchange', onFullscreenChange);\n    document.addEventListener('webkitfullscreenchange', onFullscreenChange);\n  }\n\n  /**\n   * Registers a listener to postMessage events, this makes it\n   * possible to call all reveal.js API methods from another\n   * window. For example:\n   *\n   * revealWindow.postMessage( JSON.stringify({\n   *   method: 'slide',\n   *   args: [ 2 ]\n   * }), '*' );\n   */\n  function setupPostMessage() {\n    if (config.postMessage) {\n      window.addEventListener('message', onPostMessage, false);\n    }\n  }\n\n  /**\n   * Applies the configuration settings from the config\n   * object. May be called multiple times.\n   *\n   * @param {object} options\n   */\n  function configure(options) {\n    const oldConfig = { ...config };\n\n    // New config options may be passed when this method\n    // is invoked through the API after initialization\n    if (typeof options === 'object') Util.extend(config, options);\n\n    // Abort if reveal.js hasn't finished loading, config\n    // changes will be applied automatically once ready\n    if (Reveal.isReady() === false) return;\n\n    const numberOfSlides = dom.wrapper.querySelectorAll(SLIDES_SELECTOR).length;\n\n    // The transition is added as a class on the .reveal element\n    dom.wrapper.classList.remove(oldConfig.transition);\n    dom.wrapper.classList.add(config.transition);\n\n    dom.wrapper.setAttribute('data-transition-speed', config.transitionSpeed);\n    dom.wrapper.setAttribute(\n      'data-background-transition',\n      config.backgroundTransition\n    );\n\n    // Expose our configured slide dimensions as custom props\n    dom.viewport.style.setProperty(\n      '--slide-width',\n      typeof config.width === 'string' ? config.width : config.width + 'px'\n    );\n    dom.viewport.style.setProperty(\n      '--slide-height',\n      typeof config.height === 'string' ? config.height : config.height + 'px'\n    );\n\n    if (config.shuffle) {\n      shuffle();\n    }\n\n    Util.toggleClass(dom.wrapper, 'embedded', config.embedded);\n    Util.toggleClass(dom.wrapper, 'rtl', config.rtl);\n    Util.toggleClass(dom.wrapper, 'center', config.center);\n\n    // Exit the paused mode if it was configured off\n    if (config.pause === false) {\n      resume();\n    }\n\n    // Iframe link previews\n    if (config.previewLinks) {\n      enablePreviewLinks();\n      disablePreviewLinks('[data-preview-link=false]');\n    } else {\n      disablePreviewLinks();\n      enablePreviewLinks('[data-preview-link]:not([data-preview-link=false])');\n    }\n\n    // Reset all changes made by auto-animations\n    autoAnimate.reset();\n\n    // Remove existing auto-slide controls\n    if (autoSlidePlayer) {\n      autoSlidePlayer.destroy();\n      autoSlidePlayer = null;\n    }\n\n    // Generate auto-slide controls if needed\n    if (numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable) {\n      autoSlidePlayer = new Playback(dom.wrapper, () => {\n        return Math.min(\n          Math.max((Date.now() - autoSlideStartTime) / autoSlide, 0),\n          1\n        );\n      });\n\n      autoSlidePlayer.on('click', onAutoSlidePlayerClick);\n      autoSlidePaused = false;\n    }\n\n    // Add the navigation mode to the DOM so we can adjust styling\n    if (config.navigationMode !== 'default') {\n      dom.wrapper.setAttribute('data-navigation-mode', config.navigationMode);\n    } else {\n      dom.wrapper.removeAttribute('data-navigation-mode');\n    }\n\n    notes.configure(config, oldConfig);\n    focus.configure(config, oldConfig);\n    pointer.configure(config, oldConfig);\n    controls.configure(config, oldConfig);\n    progress.configure(config, oldConfig);\n    keyboard.configure(config, oldConfig);\n    fragments.configure(config, oldConfig);\n    slideNumber.configure(config, oldConfig);\n\n    sync();\n  }\n\n  /**\n   * Binds all event listeners.\n   */\n  function addEventListeners() {\n    eventsAreBound = true;\n\n    window.addEventListener('resize', onWindowResize, false);\n\n    if (config.touch) touch.bind();\n    if (config.keyboard) keyboard.bind();\n    if (config.progress) progress.bind();\n    if (config.respondToHashChanges) location.bind();\n    controls.bind();\n    focus.bind();\n\n    dom.slides.addEventListener('click', onSlidesClicked, false);\n    dom.slides.addEventListener('transitionend', onTransitionEnd, false);\n    dom.pauseOverlay.addEventListener('click', resume, false);\n\n    if (config.focusBodyOnPageVisibilityChange) {\n      document.addEventListener(\n        'visibilitychange',\n        onPageVisibilityChange,\n        false\n      );\n    }\n  }\n\n  /**\n   * Unbinds all event listeners.\n   */\n  function removeEventListeners() {\n    eventsAreBound = false;\n\n    touch.unbind();\n    focus.unbind();\n    keyboard.unbind();\n    controls.unbind();\n    progress.unbind();\n    location.unbind();\n\n    window.removeEventListener('resize', onWindowResize, false);\n\n    dom.slides.removeEventListener('click', onSlidesClicked, false);\n    dom.slides.removeEventListener('transitionend', onTransitionEnd, false);\n    dom.pauseOverlay.removeEventListener('click', resume, false);\n  }\n\n  /**\n   * Uninitializes reveal.js by undoing changes made to the\n   * DOM and removing all event listeners.\n   */\n  function destroy() {\n    removeEventListeners();\n    cancelAutoSlide();\n    disablePreviewLinks();\n\n    // Destroy controllers\n    notes.destroy();\n    focus.destroy();\n    plugins.destroy();\n    pointer.destroy();\n    controls.destroy();\n    progress.destroy();\n    backgrounds.destroy();\n    slideNumber.destroy();\n    jumpToSlide.destroy();\n\n    // Remove event listeners\n    document.removeEventListener('fullscreenchange', onFullscreenChange);\n    document.removeEventListener('webkitfullscreenchange', onFullscreenChange);\n    document.removeEventListener(\n      'visibilitychange',\n      onPageVisibilityChange,\n      false\n    );\n    window.removeEventListener('message', onPostMessage, false);\n    window.removeEventListener('load', layout, false);\n\n    // Undo DOM changes\n    if (dom.pauseOverlay) dom.pauseOverlay.remove();\n    if (dom.statusElement) dom.statusElement.remove();\n\n    document.documentElement.classList.remove('reveal-full-page');\n\n    dom.wrapper.classList.remove(\n      'ready',\n      'center',\n      'has-horizontal-slides',\n      'has-vertical-slides'\n    );\n    dom.wrapper.removeAttribute('data-transition-speed');\n    dom.wrapper.removeAttribute('data-background-transition');\n\n    dom.viewport.classList.remove('reveal-viewport');\n    dom.viewport.style.removeProperty('--slide-width');\n    dom.viewport.style.removeProperty('--slide-height');\n\n    dom.slides.style.removeProperty('width');\n    dom.slides.style.removeProperty('height');\n    dom.slides.style.removeProperty('zoom');\n    dom.slides.style.removeProperty('left');\n    dom.slides.style.removeProperty('top');\n    dom.slides.style.removeProperty('bottom');\n    dom.slides.style.removeProperty('right');\n    dom.slides.style.removeProperty('transform');\n\n    Array.from(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(\n      (slide) => {\n        slide.style.removeProperty('display');\n        slide.style.removeProperty('top');\n        slide.removeAttribute('hidden');\n        slide.removeAttribute('aria-hidden');\n      }\n    );\n  }\n\n  /**\n   * Adds a listener to one of our custom reveal.js events,\n   * like slidechanged.\n   */\n  function on(type, listener, useCapture) {\n    revealElement.addEventListener(type, listener, useCapture);\n  }\n\n  /**\n   * Unsubscribes from a reveal.js event.\n   */\n  function off(type, listener, useCapture) {\n    revealElement.removeEventListener(type, listener, useCapture);\n  }\n\n  /**\n   * Applies CSS transforms to the slides container. The container\n   * is transformed from two separate sources: layout and the overview\n   * mode.\n   *\n   * @param {object} transforms\n   */\n  function transformSlides(transforms) {\n    // Pick up new transforms from arguments\n    if (typeof transforms.layout === 'string')\n      slidesTransform.layout = transforms.layout;\n    if (typeof transforms.overview === 'string')\n      slidesTransform.overview = transforms.overview;\n\n    // Apply the transforms to the slides container\n    if (slidesTransform.layout) {\n      Util.transformElement(\n        dom.slides,\n        slidesTransform.layout + ' ' + slidesTransform.overview\n      );\n    } else {\n      Util.transformElement(dom.slides, slidesTransform.overview);\n    }\n  }\n\n  /**\n   * Dispatches an event of the specified type from the\n   * reveal DOM element.\n   */\n  function dispatchEvent({ target = dom.wrapper, type, data, bubbles = true }) {\n    let event = document.createEvent('HTMLEvents', 1, 2);\n    event.initEvent(type, bubbles, true);\n    Util.extend(event, data);\n    target.dispatchEvent(event);\n\n    if (target === dom.wrapper) {\n      // If we're in an iframe, post each reveal.js event to the\n      // parent window. Used by the notes plugin\n      dispatchPostMessage(type);\n    }\n\n    return event;\n  }\n\n  /**\n   * Dispatches a slidechanged event.\n   *\n   * @param {string} origin Used to identify multiplex clients\n   */\n  function dispatchSlideChanged(origin) {\n    dispatchEvent({\n      type: 'slidechanged',\n      data: {\n        indexh,\n        indexv,\n        previousSlide,\n        currentSlide,\n        origin,\n      },\n    });\n  }\n\n  /**\n   * Dispatched a postMessage of the given type from our window.\n   */\n  function dispatchPostMessage(type, data) {\n    if (config.postMessageEvents && window.parent !== window.self) {\n      let message = {\n        namespace: 'reveal',\n        eventName: type,\n        state: getState(),\n      };\n\n      Util.extend(message, data);\n\n      window.parent.postMessage(JSON.stringify(message), '*');\n    }\n  }\n\n  /**\n   * Bind preview frame links.\n   *\n   * @param {string} [selector=a] - selector for anchors\n   */\n  function enablePreviewLinks(selector = 'a') {\n    Array.from(dom.wrapper.querySelectorAll(selector)).forEach((element) => {\n      if (/^(http|www)/gi.test(element.getAttribute('href'))) {\n        element.addEventListener('click', onPreviewLinkClicked, false);\n      }\n    });\n  }\n\n  /**\n   * Unbind preview frame links.\n   */\n  function disablePreviewLinks(selector = 'a') {\n    Array.from(dom.wrapper.querySelectorAll(selector)).forEach((element) => {\n      if (/^(http|www)/gi.test(element.getAttribute('href'))) {\n        element.removeEventListener('click', onPreviewLinkClicked, false);\n      }\n    });\n  }\n\n  /**\n   * Opens a preview window for the target URL.\n   *\n   * @param {string} url - url for preview iframe src\n   */\n  function showPreview(url) {\n    closeOverlay();\n\n    dom.overlay = document.createElement('div');\n    dom.overlay.classList.add('overlay');\n    dom.overlay.classList.add('overlay-preview');\n    dom.wrapper.appendChild(dom.overlay);\n\n    dom.overlay.innerHTML = `<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n    dom.overlay.querySelector('iframe').addEventListener(\n      'load',\n      (event) => {\n        dom.overlay.classList.add('loaded');\n      },\n      false\n    );\n\n    dom.overlay.querySelector('.close').addEventListener(\n      'click',\n      (event) => {\n        closeOverlay();\n        event.preventDefault();\n      },\n      false\n    );\n\n    dom.overlay.querySelector('.external').addEventListener(\n      'click',\n      (event) => {\n        closeOverlay();\n      },\n      false\n    );\n  }\n\n  /**\n   * Open or close help overlay window.\n   *\n   * @param {Boolean} [override] Flag which overrides the\n   * toggle logic and forcibly sets the desired state. True means\n   * help is open, false means it's closed.\n   */\n  function toggleHelp(override) {\n    if (typeof override === 'boolean') {\n      override ? showHelp() : closeOverlay();\n    } else {\n      if (dom.overlay) {\n        closeOverlay();\n      } else {\n        showHelp();\n      }\n    }\n  }\n\n  /**\n   * Opens an overlay window with help material.\n   */\n  function showHelp() {\n    if (config.help) {\n      closeOverlay();\n\n      dom.overlay = document.createElement('div');\n      dom.overlay.classList.add('overlay');\n      dom.overlay.classList.add('overlay-help');\n      dom.wrapper.appendChild(dom.overlay);\n\n      let html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n      let shortcuts = keyboard.getShortcuts(),\n        bindings = keyboard.getBindings();\n\n      html += '<table><th>KEY</th><th>ACTION</th>';\n      for (let key in shortcuts) {\n        html += `<tr><td>${key}</td><td>${shortcuts[key]}</td></tr>`;\n      }\n\n      // Add custom key bindings that have associated descriptions\n      for (let binding in bindings) {\n        if (bindings[binding].key && bindings[binding].description) {\n          html += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n        }\n      }\n\n      html += '</table>';\n\n      dom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n      dom.overlay.querySelector('.close').addEventListener(\n        'click',\n        (event) => {\n          closeOverlay();\n          event.preventDefault();\n        },\n        false\n      );\n    }\n  }\n\n  /**\n   * Closes any currently open overlay.\n   */\n  function closeOverlay() {\n    if (dom.overlay) {\n      dom.overlay.parentNode.removeChild(dom.overlay);\n      dom.overlay = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Applies JavaScript-controlled layout rules to the\n   * presentation.\n   */\n  function layout() {\n    if (dom.wrapper && !printView.isActive()) {\n      const viewportWidth = dom.viewport.offsetWidth;\n      const viewportHeight = dom.viewport.offsetHeight;\n\n      if (!config.disableLayout) {\n        // On some mobile devices '100vh' is taller than the visible\n        // viewport which leads to part of the presentation being\n        // cut off. To work around this we define our own '--vh' custom\n        // property where 100x adds up to the correct height.\n        //\n        // https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n        if (Device.isMobile && !config.embedded) {\n          document.documentElement.style.setProperty(\n            '--vh',\n            window.innerHeight * 0.01 + 'px'\n          );\n        }\n\n        const size = scrollView.isActive()\n          ? getComputedSlideSize(viewportWidth, viewportHeight)\n          : getComputedSlideSize();\n\n        const oldScale = scale;\n\n        // Layout the contents of the slides\n        layoutSlideContents(config.width, config.height);\n\n        dom.slides.style.width = size.width + 'px';\n        dom.slides.style.height = size.height + 'px';\n\n        // Determine scale of content to fit within available space\n        scale = Math.min(\n          size.presentationWidth / size.width,\n          size.presentationHeight / size.height\n        );\n\n        // Respect max/min scale settings\n        scale = Math.max(scale, config.minScale);\n        scale = Math.min(scale, config.maxScale);\n\n        // Don't apply any scaling styles if scale is 1 or we're\n        // in the scroll view\n        if (scale === 1 || scrollView.isActive()) {\n          dom.slides.style.zoom = '';\n          dom.slides.style.left = '';\n          dom.slides.style.top = '';\n          dom.slides.style.bottom = '';\n          dom.slides.style.right = '';\n          transformSlides({ layout: '' });\n        } else {\n          dom.slides.style.zoom = '';\n          dom.slides.style.left = '50%';\n          dom.slides.style.top = '50%';\n          dom.slides.style.bottom = 'auto';\n          dom.slides.style.right = 'auto';\n          transformSlides({\n            layout: 'translate(-50%, -50%) scale(' + scale + ')',\n          });\n        }\n\n        // Select all slides, vertical and horizontal\n        const slides = Array.from(\n          dom.wrapper.querySelectorAll(SLIDES_SELECTOR)\n        );\n\n        for (let i = 0, len = slides.length; i < len; i++) {\n          const slide = slides[i];\n\n          // Don't bother updating invisible slides\n          if (slide.style.display === 'none') {\n            continue;\n          }\n\n          if (config.center || slide.classList.contains('center')) {\n            // Vertical stacks are not centred since their section\n            // children will be\n            if (slide.classList.contains('stack')) {\n              slide.style.top = 0;\n            } else {\n              slide.style.top =\n                Math.max((size.height - slide.scrollHeight) / 2, 0) + 'px';\n            }\n          } else {\n            slide.style.top = '';\n          }\n        }\n\n        if (oldScale !== scale) {\n          dispatchEvent({\n            type: 'resize',\n            data: {\n              oldScale,\n              scale,\n              size,\n            },\n          });\n        }\n      }\n\n      checkResponsiveScrollView();\n\n      dom.viewport.style.setProperty('--slide-scale', scale);\n      dom.viewport.style.setProperty('--viewport-width', viewportWidth + 'px');\n      dom.viewport.style.setProperty(\n        '--viewport-height',\n        viewportHeight + 'px'\n      );\n\n      scrollView.layout();\n\n      progress.update();\n      backgrounds.updateParallax();\n\n      if (overview.isActive()) {\n        overview.update();\n      }\n    }\n  }\n\n  /**\n   * Applies layout logic to the contents of all slides in\n   * the presentation.\n   *\n   * @param {string|number} width\n   * @param {string|number} height\n   */\n  function layoutSlideContents(width, height) {\n    // Handle sizing of elements with the 'r-stretch' class\n    Util.queryAll(\n      dom.slides,\n      'section > .stretch, section > .r-stretch'\n    ).forEach((element) => {\n      // Determine how much vertical space we can use\n      let remainingHeight = Util.getRemainingHeight(element, height);\n\n      // Consider the aspect ratio of media elements\n      if (/(img|video)/gi.test(element.nodeName)) {\n        const nw = element.naturalWidth || element.videoWidth,\n          nh = element.naturalHeight || element.videoHeight;\n\n        const es = Math.min(width / nw, remainingHeight / nh);\n\n        element.style.width = nw * es + 'px';\n        element.style.height = nh * es + 'px';\n      } else {\n        element.style.width = width + 'px';\n        element.style.height = remainingHeight + 'px';\n      }\n    });\n  }\n\n  /**\n   * Responsively activates the scroll mode when we reach the configured\n   * activation width.\n   */\n  function checkResponsiveScrollView() {\n    // Only proceed if...\n    // 1. The DOM is ready\n    // 2. Layouts aren't disabled via config\n    // 3. We're not currently printing\n    // 4. There is a scrollActivationWidth set\n    // 5. The deck isn't configured to always use the scroll view\n    if (\n      dom.wrapper &&\n      !config.disableLayout &&\n      !printView.isActive() &&\n      typeof config.scrollActivationWidth === 'number' &&\n      config.view !== 'scroll'\n    ) {\n      const size = getComputedSlideSize();\n\n      if (\n        size.presentationWidth > 0 &&\n        size.presentationWidth <= config.scrollActivationWidth\n      ) {\n        if (!scrollView.isActive()) {\n          backgrounds.create();\n          scrollView.activate();\n        }\n      } else {\n        if (scrollView.isActive()) scrollView.deactivate();\n      }\n    }\n  }\n\n  /**\n   * Calculates the computed pixel size of our slides. These\n   * values are based on the width and height configuration\n   * options.\n   *\n   * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n   * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n   */\n  function getComputedSlideSize(presentationWidth, presentationHeight) {\n    let width = config.width;\n    let height = config.height;\n\n    if (config.disableLayout) {\n      width = dom.slides.offsetWidth;\n      height = dom.slides.offsetHeight;\n    }\n\n    const size = {\n      // Slide size\n      width: width,\n      height: height,\n\n      // Presentation size\n      presentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n      presentationHeight: presentationHeight || dom.wrapper.offsetHeight,\n    };\n\n    // Reduce available space by margin\n    size.presentationWidth -= size.presentationWidth * config.margin;\n    size.presentationHeight -= size.presentationHeight * config.margin;\n\n    // Slide width may be a percentage of available width\n    if (typeof size.width === 'string' && /%$/.test(size.width)) {\n      size.width = (parseInt(size.width, 10) / 100) * size.presentationWidth;\n    }\n\n    // Slide height may be a percentage of available height\n    if (typeof size.height === 'string' && /%$/.test(size.height)) {\n      size.height = (parseInt(size.height, 10) / 100) * size.presentationHeight;\n    }\n\n    return size;\n  }\n\n  /**\n   * Stores the vertical index of a stack so that the same\n   * vertical slide can be selected when navigating to and\n   * from the stack.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   * @param {string|number} [v=0] Index to memorize\n   */\n  function setPreviousVerticalIndex(stack, v) {\n    if (typeof stack === 'object' && typeof stack.setAttribute === 'function') {\n      stack.setAttribute('data-previous-indexv', v || 0);\n    }\n  }\n\n  /**\n   * Retrieves the vertical index which was stored using\n   * #setPreviousVerticalIndex() or 0 if no previous index\n   * exists.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   */\n  function getPreviousVerticalIndex(stack) {\n    if (\n      typeof stack === 'object' &&\n      typeof stack.setAttribute === 'function' &&\n      stack.classList.contains('stack')\n    ) {\n      // Prefer manually defined start-indexv\n      const attributeName = stack.hasAttribute('data-start-indexv')\n        ? 'data-start-indexv'\n        : 'data-previous-indexv';\n\n      return parseInt(stack.getAttribute(attributeName) || 0, 10);\n    }\n\n    return 0;\n  }\n\n  /**\n   * Checks if the current or specified slide is vertical\n   * (nested within another slide).\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide to check\n   * orientation of\n   * @return {Boolean}\n   */\n  function isVerticalSlide(slide = currentSlide) {\n    return (\n      slide && slide.parentNode && !!slide.parentNode.nodeName.match(/section/i)\n    );\n  }\n\n  /**\n   * Checks if the current or specified slide is a stack containing\n   * vertical slides.\n   *\n   * @param {HTMLElement} [slide=currentSlide]\n   * @return {Boolean}\n   */\n  function isVerticalStack(slide = currentSlide) {\n    return (\n      slide.classList.contains('.stack') ||\n      slide.querySelector('section') !== null\n    );\n  }\n\n  /**\n   * Returns true if we're on the last slide in the current\n   * vertical stack.\n   */\n  function isLastVerticalSlide() {\n    if (currentSlide && isVerticalSlide(currentSlide)) {\n      // Does this slide have a next sibling?\n      if (currentSlide.nextElementSibling) return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns true if we're currently on the first slide in\n   * the presentation.\n   */\n  function isFirstSlide() {\n    return indexh === 0 && indexv === 0;\n  }\n\n  /**\n   * Returns true if we're currently on the last slide in\n   * the presenation. If the last slide is a stack, we only\n   * consider this the last slide if it's at the end of the\n   * stack.\n   */\n  function isLastSlide() {\n    if (currentSlide) {\n      // Does this slide have a next sibling?\n      if (currentSlide.nextElementSibling) return false;\n\n      // If it's vertical, does its parent have a next sibling?\n      if (\n        isVerticalSlide(currentSlide) &&\n        currentSlide.parentNode.nextElementSibling\n      )\n        return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Enters the paused mode which fades everything on screen to\n   * black.\n   */\n  function pause() {\n    if (config.pause) {\n      const wasPaused = dom.wrapper.classList.contains('paused');\n\n      cancelAutoSlide();\n      dom.wrapper.classList.add('paused');\n\n      if (wasPaused === false) {\n        dispatchEvent({ type: 'paused' });\n      }\n    }\n  }\n\n  /**\n   * Exits from the paused mode.\n   */\n  function resume() {\n    const wasPaused = dom.wrapper.classList.contains('paused');\n    dom.wrapper.classList.remove('paused');\n\n    cueAutoSlide();\n\n    if (wasPaused) {\n      dispatchEvent({ type: 'resumed' });\n    }\n  }\n\n  /**\n   * Toggles the paused mode on and off.\n   */\n  function togglePause(override) {\n    if (typeof override === 'boolean') {\n      override ? pause() : resume();\n    } else {\n      isPaused() ? resume() : pause();\n    }\n  }\n\n  /**\n   * Checks if we are currently in the paused mode.\n   *\n   * @return {Boolean}\n   */\n  function isPaused() {\n    return dom.wrapper.classList.contains('paused');\n  }\n\n  /**\n   * Toggles visibility of the jump-to-slide UI.\n   */\n  function toggleJumpToSlide(override) {\n    if (typeof override === 'boolean') {\n      override ? jumpToSlide.show() : jumpToSlide.hide();\n    } else {\n      jumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n    }\n  }\n\n  /**\n   * Toggles the auto slide mode on and off.\n   *\n   * @param {Boolean} [override] Flag which sets the desired state.\n   * True means autoplay starts, false means it stops.\n   */\n\n  function toggleAutoSlide(override) {\n    if (typeof override === 'boolean') {\n      override ? resumeAutoSlide() : pauseAutoSlide();\n    } else {\n      autoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n    }\n  }\n\n  /**\n   * Checks if the auto slide mode is currently on.\n   *\n   * @return {Boolean}\n   */\n  function isAutoSliding() {\n    return !!(autoSlide && !autoSlidePaused);\n  }\n\n  /**\n   * Steps from the current point in the presentation to the\n   * slide which matches the specified horizontal and vertical\n   * indices.\n   *\n   * @param {number} [h=indexh] Horizontal index of the target slide\n   * @param {number} [v=indexv] Vertical index of the target slide\n   * @param {number} [f] Index of a fragment within the\n   * target slide to activate\n   * @param {number} [origin] Origin for use in multimaster environments\n   */\n  function slide(h, v, f, origin) {\n    // Dispatch an event before the slide\n    const slidechange = dispatchEvent({\n      type: 'beforeslidechange',\n      data: {\n        indexh: h === undefined ? indexh : h,\n        indexv: v === undefined ? indexv : v,\n        origin,\n      },\n    });\n\n    // Abort if this slide change was prevented by an event listener\n    if (slidechange.defaultPrevented) return;\n\n    // Remember where we were at before\n    previousSlide = currentSlide;\n\n    // Query all horizontal slides in the deck\n    const horizontalSlides = dom.wrapper.querySelectorAll(\n      HORIZONTAL_SLIDES_SELECTOR\n    );\n\n    // If we're in scroll mode, we scroll the target slide into view\n    // instead of running our standard slide transition\n    if (scrollView.isActive()) {\n      const scrollToSlide = scrollView.getSlideByIndices(h, v);\n      if (scrollToSlide) scrollView.scrollToSlide(scrollToSlide);\n      return;\n    }\n\n    // Abort if there are no slides\n    if (horizontalSlides.length === 0) return;\n\n    // If no vertical index is specified and the upcoming slide is a\n    // stack, resume at its previous vertical index\n    if (v === undefined && !overview.isActive()) {\n      v = getPreviousVerticalIndex(horizontalSlides[h]);\n    }\n\n    // If we were on a vertical stack, remember what vertical index\n    // it was on so we can resume at the same position when returning\n    if (\n      previousSlide &&\n      previousSlide.parentNode &&\n      previousSlide.parentNode.classList.contains('stack')\n    ) {\n      setPreviousVerticalIndex(previousSlide.parentNode, indexv);\n    }\n\n    // Remember the state before this slide\n    const stateBefore = state.concat();\n\n    // Reset the state array\n    state.length = 0;\n\n    let indexhBefore = indexh || 0,\n      indexvBefore = indexv || 0;\n\n    // Activate and transition to the new slide\n    indexh = updateSlides(\n      HORIZONTAL_SLIDES_SELECTOR,\n      h === undefined ? indexh : h\n    );\n    indexv = updateSlides(\n      VERTICAL_SLIDES_SELECTOR,\n      v === undefined ? indexv : v\n    );\n\n    // Dispatch an event if the slide changed\n    let slideChanged = indexh !== indexhBefore || indexv !== indexvBefore;\n\n    // Ensure that the previous slide is never the same as the current\n    if (!slideChanged) previousSlide = null;\n\n    // Find the current horizontal slide and any possible vertical slides\n    // within it\n    let currentHorizontalSlide = horizontalSlides[indexh],\n      currentVerticalSlides =\n        currentHorizontalSlide.querySelectorAll('section');\n\n    // Store references to the previous and current slides\n    currentSlide = currentVerticalSlides[indexv] || currentHorizontalSlide;\n\n    let autoAnimateTransition = false;\n\n    // Detect if we're moving between two auto-animated slides\n    if (slideChanged && previousSlide && currentSlide && !overview.isActive()) {\n      transition = 'running';\n\n      autoAnimateTransition = shouldAutoAnimateBetween(\n        previousSlide,\n        currentSlide,\n        indexhBefore,\n        indexvBefore\n      );\n\n      // If this is an auto-animated transition, we disable the\n      // regular slide transition\n      //\n      // Note 20-03-2020:\n      // This needs to happen before we update slide visibility,\n      // otherwise transitions will still run in Safari.\n      if (autoAnimateTransition) {\n        dom.slides.classList.add('disable-slide-transitions');\n      }\n    }\n\n    // Update the visibility of slides now that the indices have changed\n    updateSlidesVisibility();\n\n    layout();\n\n    // Update the overview if it's currently active\n    if (overview.isActive()) {\n      overview.update();\n    }\n\n    // Show fragment, if specified\n    if (typeof f !== 'undefined') {\n      fragments.goto(f);\n    }\n\n    // Solves an edge case where the previous slide maintains the\n    // 'present' class when navigating between adjacent vertical\n    // stacks\n    if (previousSlide && previousSlide !== currentSlide) {\n      previousSlide.classList.remove('present');\n      previousSlide.setAttribute('aria-hidden', 'true');\n\n      // Reset all slides upon navigate to home\n      if (isFirstSlide()) {\n        // Launch async task\n        setTimeout(() => {\n          getVerticalStacks().forEach((slide) => {\n            setPreviousVerticalIndex(slide, 0);\n          });\n        }, 0);\n      }\n    }\n\n    // Apply the new state\n    stateLoop: for (let i = 0, len = state.length; i < len; i++) {\n      // Check if this state existed on the previous slide. If it\n      // did, we will avoid adding it repeatedly\n      for (let j = 0; j < stateBefore.length; j++) {\n        if (stateBefore[j] === state[i]) {\n          stateBefore.splice(j, 1);\n          continue stateLoop;\n        }\n      }\n\n      dom.viewport.classList.add(state[i]);\n\n      // Dispatch custom event matching the state's name\n      dispatchEvent({ type: state[i] });\n    }\n\n    // Clean up the remains of the previous state\n    while (stateBefore.length) {\n      dom.viewport.classList.remove(stateBefore.pop());\n    }\n\n    if (slideChanged) {\n      dispatchSlideChanged(origin);\n    }\n\n    // Handle embedded content\n    if (slideChanged || !previousSlide) {\n      slideContent.stopEmbeddedContent(previousSlide);\n      slideContent.startEmbeddedContent(currentSlide);\n    }\n\n    // Announce the current slide contents to screen readers\n    // Use animation frame to prevent getComputedStyle in getStatusText\n    // from triggering layout mid-frame\n    requestAnimationFrame(() => {\n      announceStatus(getStatusText(currentSlide));\n    });\n\n    progress.update();\n    controls.update();\n    notes.update();\n    backgrounds.update();\n    backgrounds.updateParallax();\n    slideNumber.update();\n    fragments.update();\n\n    // Update the URL hash\n    location.writeURL();\n\n    cueAutoSlide();\n\n    // Auto-animation\n    if (autoAnimateTransition) {\n      setTimeout(() => {\n        dom.slides.classList.remove('disable-slide-transitions');\n      }, 0);\n\n      if (config.autoAnimate) {\n        // Run the auto-animation between our slides\n        autoAnimate.run(previousSlide, currentSlide);\n      }\n    }\n  }\n\n  /**\n   * Checks whether or not an auto-animation should take place between\n   * the two given slides.\n   *\n   * @param {HTMLElement} fromSlide\n   * @param {HTMLElement} toSlide\n   * @param {number} indexhBefore\n   * @param {number} indexvBefore\n   *\n   * @returns {boolean}\n   */\n  function shouldAutoAnimateBetween(\n    fromSlide,\n    toSlide,\n    indexhBefore,\n    indexvBefore\n  ) {\n    return (\n      fromSlide.hasAttribute('data-auto-animate') &&\n      toSlide.hasAttribute('data-auto-animate') &&\n      fromSlide.getAttribute('data-auto-animate-id') ===\n        toSlide.getAttribute('data-auto-animate-id') &&\n      !(\n        indexh > indexhBefore || indexv > indexvBefore ? toSlide : fromSlide\n      ).hasAttribute('data-auto-animate-restart')\n    );\n  }\n\n  /**\n   * Called anytime a new slide should be activated while in the scroll\n   * view. The active slide is the page that occupies the most space in\n   * the scrollable viewport.\n   *\n   * @param {number} pageIndex\n   * @param {HTMLElement} slideElement\n   */\n  function setCurrentScrollPage(slideElement, h, v) {\n    let indexhBefore = indexh || 0;\n\n    indexh = h;\n    indexv = v;\n\n    const slideChanged = currentSlide !== slideElement;\n\n    previousSlide = currentSlide;\n    currentSlide = slideElement;\n\n    if (currentSlide && previousSlide) {\n      if (\n        config.autoAnimate &&\n        shouldAutoAnimateBetween(\n          previousSlide,\n          currentSlide,\n          indexhBefore,\n          indexv\n        )\n      ) {\n        // Run the auto-animation between our slides\n        autoAnimate.run(previousSlide, currentSlide);\n      }\n    }\n\n    // Start or stop embedded content like videos and iframes\n    if (slideChanged) {\n      if (previousSlide) {\n        slideContent.stopEmbeddedContent(previousSlide);\n        slideContent.stopEmbeddedContent(previousSlide.slideBackgroundElement);\n      }\n\n      slideContent.startEmbeddedContent(currentSlide);\n      slideContent.startEmbeddedContent(currentSlide.slideBackgroundElement);\n    }\n\n    requestAnimationFrame(() => {\n      announceStatus(getStatusText(currentSlide));\n    });\n\n    dispatchSlideChanged();\n  }\n\n  /**\n   * Syncs the presentation with the current DOM. Useful\n   * when new slides or control elements are added or when\n   * the configuration has changed.\n   */\n  function sync() {\n    // Subscribe to input\n    removeEventListeners();\n    addEventListeners();\n\n    // Force a layout to make sure the current config is accounted for\n    layout();\n\n    // Reflect the current autoSlide value\n    autoSlide = config.autoSlide;\n\n    // Start auto-sliding if it's enabled\n    cueAutoSlide();\n\n    // Re-create all slide backgrounds\n    backgrounds.create();\n\n    // Write the current hash to the URL\n    location.writeURL();\n\n    if (config.sortFragmentsOnSync === true) {\n      fragments.sortAll();\n    }\n\n    controls.update();\n    progress.update();\n\n    updateSlidesVisibility();\n\n    notes.update();\n    notes.updateVisibility();\n    backgrounds.update(true);\n    slideNumber.update();\n    slideContent.formatEmbeddedContent();\n\n    // Start or stop embedded content depending on global config\n    if (config.autoPlayMedia === false) {\n      slideContent.stopEmbeddedContent(currentSlide, { unloadIframes: false });\n    } else {\n      slideContent.startEmbeddedContent(currentSlide);\n    }\n\n    if (overview.isActive()) {\n      overview.layout();\n    }\n  }\n\n  /**\n   * Updates reveal.js to keep in sync with new slide attributes. For\n   * example, if you add a new `data-background-image` you can call\n   * this to have reveal.js render the new background image.\n   *\n   * Similar to #sync() but more efficient when you only need to\n   * refresh a specific slide.\n   *\n   * @param {HTMLElement} slide\n   */\n  function syncSlide(slide = currentSlide) {\n    backgrounds.sync(slide);\n    fragments.sync(slide);\n\n    slideContent.load(slide);\n\n    backgrounds.update();\n    notes.update();\n  }\n\n  /**\n   * Resets all vertical slides so that only the first\n   * is visible.\n   */\n  function resetVerticalSlides() {\n    getHorizontalSlides().forEach((horizontalSlide) => {\n      Util.queryAll(horizontalSlide, 'section').forEach((verticalSlide, y) => {\n        if (y > 0) {\n          verticalSlide.classList.remove('present');\n          verticalSlide.classList.remove('past');\n          verticalSlide.classList.add('future');\n          verticalSlide.setAttribute('aria-hidden', 'true');\n        }\n      });\n    });\n  }\n\n  /**\n   * Randomly shuffles all slides in the deck.\n   */\n  function shuffle(slides = getHorizontalSlides()) {\n    slides.forEach((slide, i) => {\n      // Insert the slide next to a randomly picked sibling slide\n      // slide. This may cause the slide to insert before itself,\n      // but that's not an issue.\n      let beforeSlide = slides[Math.floor(Math.random() * slides.length)];\n      if (beforeSlide.parentNode === slide.parentNode) {\n        slide.parentNode.insertBefore(slide, beforeSlide);\n      }\n\n      // Randomize the order of vertical slides (if there are any)\n      let verticalSlides = slide.querySelectorAll('section');\n      if (verticalSlides.length) {\n        shuffle(verticalSlides);\n      }\n    });\n  }\n\n  /**\n   * Updates one dimension of slides by showing the slide\n   * with the specified index.\n   *\n   * @param {string} selector A CSS selector that will fetch\n   * the group of slides we are working with\n   * @param {number} index The index of the slide that should be\n   * shown\n   *\n   * @return {number} The index of the slide that is now shown,\n   * might differ from the passed in index if it was out of\n   * bounds.\n   */\n  function updateSlides(selector, index) {\n    // Select all slides and convert the NodeList result to\n    // an array\n    let slides = Util.queryAll(dom.wrapper, selector),\n      slidesLength = slides.length;\n\n    let printMode = scrollView.isActive() || printView.isActive();\n    let loopedForwards = false;\n    let loopedBackwards = false;\n\n    if (slidesLength) {\n      // Should the index loop?\n      if (config.loop) {\n        if (index >= slidesLength) loopedForwards = true;\n\n        index %= slidesLength;\n\n        if (index < 0) {\n          index = slidesLength + index;\n          loopedBackwards = true;\n        }\n      }\n\n      // Enforce max and minimum index bounds\n      index = Math.max(Math.min(index, slidesLength - 1), 0);\n\n      for (let i = 0; i < slidesLength; i++) {\n        let element = slides[i];\n\n        let reverse = config.rtl && !isVerticalSlide(element);\n\n        // Avoid .remove() with multiple args for IE11 support\n        element.classList.remove('past');\n        element.classList.remove('present');\n        element.classList.remove('future');\n\n        // http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n        element.setAttribute('hidden', '');\n        element.setAttribute('aria-hidden', 'true');\n\n        // If this element contains vertical slides\n        if (element.querySelector('section')) {\n          element.classList.add('stack');\n        }\n\n        // If we're printing static slides, all slides are \"present\"\n        if (printMode) {\n          element.classList.add('present');\n          continue;\n        }\n\n        if (i < index) {\n          // Any element previous to index is given the 'past' class\n          element.classList.add(reverse ? 'future' : 'past');\n\n          if (config.fragments) {\n            // Show all fragments in prior slides\n            showFragmentsIn(element);\n          }\n        } else if (i > index) {\n          // Any element subsequent to index is given the 'future' class\n          element.classList.add(reverse ? 'past' : 'future');\n\n          if (config.fragments) {\n            // Hide all fragments in future slides\n            hideFragmentsIn(element);\n          }\n        }\n        // Update the visibility of fragments when a presentation loops\n        // in either direction\n        else if (i === index && config.fragments) {\n          if (loopedForwards) {\n            hideFragmentsIn(element);\n          } else if (loopedBackwards) {\n            showFragmentsIn(element);\n          }\n        }\n      }\n\n      let slide = slides[index];\n      let wasPresent = slide.classList.contains('present');\n\n      // Mark the current slide as present\n      slide.classList.add('present');\n      slide.removeAttribute('hidden');\n      slide.removeAttribute('aria-hidden');\n\n      if (!wasPresent) {\n        // Dispatch an event indicating the slide is now visible\n        dispatchEvent({\n          target: slide,\n          type: 'visible',\n          bubbles: false,\n        });\n      }\n\n      // If this slide has a state associated with it, add it\n      // onto the current state of the deck\n      let slideState = slide.getAttribute('data-state');\n      if (slideState) {\n        state = state.concat(slideState.split(' '));\n      }\n    } else {\n      // Since there are no slides we can't be anywhere beyond the\n      // zeroth index\n      index = 0;\n    }\n\n    return index;\n  }\n\n  /**\n   * Shows all fragment elements within the given container.\n   */\n  function showFragmentsIn(container) {\n    Util.queryAll(container, '.fragment').forEach((fragment) => {\n      fragment.classList.add('visible');\n      fragment.classList.remove('current-fragment');\n    });\n  }\n\n  /**\n   * Hides all fragment elements within the given container.\n   */\n  function hideFragmentsIn(container) {\n    Util.queryAll(container, '.fragment.visible').forEach((fragment) => {\n      fragment.classList.remove('visible', 'current-fragment');\n    });\n  }\n\n  /**\n   * Optimization method; hide all slides that are far away\n   * from the present slide.\n   */\n  function updateSlidesVisibility() {\n    // Select all slides and convert the NodeList result to\n    // an array\n    let horizontalSlides = getHorizontalSlides(),\n      horizontalSlidesLength = horizontalSlides.length,\n      distanceX,\n      distanceY;\n\n    if (horizontalSlidesLength && typeof indexh !== 'undefined') {\n      // The number of steps away from the present slide that will\n      // be visible\n      let viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n      // Shorten the view distance on devices that typically have\n      // less resources\n      if (Device.isMobile) {\n        viewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n      }\n\n      // All slides need to be visible when exporting to PDF\n      if (printView.isActive()) {\n        viewDistance = Number.MAX_VALUE;\n      }\n\n      for (let x = 0; x < horizontalSlidesLength; x++) {\n        let horizontalSlide = horizontalSlides[x];\n\n        let verticalSlides = Util.queryAll(horizontalSlide, 'section'),\n          verticalSlidesLength = verticalSlides.length;\n\n        // Determine how far away this slide is from the present\n        distanceX = Math.abs((indexh || 0) - x) || 0;\n\n        // If the presentation is looped, distance should measure\n        // 1 between the first and last slides\n        if (config.loop) {\n          distanceX =\n            Math.abs(\n              ((indexh || 0) - x) % (horizontalSlidesLength - viewDistance)\n            ) || 0;\n        }\n\n        // Show the horizontal slide if it's within the view distance\n        if (distanceX < viewDistance) {\n          slideContent.load(horizontalSlide);\n        } else {\n          slideContent.unload(horizontalSlide);\n        }\n\n        if (verticalSlidesLength) {\n          let oy = getPreviousVerticalIndex(horizontalSlide);\n\n          for (let y = 0; y < verticalSlidesLength; y++) {\n            let verticalSlide = verticalSlides[y];\n\n            distanceY =\n              x === (indexh || 0)\n                ? Math.abs((indexv || 0) - y)\n                : Math.abs(y - oy);\n\n            if (distanceX + distanceY < viewDistance) {\n              slideContent.load(verticalSlide);\n            } else {\n              slideContent.unload(verticalSlide);\n            }\n          }\n        }\n      }\n\n      // Flag if there are ANY vertical slides, anywhere in the deck\n      if (hasVerticalSlides()) {\n        dom.wrapper.classList.add('has-vertical-slides');\n      } else {\n        dom.wrapper.classList.remove('has-vertical-slides');\n      }\n\n      // Flag if there are ANY horizontal slides, anywhere in the deck\n      if (hasHorizontalSlides()) {\n        dom.wrapper.classList.add('has-horizontal-slides');\n      } else {\n        dom.wrapper.classList.remove('has-horizontal-slides');\n      }\n    }\n  }\n\n  /**\n   * Determine what available routes there are for navigation.\n   *\n   * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n   */\n  function availableRoutes({ includeFragments = false } = {}) {\n    let horizontalSlides = dom.wrapper.querySelectorAll(\n        HORIZONTAL_SLIDES_SELECTOR\n      ),\n      verticalSlides = dom.wrapper.querySelectorAll(VERTICAL_SLIDES_SELECTOR);\n\n    let routes = {\n      left: indexh > 0,\n      right: indexh < horizontalSlides.length - 1,\n      up: indexv > 0,\n      down: indexv < verticalSlides.length - 1,\n    };\n\n    // Looped presentations can always be navigated as long as\n    // there are slides available\n    if (config.loop) {\n      if (horizontalSlides.length > 1) {\n        routes.left = true;\n        routes.right = true;\n      }\n\n      if (verticalSlides.length > 1) {\n        routes.up = true;\n        routes.down = true;\n      }\n    }\n\n    if (horizontalSlides.length > 1 && config.navigationMode === 'linear') {\n      routes.right = routes.right || routes.down;\n      routes.left = routes.left || routes.up;\n    }\n\n    // If includeFragments is set, a route will be considered\n    // available if either a slid OR fragment is available in\n    // the given direction\n    if (includeFragments === true) {\n      let fragmentRoutes = fragments.availableRoutes();\n      routes.left = routes.left || fragmentRoutes.prev;\n      routes.up = routes.up || fragmentRoutes.prev;\n      routes.down = routes.down || fragmentRoutes.next;\n      routes.right = routes.right || fragmentRoutes.next;\n    }\n\n    // Reverse horizontal controls for rtl\n    if (config.rtl) {\n      let left = routes.left;\n      routes.left = routes.right;\n      routes.right = left;\n    }\n\n    return routes;\n  }\n\n  /**\n   * Returns the number of past slides. This can be used as a global\n   * flattened index for slides.\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n   *\n   * @return {number} Past slide count\n   */\n  function getSlidePastCount(slide = currentSlide) {\n    let horizontalSlides = getHorizontalSlides();\n\n    // The number of past slides\n    let pastCount = 0;\n\n    // Step through all slides and count the past ones\n    mainLoop: for (let i = 0; i < horizontalSlides.length; i++) {\n      let horizontalSlide = horizontalSlides[i];\n      let verticalSlides = horizontalSlide.querySelectorAll('section');\n\n      for (let j = 0; j < verticalSlides.length; j++) {\n        // Stop as soon as we arrive at the present\n        if (verticalSlides[j] === slide) {\n          break mainLoop;\n        }\n\n        // Don't count slides with the \"uncounted\" class\n        if (verticalSlides[j].dataset.visibility !== 'uncounted') {\n          pastCount++;\n        }\n      }\n\n      // Stop as soon as we arrive at the present\n      if (horizontalSlide === slide) {\n        break;\n      }\n\n      // Don't count the wrapping section for vertical slides and\n      // slides marked as uncounted\n      if (\n        horizontalSlide.classList.contains('stack') === false &&\n        horizontalSlide.dataset.visibility !== 'uncounted'\n      ) {\n        pastCount++;\n      }\n    }\n\n    return pastCount;\n  }\n\n  /**\n   * Returns a value ranging from 0-1 that represents\n   * how far into the presentation we have navigated.\n   *\n   * @return {number}\n   */\n  function getProgress() {\n    // The number of past and total slides\n    let totalCount = getTotalSlides();\n    let pastCount = getSlidePastCount();\n\n    if (currentSlide) {\n      let allFragments = currentSlide.querySelectorAll('.fragment');\n\n      // If there are fragments in the current slide those should be\n      // accounted for in the progress.\n      if (allFragments.length > 0) {\n        let visibleFragments =\n          currentSlide.querySelectorAll('.fragment.visible');\n\n        // This value represents how big a portion of the slide progress\n        // that is made up by its fragments (0-1)\n        let fragmentWeight = 0.9;\n\n        // Add fragment progress to the past slide count\n        pastCount +=\n          (visibleFragments.length / allFragments.length) * fragmentWeight;\n      }\n    }\n\n    return Math.min(pastCount / (totalCount - 1), 1);\n  }\n\n  /**\n   * Retrieves the h/v location and fragment of the current,\n   * or specified, slide.\n   *\n   * @param {HTMLElement} [slide] If specified, the returned\n   * index will be for this slide rather than the currently\n   * active one\n   *\n   * @return {{h: number, v: number, f: number}}\n   */\n  function getIndices(slide) {\n    // By default, return the current indices\n    let h = indexh,\n      v = indexv,\n      f;\n\n    // If a slide is specified, return the indices of that slide\n    if (slide) {\n      // In scroll mode the original h/x index is stored on the slide\n      if (scrollView.isActive()) {\n        h = parseInt(slide.getAttribute('data-index-h'), 10);\n\n        if (slide.getAttribute('data-index-v')) {\n          v = parseInt(slide.getAttribute('data-index-v'), 10);\n        }\n      } else {\n        let isVertical = isVerticalSlide(slide);\n        let slideh = isVertical ? slide.parentNode : slide;\n\n        // Select all horizontal slides\n        let horizontalSlides = getHorizontalSlides();\n\n        // Now that we know which the horizontal slide is, get its index\n        h = Math.max(horizontalSlides.indexOf(slideh), 0);\n\n        // Assume we're not vertical\n        v = undefined;\n\n        // If this is a vertical slide, grab the vertical index\n        if (isVertical) {\n          v = Math.max(\n            Util.queryAll(slide.parentNode, 'section').indexOf(slide),\n            0\n          );\n        }\n      }\n    }\n\n    if (!slide && currentSlide) {\n      let hasFragments = currentSlide.querySelectorAll('.fragment').length > 0;\n      if (hasFragments) {\n        let currentFragment = currentSlide.querySelector('.current-fragment');\n        if (\n          currentFragment &&\n          currentFragment.hasAttribute('data-fragment-index')\n        ) {\n          f = parseInt(currentFragment.getAttribute('data-fragment-index'), 10);\n        } else {\n          f = currentSlide.querySelectorAll('.fragment.visible').length - 1;\n        }\n      }\n    }\n\n    return { h, v, f };\n  }\n\n  /**\n   * Retrieves all slides in this presentation.\n   */\n  function getSlides() {\n    return Util.queryAll(\n      dom.wrapper,\n      SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])'\n    );\n  }\n\n  /**\n   * Returns a list of all horizontal slides in the deck. Each\n   * vertical stack is included as one horizontal slide in the\n   * resulting array.\n   */\n  function getHorizontalSlides() {\n    return Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR);\n  }\n\n  /**\n   * Returns all vertical slides that exist within this deck.\n   */\n  function getVerticalSlides() {\n    return Util.queryAll(dom.wrapper, '.slides>section>section');\n  }\n\n  /**\n   * Returns all vertical stacks (each stack can contain multiple slides).\n   */\n  function getVerticalStacks() {\n    return Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n  }\n\n  /**\n   * Returns true if there are at least two horizontal slides.\n   */\n  function hasHorizontalSlides() {\n    return getHorizontalSlides().length > 1;\n  }\n\n  /**\n   * Returns true if there are at least two vertical slides.\n   */\n  function hasVerticalSlides() {\n    return getVerticalSlides().length > 1;\n  }\n\n  /**\n   * Returns an array of objects where each object represents the\n   * attributes on its respective slide.\n   */\n  function getSlidesAttributes() {\n    return getSlides().map((slide) => {\n      let attributes = {};\n      for (let i = 0; i < slide.attributes.length; i++) {\n        let attribute = slide.attributes[i];\n        attributes[attribute.name] = attribute.value;\n      }\n      return attributes;\n    });\n  }\n\n  /**\n   * Retrieves the total number of slides in this presentation.\n   *\n   * @return {number}\n   */\n  function getTotalSlides() {\n    return getSlides().length;\n  }\n\n  /**\n   * Returns the slide element matching the specified index.\n   *\n   * @return {HTMLElement}\n   */\n  function getSlide(x, y) {\n    let horizontalSlide = getHorizontalSlides()[x];\n    let verticalSlides =\n      horizontalSlide && horizontalSlide.querySelectorAll('section');\n\n    if (verticalSlides && verticalSlides.length && typeof y === 'number') {\n      return verticalSlides ? verticalSlides[y] : undefined;\n    }\n\n    return horizontalSlide;\n  }\n\n  /**\n   * Returns the background element for the given slide.\n   * All slides, even the ones with no background properties\n   * defined, have a background element so as long as the\n   * index is valid an element will be returned.\n   *\n   * @param {mixed} x Horizontal background index OR a slide\n   * HTML element\n   * @param {number} y Vertical background index\n   * @return {(HTMLElement[]|*)}\n   */\n  function getSlideBackground(x, y) {\n    let slide = typeof x === 'number' ? getSlide(x, y) : x;\n    if (slide) {\n      return slide.slideBackgroundElement;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Retrieves the current state of the presentation as\n   * an object. This state can then be restored at any\n   * time.\n   *\n   * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n   */\n  function getState() {\n    let indices = getIndices();\n\n    return {\n      indexh: indices.h,\n      indexv: indices.v,\n      indexf: indices.f,\n      paused: isPaused(),\n      overview: overview.isActive(),\n    };\n  }\n\n  /**\n   * Restores the presentation to the given state.\n   *\n   * @param {object} state As generated by getState()\n   * @see {@link getState} generates the parameter `state`\n   */\n  function setState(state) {\n    if (typeof state === 'object') {\n      slide(\n        Util.deserialize(state.indexh),\n        Util.deserialize(state.indexv),\n        Util.deserialize(state.indexf)\n      );\n\n      let pausedFlag = Util.deserialize(state.paused),\n        overviewFlag = Util.deserialize(state.overview);\n\n      if (typeof pausedFlag === 'boolean' && pausedFlag !== isPaused()) {\n        togglePause(pausedFlag);\n      }\n\n      if (\n        typeof overviewFlag === 'boolean' &&\n        overviewFlag !== overview.isActive()\n      ) {\n        overview.toggle(overviewFlag);\n      }\n    }\n  }\n\n  /**\n   * Cues a new automated slide if enabled in the config.\n   */\n  function cueAutoSlide() {\n    cancelAutoSlide();\n\n    if (currentSlide && config.autoSlide !== false) {\n      let fragment = currentSlide.querySelector(\n        '.current-fragment[data-autoslide]'\n      );\n\n      let fragmentAutoSlide = fragment\n        ? fragment.getAttribute('data-autoslide')\n        : null;\n      let parentAutoSlide = currentSlide.parentNode\n        ? currentSlide.parentNode.getAttribute('data-autoslide')\n        : null;\n      let slideAutoSlide = currentSlide.getAttribute('data-autoslide');\n\n      // Pick value in the following priority order:\n      // 1. Current fragment's data-autoslide\n      // 2. Current slide's data-autoslide\n      // 3. Parent slide's data-autoslide\n      // 4. Global autoSlide setting\n      if (fragmentAutoSlide) {\n        autoSlide = parseInt(fragmentAutoSlide, 10);\n      } else if (slideAutoSlide) {\n        autoSlide = parseInt(slideAutoSlide, 10);\n      } else if (parentAutoSlide) {\n        autoSlide = parseInt(parentAutoSlide, 10);\n      } else {\n        autoSlide = config.autoSlide;\n\n        // If there are media elements with data-autoplay,\n        // automatically set the autoSlide duration to the\n        // length of that media. Not applicable if the slide\n        // is divided up into fragments.\n        // playbackRate is accounted for in the duration.\n        if (currentSlide.querySelectorAll('.fragment').length === 0) {\n          Util.queryAll(currentSlide, 'video, audio').forEach((el) => {\n            if (el.hasAttribute('data-autoplay')) {\n              if (\n                autoSlide &&\n                (el.duration * 1000) / el.playbackRate > autoSlide\n              ) {\n                autoSlide = (el.duration * 1000) / el.playbackRate + 1000;\n              }\n            }\n          });\n        }\n      }\n\n      // Cue the next auto-slide if:\n      // - There is an autoSlide value\n      // - Auto-sliding isn't paused by the user\n      // - The presentation isn't paused\n      // - The overview isn't active\n      // - The presentation isn't over\n      if (\n        autoSlide &&\n        !autoSlidePaused &&\n        !isPaused() &&\n        !overview.isActive() &&\n        (!isLastSlide() ||\n          fragments.availableRoutes().next ||\n          config.loop === true)\n      ) {\n        autoSlideTimeout = setTimeout(() => {\n          if (typeof config.autoSlideMethod === 'function') {\n            config.autoSlideMethod();\n          } else {\n            navigateNext();\n          }\n          cueAutoSlide();\n        }, autoSlide);\n        autoSlideStartTime = Date.now();\n      }\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(autoSlideTimeout !== -1);\n      }\n    }\n  }\n\n  /**\n   * Cancels any ongoing request to auto-slide.\n   */\n  function cancelAutoSlide() {\n    clearTimeout(autoSlideTimeout);\n    autoSlideTimeout = -1;\n  }\n\n  function pauseAutoSlide() {\n    if (autoSlide && !autoSlidePaused) {\n      autoSlidePaused = true;\n      dispatchEvent({ type: 'autoslidepaused' });\n      clearTimeout(autoSlideTimeout);\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(false);\n      }\n    }\n  }\n\n  function resumeAutoSlide() {\n    if (autoSlide && autoSlidePaused) {\n      autoSlidePaused = false;\n      dispatchEvent({ type: 'autoslideresumed' });\n      cueAutoSlide();\n    }\n  }\n\n  function navigateLeft({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true;\n\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.prev();\n\n    // Reverse for RTL\n    if (config.rtl) {\n      if (\n        (overview.isActive() || skipFragments || fragments.next() === false) &&\n        availableRoutes().left\n      ) {\n        slide(\n          indexh + 1,\n          config.navigationMode === 'grid' ? indexv : undefined\n        );\n      }\n    }\n    // Normal navigation\n    else if (\n      (overview.isActive() || skipFragments || fragments.prev() === false) &&\n      availableRoutes().left\n    ) {\n      slide(indexh - 1, config.navigationMode === 'grid' ? indexv : undefined);\n    }\n  }\n\n  function navigateRight({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true;\n\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.next();\n\n    // Reverse for RTL\n    if (config.rtl) {\n      if (\n        (overview.isActive() || skipFragments || fragments.prev() === false) &&\n        availableRoutes().right\n      ) {\n        slide(\n          indexh - 1,\n          config.navigationMode === 'grid' ? indexv : undefined\n        );\n      }\n    }\n    // Normal navigation\n    else if (\n      (overview.isActive() || skipFragments || fragments.next() === false) &&\n      availableRoutes().right\n    ) {\n      slide(indexh + 1, config.navigationMode === 'grid' ? indexv : undefined);\n    }\n  }\n\n  function navigateUp({ skipFragments = false } = {}) {\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.prev();\n\n    // Prioritize hiding fragments\n    if (\n      (overview.isActive() || skipFragments || fragments.prev() === false) &&\n      availableRoutes().up\n    ) {\n      slide(indexh, indexv - 1);\n    }\n  }\n\n  function navigateDown({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedVertically = true;\n\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.next();\n\n    // Prioritize revealing fragments\n    if (\n      (overview.isActive() || skipFragments || fragments.next() === false) &&\n      availableRoutes().down\n    ) {\n      slide(indexh, indexv + 1);\n    }\n  }\n\n  /**\n   * Navigates backwards, prioritized in the following order:\n   * 1) Previous fragment\n   * 2) Previous vertical slide\n   * 3) Previous horizontal slide\n   */\n  function navigatePrev({ skipFragments = false } = {}) {\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.prev();\n\n    // Prioritize revealing fragments\n    if (skipFragments || fragments.prev() === false) {\n      if (availableRoutes().up) {\n        navigateUp({ skipFragments });\n      } else {\n        // Fetch the previous horizontal slide, if there is one\n        let previousSlide;\n\n        if (config.rtl) {\n          previousSlide = Util.queryAll(\n            dom.wrapper,\n            HORIZONTAL_SLIDES_SELECTOR + '.future'\n          ).pop();\n        } else {\n          previousSlide = Util.queryAll(\n            dom.wrapper,\n            HORIZONTAL_SLIDES_SELECTOR + '.past'\n          ).pop();\n        }\n\n        // When going backwards and arriving on a stack we start\n        // at the bottom of the stack\n        if (previousSlide && previousSlide.classList.contains('stack')) {\n          let v =\n            previousSlide.querySelectorAll('section').length - 1 || undefined;\n          let h = indexh - 1;\n          slide(h, v);\n        } else {\n          navigateLeft({ skipFragments });\n        }\n      }\n    }\n  }\n\n  /**\n   * The reverse of #navigatePrev().\n   */\n  function navigateNext({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true;\n    navigationHistory.hasNavigatedVertically = true;\n\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.next();\n\n    // Prioritize revealing fragments\n    if (skipFragments || fragments.next() === false) {\n      let routes = availableRoutes();\n\n      // When looping is enabled `routes.down` is always available\n      // so we need a separate check for when we've reached the\n      // end of a stack and should move horizontally\n      if (routes.down && routes.right && config.loop && isLastVerticalSlide()) {\n        routes.down = false;\n      }\n\n      if (routes.down) {\n        navigateDown({ skipFragments });\n      } else {\n        navigateRight({ skipFragments });\n      }\n    }\n  }\n\n  // --------------------------------------------------------------------//\n  // ----------------------------- EVENTS -------------------------------//\n  // --------------------------------------------------------------------//\n\n  /**\n   * Called by all event handlers that are based on user\n   * input.\n   *\n   * @param {object} [event]\n   */\n  function onUserInput(event) {\n    if (config.autoSlideStoppable) {\n      pauseAutoSlide();\n    }\n  }\n\n  /**\n   * Listener for post message events posted to this window.\n   */\n  function onPostMessage(event) {\n    let data = event.data;\n\n    // Make sure we're dealing with JSON\n    if (\n      typeof data === 'string' &&\n      data.charAt(0) === '{' &&\n      data.charAt(data.length - 1) === '}'\n    ) {\n      data = JSON.parse(data);\n\n      // Check if the requested method can be found\n      if (data.method && typeof Reveal[data.method] === 'function') {\n        if (POST_MESSAGE_METHOD_BLACKLIST.test(data.method) === false) {\n          const result = Reveal[data.method].apply(Reveal, data.args);\n\n          // Dispatch a postMessage event with the returned value from\n          // our method invocation for getter functions\n          dispatchPostMessage('callback', {\n            method: data.method,\n            result: result,\n          });\n        } else {\n          console.warn(\n            'reveal.js: \"' +\n              data.method +\n              '\" is is blacklisted from the postMessage API'\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Event listener for transition end on the current slide.\n   *\n   * @param {object} [event]\n   */\n  function onTransitionEnd(event) {\n    if (transition === 'running' && /section/gi.test(event.target.nodeName)) {\n      transition = 'idle';\n      dispatchEvent({\n        type: 'slidetransitionend',\n        data: { indexh, indexv, previousSlide, currentSlide },\n      });\n    }\n  }\n\n  /**\n   * A global listener for all click events inside of the\n   * .slides container.\n   *\n   * @param {object} [event]\n   */\n  function onSlidesClicked(event) {\n    const anchor = Util.closest(event.target, 'a[href^=\"#\"]');\n\n    // If a hash link is clicked, we find the target slide\n    // and navigate to it. We previously relied on 'hashchange'\n    // for links like these but that prevented media with\n    // audio tracks from playing in mobile browsers since it\n    // wasn't considered a direct interaction with the document.\n    if (anchor) {\n      const hash = anchor.getAttribute('href');\n      const indices = location.getIndicesFromHash(hash);\n\n      if (indices) {\n        Reveal.slide(indices.h, indices.v, indices.f);\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Handler for the window level 'resize' event.\n   *\n   * @param {object} [event]\n   */\n  function onWindowResize(event) {\n    layout();\n  }\n\n  /**\n   * Handle for the window level 'visibilitychange' event.\n   *\n   * @param {object} [event]\n   */\n  function onPageVisibilityChange(event) {\n    // If, after clicking a link or similar and we're coming back,\n    // focus the document.body to ensure we can use keyboard shortcuts\n    if (document.hidden === false && document.activeElement !== document.body) {\n      // Not all elements support .blur() - SVGs among them.\n      if (typeof document.activeElement.blur === 'function') {\n        document.activeElement.blur();\n      }\n      document.body.focus();\n    }\n  }\n\n  /**\n   * Handler for the document level 'fullscreenchange' event.\n   *\n   * @param {object} [event]\n   */\n  function onFullscreenChange(event) {\n    let element =\n      document.fullscreenElement || document.webkitFullscreenElement;\n    if (element === dom.wrapper) {\n      event.stopImmediatePropagation();\n\n      // Timeout to avoid layout shift in Safari\n      setTimeout(() => {\n        Reveal.layout();\n        Reveal.focus.focus(); // focus.focus :'(\n      }, 1);\n    }\n  }\n\n  /**\n   * Handles clicks on links that are set to preview in the\n   * iframe overlay.\n   *\n   * @param {object} event\n   */\n  function onPreviewLinkClicked(event) {\n    if (event.currentTarget && event.currentTarget.hasAttribute('href')) {\n      let url = event.currentTarget.getAttribute('href');\n      if (url) {\n        showPreview(url);\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Handles click on the auto-sliding controls element.\n   *\n   * @param {object} [event]\n   */\n  function onAutoSlidePlayerClick(event) {\n    // Replay\n    if (isLastSlide() && config.loop === false) {\n      slide(0, 0);\n      resumeAutoSlide();\n    }\n    // Resume\n    else if (autoSlidePaused) {\n      resumeAutoSlide();\n    }\n    // Pause\n    else {\n      pauseAutoSlide();\n    }\n  }\n\n  // --------------------------------------------------------------------//\n  // ------------------------------- API --------------------------------//\n  // --------------------------------------------------------------------//\n\n  // The public reveal.js API\n  const API = {\n    VERSION,\n\n    initialize,\n    configure,\n    destroy,\n\n    sync,\n    syncSlide,\n    syncFragments: fragments.sync.bind(fragments),\n\n    // Navigation methods\n    slide,\n    left: navigateLeft,\n    right: navigateRight,\n    up: navigateUp,\n    down: navigateDown,\n    prev: navigatePrev,\n    next: navigateNext,\n\n    // Navigation aliases\n    navigateLeft,\n    navigateRight,\n    navigateUp,\n    navigateDown,\n    navigatePrev,\n    navigateNext,\n\n    // Fragment methods\n    navigateFragment: fragments.goto.bind(fragments),\n    prevFragment: fragments.prev.bind(fragments),\n    nextFragment: fragments.next.bind(fragments),\n\n    // Event binding\n    on,\n    off,\n\n    // Legacy event binding methods left in for backwards compatibility\n    addEventListener: on,\n    removeEventListener: off,\n\n    // Forces an update in slide layout\n    layout,\n\n    // Randomizes the order of slides\n    shuffle,\n\n    // Returns an object with the available routes as booleans (left/right/top/bottom)\n    availableRoutes,\n\n    // Returns an object with the available fragments as booleans (prev/next)\n    availableFragments: fragments.availableRoutes.bind(fragments),\n\n    // Toggles a help overlay with keyboard shortcuts\n    toggleHelp,\n\n    // Toggles the overview mode on/off\n    toggleOverview: overview.toggle.bind(overview),\n\n    // Toggles the scroll view on/off\n    toggleScrollView: scrollView.toggle.bind(scrollView),\n\n    // Toggles the \"black screen\" mode on/off\n    togglePause,\n\n    // Toggles the auto slide mode on/off\n    toggleAutoSlide,\n\n    // Toggles visibility of the jump-to-slide UI\n    toggleJumpToSlide,\n\n    // Slide navigation checks\n    isFirstSlide,\n    isLastSlide,\n    isLastVerticalSlide,\n    isVerticalSlide,\n    isVerticalStack,\n\n    // State checks\n    isPaused,\n    isAutoSliding,\n    isSpeakerNotes: notes.isSpeakerNotesWindow.bind(notes),\n    isOverview: overview.isActive.bind(overview),\n    isFocused: focus.isFocused.bind(focus),\n\n    isScrollView: scrollView.isActive.bind(scrollView),\n    isPrintView: printView.isActive.bind(printView),\n\n    // Checks if reveal.js has been loaded and is ready for use\n    isReady: () => ready,\n\n    // Slide preloading\n    loadSlide: slideContent.load.bind(slideContent),\n    unloadSlide: slideContent.unload.bind(slideContent),\n\n    // Media playback\n    startEmbeddedContent: () => slideContent.startEmbeddedContent(currentSlide),\n    stopEmbeddedContent: () =>\n      slideContent.stopEmbeddedContent(currentSlide, { unloadIframes: false }),\n\n    // Preview management\n    showPreview,\n    hidePreview: closeOverlay,\n\n    // Adds or removes all internal event listeners\n    addEventListeners,\n    removeEventListeners,\n    dispatchEvent,\n\n    // Facility for persisting and restoring the presentation state\n    getState,\n    setState,\n\n    // Presentation progress on range of 0-1\n    getProgress,\n\n    // Returns the indices of the current, or specified, slide\n    getIndices,\n\n    // Returns an Array of key:value maps of the attributes of each\n    // slide in the deck\n    getSlidesAttributes,\n\n    // Returns the number of slides that we have passed\n    getSlidePastCount,\n\n    // Returns the total number of slides\n    getTotalSlides,\n\n    // Returns the slide element at the specified index\n    getSlide,\n\n    // Returns the previous slide element, may be null\n    getPreviousSlide: () => previousSlide,\n\n    // Returns the current slide element\n    getCurrentSlide: () => currentSlide,\n\n    // Returns the slide background element at the specified index\n    getSlideBackground,\n\n    // Returns the speaker notes string for a slide, or null\n    getSlideNotes: notes.getSlideNotes.bind(notes),\n\n    // Returns an Array of all slides\n    getSlides,\n\n    // Returns an array with all horizontal/vertical slides in the deck\n    getHorizontalSlides,\n    getVerticalSlides,\n\n    // Checks if the presentation contains two or more horizontal\n    // and vertical slides\n    hasHorizontalSlides,\n    hasVerticalSlides,\n\n    // Checks if the deck has navigated on either axis at least once\n    hasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n    hasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n    shouldAutoAnimateBetween,\n\n    // Adds/removes a custom key binding\n    addKeyBinding: keyboard.addKeyBinding.bind(keyboard),\n    removeKeyBinding: keyboard.removeKeyBinding.bind(keyboard),\n\n    // Programmatically triggers a keyboard event\n    triggerKey: keyboard.triggerKey.bind(keyboard),\n\n    // Registers a new shortcut to include in the help overlay\n    registerKeyboardShortcut: keyboard.registerKeyboardShortcut.bind(keyboard),\n\n    getComputedSlideSize,\n    setCurrentScrollPage,\n\n    // Returns the current scale of the presentation content\n    getScale: () => scale,\n\n    // Returns the current configuration object\n    getConfig: () => config,\n\n    // Helper method, retrieves query string as a key:value map\n    getQueryHash: Util.getQueryHash,\n\n    // Returns the path to the current slide as represented in the URL\n    getSlidePath: location.getHash.bind(location),\n\n    // Returns reveal.js DOM elements\n    getRevealElement: () => revealElement,\n    getSlidesElement: () => dom.slides,\n    getViewportElement: () => dom.viewport,\n    getBackgroundsElement: () => backgrounds.element,\n\n    // API for registering and retrieving plugins\n    registerPlugin: plugins.registerPlugin.bind(plugins),\n    hasPlugin: plugins.hasPlugin.bind(plugins),\n    getPlugin: plugins.getPlugin.bind(plugins),\n    getPlugins: plugins.getRegisteredPlugins.bind(plugins),\n  };\n\n  // Our internal API which controllers have access to\n  Util.extend(Reveal, {\n    ...API,\n\n    // Methods for announcing content to screen readers\n    announceStatus,\n    getStatusText,\n\n    // Controllers\n    focus,\n    scroll: scrollView,\n    progress,\n    controls,\n    location,\n    overview,\n    fragments,\n    backgrounds,\n    slideContent,\n    slideNumber,\n\n    onUserInput,\n    closeOverlay,\n    updateSlidesVisibility,\n    layoutSlideContents,\n    transformSlides,\n    cueAutoSlide,\n    cancelAutoSlide,\n  });\n\n  return API;\n}\n","import Deck, { VERSION } from './reveal.js';\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = (options) => {\n  // Create our singleton reveal.js instance\n  Object.assign(Reveal, new Deck(document.querySelector('.reveal'), options));\n\n  // Invoke any enqueued API calls\n  enqueuedAPICalls.map((method) => method(Reveal));\n\n  return Reveal.initialize();\n};\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[\n  'configure',\n  'on',\n  'off',\n  'addEventListener',\n  'removeEventListener',\n  'registerPlugin',\n].forEach((method) => {\n  Reveal[method] = (...args) => {\n    enqueuedAPICalls.push((deck) => deck[method].call(null, ...args));\n  };\n});\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;\n"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","enterFullscreen","requestMethod","document","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","apply","createStyleSheet","tag","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","isScrollView","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeRFC3986URI","url","encodeURI","charCodeAt","toString","toUpperCase","decodeURI","join","isSpeakerNotes","video","muted","sourceElement","getMimeTypeFromFile","filename","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintView","showSlideNumber","update","innerHTML","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","getHash","formatNumber","delimiter","isNaN","destroy","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","slideNumberFormat","getSlides","parseInt","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","contains","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","indexv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","ScrollView","activatedCallbacks","onScroll","activate","stateBeforeActivation","getState","slideHTMLBeforeActivation","horizontalBackgrounds","presentationBackground","viewportElement","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","isVertical","contentContainer","shouldAutoAnimateBetween","page","slideBackground","pageBackground","stickyContainer","insertBefore","horizontalSlide","isVerticalStack","verticalSlide","createProgressBar","stack","setState","callback","restoreScrollPosition","passive","deactivate","stateBeforeDeactivation","removeProgressBar","toggle","override","isActive","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","progress","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","preventDefault","syncPages","syncScrollPosition","slideSize","getComputedSlideSize","innerWidth","innerHeight","useCompactLayout","scrollLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","setProperty","scrollSnapType","scrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","removeProperty","scrollPadding","totalHeight","position","setTriggerRanges","scrollProgress","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","fragmentGroups","fragments","sort","autoAnimateElement","autoAnimatePage","indexh","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","prev","next","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","pathname","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","getViewportElement","PrintView","slides","injectPageNumbers","pageWidth","floor","margin","Promise","body","layoutSlideContents","slideScrollHeights","left","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","fragment","clonedPage","cloneNode","fragmentNumber","view","Fragments","disable","enable","availableRoutes","hiddenFragments","grouped","ordered","unordered","sorted","group","sortAll","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","fragmentInURL","writeURL","Overview","onSlideClicked","overview","cancelAutoSlide","getBackgroundsElement","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","transformSlides","cueAutoSlide","Keyboard","shortcuts","bindings","onDocumentKeyDown","navigationMode","unbind","addKeyBinding","binding","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","action","skipFragments","right","undefined","up","Number","MAX_VALUE","down","includes","togglePause","embedded","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","toggleHelp","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","onEnterFullscreen","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsFullscreen","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","viewport","parentElement","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","scrollActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","Deck","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollLeft","onFullscreenChange","activatePrintView","activateScrollView","removeEventListeners","activateInitialView","text","nodeType","isAriaHidden","isDisplayHidden","child","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","checkResponsiveScrollView","remainingHeight","getRemainingHeight","newHeight","oldHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","getSlide","indexf","paused","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","isOverview","loadSlide","unloadSlide","hidePreview","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","scroll","enqueuedAPICalls","deck"],"mappings":"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","x_google_ignoreList":[2]}